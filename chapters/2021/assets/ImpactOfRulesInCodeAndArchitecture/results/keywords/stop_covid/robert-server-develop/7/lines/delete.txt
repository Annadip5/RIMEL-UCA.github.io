./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/ICryptoServerGrpcClient.java:20:	Optional<DeleteIdResponse> deleteId(DeleteIdRequest request);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:112:    public Optional<DeleteIdResponse> deleteId(DeleteIdRequest request) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:114:            DeleteIdResponse response = this.blockingStub.deleteId(request);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:28:	rpc deleteId(DeleteIdRequest) returns (DeleteIdResponse){}
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:114:message DeleteIdRequest {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:121:message DeleteIdResponse {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:96:            // For JDK 1.9+, uncomment line below and delete code above
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/IClientKeyStorageService.java:26:     * Delete the record corresponding to the provided id, effectively destroying the key
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/IClientKeyStorageService.java:28:    void deleteClientId(byte[] id);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:57:        this.clientIdentifierRepository.delete(c);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:220:    public void deleteClientId(byte[] id) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:221:        this.clientIdentifierRepository.findByIdA(Base64.encode(id)).ifPresent(this.clientIdentifierRepository::delete);
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:128:        public void deleteById(Long aLong) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:133:        public void delete(ClientIdentifier clientIdentifier) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:138:        public void deleteAll(Iterable<? extends ClientIdentifier> iterable) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:143:        public void deleteAll() {
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:194:        public void deleteInBatch(Iterable<ClientIdentifier> iterable) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:199:        public void deleteAllInBatch() {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:28:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:29:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:457:    public void deleteId(DeleteIdRequest request,
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:458:                         StreamObserver<DeleteIdResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:471:            DeleteIdResponse.Builder responseBuilder = DeleteIdResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:483:        this.clientStorageService.deleteClientId(validationResult.get().getId());
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:485:        responseObserver.onNext(DeleteIdResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:50:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdRequest;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:51:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:499:                DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:529:                DigestSaltEnum.DELETE_HISTORY,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:561:                DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:595:                DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:639:                .setRequestType(DigestSaltEnum.DELETE_HISTORY.getValue()) // Select a request type
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:660:                DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:690:                DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:720:                DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:761:                DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:791:                DigestSaltEnum.DELETE_HISTORY,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:830:                DigestSaltEnum.DELETE_HISTORY,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:862:                DigestSaltEnum.DELETE_HISTORY,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:889:    void testDeleteIdSucceeds() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:897:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:906:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:909:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:918:    void testDeleteIdUnknownIdFails() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:937:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:946:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:949:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:958:    void testDeleteIdFakeEBIDFails() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:970:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:979:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:982:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:991:    void testDeleteIdBadMacFails() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1005:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1014:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1017:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1026:    void testDeleteIdEpochIdsDoNotMatchFails() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1034:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1043:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1046:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1055:    void testDeleteIdNegativeTimeFails() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1063:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1072:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1075:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1084:    void tesDeleteIdWithEbidEncodedWithPreviousKSSucceeds() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1101:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1110:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1113:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1123:    void testDeleteIdWithEbidEncodedWithFutureKSFails() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1133:        DeleteIdRequest request = DeleteIdRequest
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1142:        DeleteIdResponse response =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1145:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1901:        public void deleteClientId(byte[] id) {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/PopulateIdMappingListener.java:20:        itemIdMappingService.deleteAll();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:36:        itemIdMappingService.deleteAll();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:68:        itemIdMappingService.deleteAll();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/ItemIdMappingService.java:6:    void deleteAll();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ItemIdMappingServiceImpl.java:25:    public void deleteAll() {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ItemIdMappingServiceImpl.java:26:        itemIdMappingRepository.deleteAll();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:34:            log.info("== Start the delete of contact list ==");
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:36:            deleteContactList((List<Contact>)items);
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:38:            log.info("== End of the delete of contact list ==");
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:40:            log.info("== There aren't any Contact to delete.");
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:45:     * Delete Contacts
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:49:    private void deleteContactList(List<Contact> contactList){
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:53:        contactService.deleteAll(contactList);
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:59:        log.info("Execution duration of the update/delete of data : {} second(s).", timeElapsed);
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:249:			this.registrationService.delete(this.registration.get());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1120:		this.contactService.deleteAll();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1121:		this.registrationService.deleteAll();
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/DigestSaltEnum.java:10:    DELETE_HISTORY((byte)0x04);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/ContactService.java:12:	void delete(Contact contact);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/ContactService.java:14:	void deleteAll();
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/ContactService.java:16:	void deleteAll(List<Contact> contacts);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/IRegistrationService.java:18:	void delete(Registration registration);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/IRegistrationService.java:20:	void deleteAll();
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:37:	public void delete(Contact contact) {
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:39:		Optional.ofNullable(contact).ifPresent(this.contactRepository::delete);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:43:	public void deleteAll(List<Contact> contacts) {
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:45:			this.contactRepository.deleteAll(contacts);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:50:	public void deleteAll() {
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:51:		this.contactRepository.deleteAll();
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:53:    public void delete(Registration registration) {
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:54:        Optional.ofNullable(registration).ifPresent(this.registrationRepository::delete);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:58:    public void deleteAll() {
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:59:        this.registrationRepository.deleteAll();
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:54:	public void testDeleteWhenIsNull() {
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:57:		this.contactService.delete(null);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:60:		verify(this.contactRepository, never()).delete(any());
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:64:	public void testDeleteWhenNotNull() {
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:70:		this.contactService.delete(contact);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:73:		verify(this.contactRepository).delete(contact);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:77:	public void testDeleteAllWhenNotNull() {
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:80:		this.contactService.deleteAll(null);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:83:		verify(this.contactRepository, never()).deleteAll(any());
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:87:	public void testDeleteAllWhenIsNull() {
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:95:		this.contactService.deleteAll(contacts);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:98:		verify(this.contactRepository).deleteAll(contacts);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:167:	public void testDeleteWhenIsNull() {
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:170:		this.registrationService.delete(null);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:173:		verify(this.registrationRepository, never()).delete(any());
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:177:	public void testDeleteWhenNotNull() {
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:183:		this.registrationService.delete(registration);
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:186:		verify(this.registrationRepository).delete(registration);
./robert-server-develop/robert-server-dataset-injector/README.md:20:Concretely, this script actually deletes all entries of the associated collections of contacts and registrations.
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:14:import fr.gouv.stopc.robertserver.ws.dto.DeleteHistoryResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:17:import fr.gouv.stopc.robertserver.ws.vo.DeleteHistoryRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:24:public interface IDeleteHistoryController {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:26:	@PostMapping(value = UriConstants.DELETE_HISTORY)
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:27:	ResponseEntity<DeleteHistoryResponseDto> deleteHistory(
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:28:			@Valid @RequestBody(required = true) DeleteHistoryRequestVo deleteExposureRequestVo)
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:8:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:19:import fr.gouv.stopc.robertserver.ws.controller.IDeleteHistoryController;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:20:import fr.gouv.stopc.robertserver.ws.dto.DeleteHistoryResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:23:import fr.gouv.stopc.robertserver.ws.vo.DeleteHistoryRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:28:public class DeleteHistoryControllerImpl implements IDeleteHistoryController {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:34:	public DeleteHistoryControllerImpl(final IRegistrationService registrationService,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:41:	public ResponseEntity<DeleteHistoryResponseDto> deleteHistory(DeleteHistoryRequestVo deleteHistoryRequestVo)
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:43:		log.info("Receiving delete exposure history request");
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:46:				this.authRequestValidationService.validateRequestForAuth(deleteHistoryRequestVo, DigestSaltEnum.DELETE_HISTORY);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:49:			log.info("Delete exposure history request authentication failed");
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:52:		log.info("Delete exposure history request authentication passed");
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:66:			log.info("Delete exposure history request successful");
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:67:			return ResponseEntity.ok(DeleteHistoryResponseDto.builder().success(true).build());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:69:			log.info("Discarding delete exposure history request because id unknown (fake or was deleted)");
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:120:			log.info("Discarding status request because id unknown (fake or was deleted)");
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:11:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:40:        AuthRequestValidationService.ValidationResult<DeleteIdResponse> validationResult =
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:47:        DeleteIdResponse authResponse = validationResult.getResponse();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:55:            this.registrationService.delete(record);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/DeleteHistoryResponseDto.java:14:public class DeleteHistoryResponseDto {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:3:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:29:    ValidationResult<DeleteIdResponse> validateRequestForUnregister(AuthRequestVo authRequestVo);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:135:    public ValidationResult<DeleteIdResponse> validateRequestForUnregister(AuthRequestVo authRequestVo) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:139:            return ValidationResult.<DeleteIdResponse>builder().error(validationError.get()).build();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:143:            DeleteIdRequest request = DeleteIdRequest.newBuilder()
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:150:            Optional<DeleteIdResponse> response = this.cryptoServerClient.deleteId(request);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:161:                return ValidationResult.<DeleteIdResponse>builder().response(response.get()).build();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:163:                return ValidationResult.<DeleteIdResponse>builder().error(createErrorValidationFailed()).build();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:166:            return ValidationResult.<DeleteIdResponse>builder().error(createErrorTechnicalIssue()).build();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:123:                    .delete()
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/UriConstants.java:18:    public static final String DELETE_HISTORY = "/deleteExposureHistory";
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/DeleteHistoryRequestVo.java:5:public class DeleteHistoryRequestVo extends AuthRequestVo {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/DeleteHistoryRequestVo.java:8:	public DeleteHistoryRequestVo(String ebid, Integer epochId, String time, String mac) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:61:import fr.gouv.stopc.robertserver.ws.dto.DeleteHistoryResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:64:import fr.gouv.stopc.robertserver.ws.vo.DeleteHistoryRequestVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:73:public class DeleteHistoryControllerWsRestTest {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:88:    HttpEntity<DeleteHistoryRequestVo> requestEntity;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:92:    private DeleteHistoryRequestVo requestBody;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:121:        this.targetUrl = UriComponentsBuilder.fromUriString(this.pathPrefix).path(UriConstants.DELETE_HISTORY).build()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:132:        this.requestBody = DeleteHistoryRequestVo.builder().ebid(Base64.encode(new byte[4])).build();
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:144:    public void testDeleteHistoryNoExposedEpochsSucceeds() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:167:        this.requestBody = DeleteHistoryRequestVo.builder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:181:        deleteHistoryWithExposedEpochsSucceeds(UriComponentsBuilder.fromUriString(this.pathPrefixV2).path(UriConstants.DELETE_HISTORY).build().encode().toUri());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:187:        deleteHistoryWithExposedEpochsSucceeds(UriComponentsBuilder.fromUriString(this.pathPrefixV3).path(UriConstants.DELETE_HISTORY).build().encode().toUri());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:190:    /** {@link #deleteHistoryWithExposedEpochsSucceeds(URI)} and shortcut to test for API V2 exposure */
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:192:    public void testDeleteHistoryWithExposedEpochsSucceedsV3() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:193:        deleteHistoryWithExposedEpochsSucceeds(this.targetUrl);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:196:    protected  void deleteHistoryWithExposedEpochsSucceeds(URI targetUrl) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:220:        this.requestBody = DeleteHistoryRequestVo.builder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:229:        ResponseEntity<DeleteHistoryResponseDto> response = this.restTemplate.exchange(targetUrl.toString(),
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:230:                HttpMethod.POST, this.requestEntity, DeleteHistoryResponseDto.class);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:267:        this.requestBody = DeleteHistoryRequestVo.builder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:285:        this.requestBody = DeleteHistoryRequestVo.builder().ebid(Base64.encode("ABC".getBytes()))
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:321:        this.requestBody = DeleteHistoryRequestVo.builder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:340:        this.requestBody = DeleteHistoryRequestVo.builder().ebid(Base64.encode(reqContent[0]))
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:356:        this.requestBody = DeleteHistoryRequestVo.builder().ebid(Base64.encode(reqContent[0]))
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:371:        this.requestBody = DeleteHistoryRequestVo.builder().ebid(Base64.encode(reqContent[0]))
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:386:        this.requestBody = DeleteHistoryRequestVo.builder().ebid(Base64.encode(reqContent[0]))
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:418:        this.requestBody = DeleteHistoryRequestVo.builder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:520:    private void callWsAndAssertResponse(Registration reg, DeleteHistoryRequestVo requestBody,
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:524:        ResponseEntity<DeleteHistoryResponseDto> response = this.restTemplate.exchange(this.targetUrl.toString(),
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:525:                HttpMethod.POST, this.requestEntity, DeleteHistoryResponseDto.class);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:47:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:139:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:162:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:204:        doReturn(Optional.of(DeleteIdResponse.newBuilder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:207:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:224:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:226:        verify(this.registrationService, times(1)).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:254:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:281:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:304:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:327:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:351:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:367:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:369:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:472:        doReturn(Optional.of(DeleteIdResponse.newBuilder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:475:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:490:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:492:        verify(this.registrationService, times(1)).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:509:        doReturn(Optional.of(DeleteIdResponse.newBuilder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:512:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:530:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:532:        verify(this.registrationService, never()).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:550:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:552:        verify(this.registrationService, times(1)).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:571:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:573:        verify(this.registrationService, times(1)).delete(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:593:        doReturn(Optional.of(DeleteIdResponse.newBuilder()
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:596:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:273:        verify(this.webClient, never()).delete();
