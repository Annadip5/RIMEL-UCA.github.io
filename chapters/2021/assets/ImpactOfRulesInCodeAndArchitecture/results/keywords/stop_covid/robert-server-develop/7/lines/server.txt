./robert-server-develop/pom.xml:21:	<artifactId>robert-server</artifactId>
./robert-server-develop/pom.xml:23:	<name>robert-server</name>
./robert-server-develop/pom.xml:28:		<module>robert-server-ws-rest</module>
./robert-server-develop/pom.xml:29:		<module>robert-server-batch</module>
./robert-server-develop/pom.xml:30:		<module>robert-server-database</module>
./robert-server-develop/pom.xml:31:		<module>robert-server-crypto</module>
./robert-server-develop/pom.xml:32:		<module>robert-server-common</module>
./robert-server-develop/pom.xml:33:		<module>robert-crypto-grpc-server</module>
./robert-server-develop/pom.xml:34:		<module>robert-crypto-grpc-server-messaging</module>
./robert-server-develop/pom.xml:35:		<module>robert-crypto-grpc-server-storage</module>
./robert-server-develop/robert-crypto-grpc-server-messaging/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-crypto-grpc-server-messaging/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-crypto-grpc-server-messaging/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-crypto-grpc-server-messaging/pom.xml:19:	<artifactId>robert-crypto-grpc-server-messaging</artifactId>
./robert-server-develop/robert-crypto-grpc-server-messaging/pom.xml:20:	<name>robert-crypto-grpc-server-messaging</name>
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/ICryptoServerGrpcClient.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.client.service;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/ICryptoServerGrpcClient.java:5:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.*;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/ICryptoServerGrpcClient.java:8:public interface ICryptoServerGrpcClient {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.client.service.impl;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:6:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.*;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:12:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:13:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CryptoGrpcServiceImplGrpc.CryptoGrpcServiceImplBlockingStub;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:21:public class CryptoServerGrpcClient implements ICryptoServerGrpcClient {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:29:    public CryptoServerGrpcClient(){}
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:31:    public CryptoServerGrpcClient(String host, int port) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:35:    public CryptoServerGrpcClient(ManagedChannelBuilder<?> channelBuilder) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:40:    public CryptoServerGrpcClient(ManagedChannel channel) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:129:         * Used for verify/inspect message received from server.
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/client/service/impl/CryptoServerGrpcClient.java:134:         * Used for verify/inspect error received from server.
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:4:package fr.gouv.stopc.robert.crypto.grpc.server.service;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:18:    internal_static_robert_server_crypto_EphemeralTupleRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:21:    internal_static_robert_server_crypto_EphemeralTupleRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:23:    internal_static_robert_server_crypto_EphemeralTupleResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:26:    internal_static_robert_server_crypto_EphemeralTupleResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:28:    internal_static_robert_server_crypto_GenerateEBIDRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:31:    internal_static_robert_server_crypto_GenerateEBIDRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:33:    internal_static_robert_server_crypto_EBIDResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:36:    internal_static_robert_server_crypto_EBIDResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:38:    internal_static_robert_server_crypto_DecryptEBIDRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:41:    internal_static_robert_server_crypto_DecryptEBIDRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:43:    internal_static_robert_server_crypto_EncryptCountryCodeRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:46:    internal_static_robert_server_crypto_EncryptCountryCodeRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:48:    internal_static_robert_server_crypto_EncryptCountryCodeResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:51:    internal_static_robert_server_crypto_EncryptCountryCodeResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:53:    internal_static_robert_server_crypto_DecryptCountryCodeRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:56:    internal_static_robert_server_crypto_DecryptCountryCodeRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:58:    internal_static_robert_server_crypto_DecryptCountryCodeResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:61:    internal_static_robert_server_crypto_DecryptCountryCodeResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:63:    internal_static_robert_server_crypto_MacHelloGenerationRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:66:    internal_static_robert_server_crypto_MacHelloGenerationRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:68:    internal_static_robert_server_crypto_MacHelloGenerationResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:71:    internal_static_robert_server_crypto_MacHelloGenerationResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:73:    internal_static_robert_server_crypto_MacHelloValidationRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:76:    internal_static_robert_server_crypto_MacHelloValidationRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:78:    internal_static_robert_server_crypto_MacValidationResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:81:    internal_static_robert_server_crypto_MacValidationResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:83:    internal_static_robert_server_crypto_MacEsrValidationRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:86:    internal_static_robert_server_crypto_MacEsrValidationRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:88:    internal_static_robert_server_crypto_MacValidationForTypeRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:91:    internal_static_robert_server_crypto_MacValidationForTypeRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:93:    internal_static_robert_server_crypto_GenerateIdentityRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:96:    internal_static_robert_server_crypto_GenerateIdentityRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:98:    internal_static_robert_server_crypto_GenerateIdentityResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:101:    internal_static_robert_server_crypto_GenerateIdentityResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:103:    internal_static_robert_server_crypto_EncryptedEphemeralTupleRequest_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:106:    internal_static_robert_server_crypto_EncryptedEphemeralTupleRequest_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:108:    internal_static_robert_server_crypto_EncryptedEphemeralTupleResponse_descriptor;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:111:    internal_static_robert_server_crypto_EncryptedEphemeralTupleResponse_fieldAccessorTable;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:121:                "\n\024crypto_service.proto\022\024robert.server.cr" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:149:                        "ptedSharedKey\030\002 \001(\014\022\035\n\025serverPublicKeyFo" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:155:                        "\006tuples\030\001 \001(\014\022\037\n\027serverPublicKeyForTuple" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:157:                        "rateEphemeralTuple\022+.robert.server.crypt" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:158:                        "o.EphemeralTupleRequest\032,.robert.server." +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:160:                        "erateEBID\022).robert.server.crypto.Generat" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:161:                        "eEBIDRequest\032\".robert.server.crypto.EBID" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:165:                        "tryCode\022/.robert.server.crypto.EncryptCo" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:166:                        "untryCodeRequest\0320.robert.server.crypto." +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:168:                        "ountryCode\022/.robert.server.crypto.Decryp" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:169:                        "tCountryCodeRequest\0320.robert.server.cryp" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:171:                        "ateMacHello\022/.robert.server.crypto.MacHe" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:172:                        "lloGenerationRequest\0320.robert.server.cry" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:174:                        "dateMacHello\022/.robert.server.crypto.MacH" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:175:                        "elloValidationRequest\032+.robert.server.cr" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:177:                        "MacEsr\022-.robert.server.crypto.MacEsrVali" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:178:                        "dationRequest\032+.robert.server.crypto.Mac" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:180:                        "pe\0221.robert.server.crypto.MacValidationF" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:181:                        "orTypeRequest\032+.robert.server.crypto.Mac" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:183:                        "\022-.robert.server.crypto.GenerateIdentity" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:184:                        "Request\032..robert.server.crypto.GenerateI" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:186:                        "phemeralTuple\0224.robert.server.crypto.Enc" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:190:                        ".server.service.othersB\021CryptoGrpcServic" +
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:197:        internal_static_robert_server_crypto_EphemeralTupleRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:199:        internal_static_robert_server_crypto_EphemeralTupleRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:201:                        internal_static_robert_server_crypto_EphemeralTupleRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:203:        internal_static_robert_server_crypto_EphemeralTupleResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:205:        internal_static_robert_server_crypto_EphemeralTupleResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:207:                        internal_static_robert_server_crypto_EphemeralTupleResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:209:        internal_static_robert_server_crypto_GenerateEBIDRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:211:        internal_static_robert_server_crypto_GenerateEBIDRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:213:                        internal_static_robert_server_crypto_GenerateEBIDRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:215:        internal_static_robert_server_crypto_EBIDResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:217:        internal_static_robert_server_crypto_EBIDResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:219:                        internal_static_robert_server_crypto_EBIDResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:221:        internal_static_robert_server_crypto_DecryptEBIDRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:223:        internal_static_robert_server_crypto_DecryptEBIDRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:225:                        internal_static_robert_server_crypto_DecryptEBIDRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:227:        internal_static_robert_server_crypto_EncryptCountryCodeRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:229:        internal_static_robert_server_crypto_EncryptCountryCodeRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:231:                        internal_static_robert_server_crypto_EncryptCountryCodeRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:233:        internal_static_robert_server_crypto_EncryptCountryCodeResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:235:        internal_static_robert_server_crypto_EncryptCountryCodeResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:237:                        internal_static_robert_server_crypto_EncryptCountryCodeResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:239:        internal_static_robert_server_crypto_DecryptCountryCodeRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:241:        internal_static_robert_server_crypto_DecryptCountryCodeRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:243:                        internal_static_robert_server_crypto_DecryptCountryCodeRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:245:        internal_static_robert_server_crypto_DecryptCountryCodeResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:247:        internal_static_robert_server_crypto_DecryptCountryCodeResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:249:                        internal_static_robert_server_crypto_DecryptCountryCodeResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:251:        internal_static_robert_server_crypto_MacHelloGenerationRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:253:        internal_static_robert_server_crypto_MacHelloGenerationRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:255:                        internal_static_robert_server_crypto_MacHelloGenerationRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:257:        internal_static_robert_server_crypto_MacHelloGenerationResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:259:        internal_static_robert_server_crypto_MacHelloGenerationResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:261:                        internal_static_robert_server_crypto_MacHelloGenerationResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:263:        internal_static_robert_server_crypto_MacHelloValidationRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:265:        internal_static_robert_server_crypto_MacHelloValidationRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:267:                        internal_static_robert_server_crypto_MacHelloValidationRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:269:        internal_static_robert_server_crypto_MacValidationResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:271:        internal_static_robert_server_crypto_MacValidationResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:273:                        internal_static_robert_server_crypto_MacValidationResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:275:        internal_static_robert_server_crypto_MacEsrValidationRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:277:        internal_static_robert_server_crypto_MacEsrValidationRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:279:                        internal_static_robert_server_crypto_MacEsrValidationRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:281:        internal_static_robert_server_crypto_MacValidationForTypeRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:283:        internal_static_robert_server_crypto_MacValidationForTypeRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:285:                        internal_static_robert_server_crypto_MacValidationForTypeRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:287:        internal_static_robert_server_crypto_GenerateIdentityRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:289:        internal_static_robert_server_crypto_GenerateIdentityRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:291:                        internal_static_robert_server_crypto_GenerateIdentityRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:293:        internal_static_robert_server_crypto_GenerateIdentityResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:295:        internal_static_robert_server_crypto_GenerateIdentityResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:297:                        internal_static_robert_server_crypto_GenerateIdentityResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:298:                        new java.lang.String[] { "IdA", "EncryptedSharedKey", "ServerPublicKeyForKey", });
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:299:        internal_static_robert_server_crypto_EncryptedEphemeralTupleRequest_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:301:        internal_static_robert_server_crypto_EncryptedEphemeralTupleRequest_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:303:                        internal_static_robert_server_crypto_EncryptedEphemeralTupleRequest_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:305:        internal_static_robert_server_crypto_EncryptedEphemeralTupleResponse_descriptor =
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:307:        internal_static_robert_server_crypto_EncryptedEphemeralTupleResponse_fieldAccessorTable = new
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:309:                        internal_static_robert_server_crypto_EncryptedEphemeralTupleResponse_descriptor,
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/CryptoGrpcService.java:310:                        new java.lang.String[] { "Tuples", "ServerPublicKeyForTuple", });
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:17:option java_package = "fr.gouv.stopc.robert.crypto.grpc.server.messaging";
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:21:package robert.server.crypto;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:58:	bytes serverCountryCode = 4; // the country code configured on the server to be used when generating ECCs
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:88:	bytes serverCountryCode = 7;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/main/proto/crypto_service.proto:104:	bytes serverCountryCode = 6;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:1:package test.fr.gouv.stopc.robert.crypto.grpc.server.client;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:21:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.impl.CryptoServerGrpcClient;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:22:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.impl.CryptoServerGrpcClient.TestHelper;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:23:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CryptoGrpcServiceImplGrpc.CryptoGrpcServiceImplImplBase;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:26:import io.grpc.inprocess.InProcessServerBuilder;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:27:import io.grpc.stub.StreamObserver;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:32:public class CryptoServerGrpcClientTest {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:34:    private CryptoServerGrpcClient client;
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:46:        // Generate a unique in-process server name.
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:47:        String serverName = InProcessServerBuilder.generateName();
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:49:        grpcCleanup.register(InProcessServerBuilder.forName(serverName)
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:53:                InProcessChannelBuilder.forName(serverName).directExecutor().build());
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:55:        client = new CryptoServerGrpcClient(inProcessChannel);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:74://                    StreamObserver<EBIDResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:75://                responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:77://                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:110://                    StreamObserver<MacValidationResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:111://                responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:113://                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:146://                    StreamObserver<MacValidationResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:147://                responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:149://                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:180://                    StreamObserver<MacValidationResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:181://                responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:183://                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:214://                    StreamObserver<DecryptCountryCodeResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:215://                responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:217://                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:243://                .setServerPublicKeyForKey(ByteString.copyFrom(generate(32)))
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:249://                    StreamObserver<GenerateIdentityResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:250://                responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:252://                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:282://                .setServerPublicKeyForTuples(ByteString.copyFrom(generate(32)))
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:288://                    StreamObserver<EncryptedEphemeralTupleBundleResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:289://                responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server-messaging/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/client/CryptoServerGrpcClientTest.java:291://                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server-storage/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-crypto-grpc-server-storage/pom.xml:20:	<artifactId>robert-crypto-grpc-server-storage</artifactId>
./robert-server-develop/robert-crypto-grpc-server-storage/pom.xml:22:	<name>robert-crypto-grpc-server-storage</name>
./robert-server-develop/robert-crypto-grpc-server-storage/pom.xml:23:	<description>Storage management module in GRPC Crypto Server</description>
./robert-server-develop/robert-crypto-grpc-server-storage/pom.xml:52:			<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/ICryptographicStorageService.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/ICryptographicStorageService.java:16:    byte[] getServerKey(int epochId, long serviceTimeStart, boolean takePreviousDaysKey);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/ICryptographicStorageService.java:18:    byte[][] getServerKeys(int epochId, long serviceTimeStart, int nbDays);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/ICryptographicStorageService.java:24://    void addECDHKeys(String serverPublicKey, String serverPrivateKey);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/ICryptographicStorageService.java:27:    Optional<KeyPair> getServerKeyPair();
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/ICryptographicStorageService.java:32:    //Key getKeyForEncryptingServerKeys();
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.impl;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:34:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:35:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:44:    private static final int SERVER_KEY_SIZE = 24;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:49:    //private static final String ALIAS_SERVER_ECDH_PUBLIC_KEY = "server-ecdh-key";
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:50:    private static final String ALIAS_SERVER_ECDH_PRIVATE_KEY = "register-key"; // ECDH
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:51:    //private static final String ALIAS_SERVER_KEK = "server-key-encryption-key;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:54:    private static final String ALIAS_SERVER_KEY_PREFIX = "server-key-"; // K_S
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:61:    private Map<String, byte[]> serverKeyCache;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:83:        serverKeyCache = new HashMap<>();
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:128:    public Optional<KeyPair> getServerKeyPair() {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:137:                        PrivateKey privateKey = (PrivateKey) this.keyStore.getKey(ALIAS_SERVER_ECDH_PRIVATE_KEY, null);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:138:                        PublicKey publicKey = this.keyStore.getCertificate(ALIAS_SERVER_ECDH_PRIVATE_KEY).getPublicKey();
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:143:                        log.error("Unable to retrieve the server key pair due to {}", e.getMessage());
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:206:    public byte[] getServerKey(int epochId, long serviceTimeStart, boolean takePreviousDaysKey) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:218:        return getServerKey(dateFromEpoch);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:221:    private byte[] getServerKey(LocalDate dateFromEpoch) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:222:        byte[] serverKey = null;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:226:            String alias = String.format("%s%s", ALIAS_SERVER_KEY_PREFIX, dateFromEpoch.format(dateFormatter));
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:227:            if (this.serverKeyCache.containsKey(alias)) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:228:                serverKey = this.serverKeyCache.get(alias);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:232:                    if (!this.serverKeyCache.containsKey(alias)) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:237:                            serverKey = key.getEncoded();
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:238:                            this.serverKeyCache.put(alias, serverKey);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:241:                        serverKey = this.serverKeyCache.get(alias);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:249:        return serverKey;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:253:    public byte[][] getServerKeys(int epochId, long timeStart, int nbDays) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:261:        byte[][] keyMap = new byte[nbDays][SERVER_KEY_SIZE];
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:263:            keyMap[i] = this.getServerKey(dateFromEpoch.plusDays(i));
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:302:            this.serverKeyCache.clear();
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:330:        log.info("Caching server key pair");
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:331:        this.getServerKeyPair();
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:334:        LocalDate dateForCachedServerKey = LocalDate.now(ZoneId.of("UTC"));
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:337:            log.info("Caching future server key for {}", dateForCachedServerKey);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:338:            res = this.getServerKey(dateForCachedServerKey);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:339:            dateForCachedServerKey = dateForCachedServerKey.plusDays(1);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:343:        dateForCachedServerKey = LocalDate.now(ZoneId.of("UTC")).minusDays(1);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:345:            log.info("Caching past server key for {}", dateForCachedServerKey);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:346:            res = this.getServerKey(dateForCachedServerKey);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:347:            dateForCachedServerKey = dateForCachedServerKey.minusDays(1);
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:357:                aliases.add(String.format("Server Public ECDH Key '%s'", ALIAS_SERVER_ECDH_PRIVATE_KEY));
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:360:                aliases.add(String.format("Server Private ECDH Key '%s'", ALIAS_SERVER_ECDH_PRIVATE_KEY));
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:372:        if (!CollectionUtils.isEmpty(this.serverKeyCache)) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/cryptographic/service/impl/CryptographicStorageServiceImpl.java:373:            aliases.addAll(this.serverKeyCache.keySet().stream().map(elt -> String.format("Server Key '%s'", elt)).collect(Collectors.toList()));
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/database/config/AuditorAwareImpl.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.database.config;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/database/config/JpaConfig.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.database.config;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/database/model/ClientIdentifier.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.database.model;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/database/repository/ClientIdentifierRepository.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.database.repository;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/database/repository/ClientIdentifierRepository.java:8:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.model.ClientIdentifier;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/exception/RobertServerStorageException.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.exception;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/exception/RobertServerStorageException.java:10:public class RobertServerStorageException extends Exception {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/exception/RobertServerStorageException.java:18:    public RobertServerStorageException(String message) {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/model/ClientIdentifierBundle.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.model;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/IClientKeyStorageService.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.service;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/IClientKeyStorageService.java:5:import fr.gouv.stopc.robert.crypto.grpc.server.storage.exception.RobertServerStorageException;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/IClientKeyStorageService.java:6:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.storage.service.impl;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:24:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:25:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.model.ClientIdentifier;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:26:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.repository.ClientIdentifierRepository;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:27:import fr.gouv.stopc.robert.crypto.grpc.server.storage.exception.RobertServerStorageException;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:28:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:29:import fr.gouv.stopc.robert.crypto.grpc.server.storage.service.IClientKeyStorageService;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:30:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:60:    private byte[] generateRandomIdentifier() throws RobertServerStorageException {
./robert-server-develop/robert-crypto-grpc-server-storage/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageServiceImpl.java:69:            throw new RobertServerStorageException(
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:1:package test.fr.gouv.stopc.robert.crypto.grpc.server.storage.service.impl;
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:3:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:4:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.model.ClientIdentifier;
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:5:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.repository.ClientIdentifierRepository;
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:6:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server-storage/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/storage/service/impl/ClientKeyStorageImplTest.java:7:import fr.gouv.stopc.robert.crypto.grpc.server.storage.service.impl.ClientKeyStorageServiceImpl;
./robert-server-develop/robert-crypto-grpc-server/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-crypto-grpc-server/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-crypto-grpc-server/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-crypto-grpc-server/pom.xml:19:	<artifactId>robert-crypto-grpc-server</artifactId>
./robert-server-develop/robert-crypto-grpc-server/pom.xml:21:	<name>robert-crypto-grpc-server</name>
./robert-server-develop/robert-crypto-grpc-server/pom.xml:54:			<artifactId>robert-crypto-grpc-server-messaging</artifactId>
./robert-server-develop/robert-crypto-grpc-server/pom.xml:60:			<artifactId>robert-crypto-grpc-server-storage</artifactId>
./robert-server-develop/robert-crypto-grpc-server/pom.xml:66:			<artifactId>robert-server-crypto</artifactId>
./robert-server-develop/robert-crypto-grpc-server/pom.xml:72:			<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceConfiguration.java:1:package fr.gouv.stopc.robert.crypto.grpc.server;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceConfiguration.java:9:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceConfiguration.java:10:import fr.gouv.stopc.robert.crypto.grpc.server.utils.PropertyLoader;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceConfiguration.java:17:    public CryptoServiceConfiguration(CryptoServiceGrpcServer server, 
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceConfiguration.java:24:        server.initPort(Integer.parseInt(propertyLoader.getCryptoServerPort()));
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceConfiguration.java:25:        server.start();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceConfiguration.java:26:        server.blockUntilShutdown();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:1:package fr.gouv.stopc.robert.crypto.grpc.server;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:8:import fr.gouv.stopc.robert.crypto.grpc.server.exception.RobertServerCryptoExceptionHandler;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:11:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CryptoGrpcServiceImplGrpc.CryptoGrpcServiceImplImplBase;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:13:import io.grpc.Server;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:14:import io.grpc.ServerBuilder;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:19:public class CryptoServiceGrpcServer {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:22:	private Server server;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:27:	public CryptoServiceGrpcServer(final CryptoGrpcServiceImplImplBase cryptoService) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:31:	public CryptoServiceGrpcServer(int port) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:32:		this(ServerBuilder.forPort(port), port);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:35:	public CryptoServiceGrpcServer(ServerBuilder<?> serverBuilder, int port) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:36:		this.server = serverBuilder
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:38:				.intercept(new RobertServerCryptoExceptionHandler())
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:43:	public CryptoServiceGrpcServer(ServerBuilder<?> serverBuilder, int port, BindableService cryptoService) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:44:		this.server = serverBuilder
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:46:				.intercept(new RobertServerCryptoExceptionHandler())
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:54:		this.server = ServerBuilder
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:57:				.intercept(new RobertServerCryptoExceptionHandler())
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:61:		server.start();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:62:		log.info("Server started, listening on " + port);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:67:		if (server != null) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:68:			server.shutdown().awaitTermination(30, TimeUnit.SECONDS);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:76:		if (server != null) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServer.java:77:			server.awaitTermination();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/RobertCryptoGrpcServerApplication.java:1:package fr.gouv.stopc.robert.crypto.grpc.server;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/RobertCryptoGrpcServerApplication.java:11:public class RobertCryptoGrpcServerApplication {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/RobertCryptoGrpcServerApplication.java:15:		SpringApplication.run(RobertCryptoGrpcServerApplication.class, args);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.exception;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:3:import io.grpc.ForwardingServerCallListener;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:5:import io.grpc.ServerCall;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:6:import io.grpc.ServerCallHandler;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:7:import io.grpc.ServerInterceptor;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:10:public class RobertServerCryptoExceptionHandler implements ServerInterceptor {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:13:    public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(ServerCall<ReqT, RespT> serverCall, Metadata metadata,
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:14:                                                                 ServerCallHandler<ReqT, RespT> serverCallHandler) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:15:        ServerCall.Listener<ReqT> listener = serverCallHandler.startCall(serverCall, metadata);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:16:        return new ExceptionHandlingServerCallListener<>(listener, serverCall, metadata);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:19:    private class ExceptionHandlingServerCallListener<ReqT, RespT>
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:20:            extends ForwardingServerCallListener.SimpleForwardingServerCallListener<ReqT> {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:21:        private ServerCall<ReqT, RespT> serverCall;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:24:        ExceptionHandlingServerCallListener(ServerCall.Listener<ReqT> listener, ServerCall<ReqT, RespT> serverCall,
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:27:            this.serverCall = serverCall;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:36:                handleException(ex, serverCall, metadata);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:46:                handleException(ex, serverCall, metadata);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:51:        private void handleException(RuntimeException exception, ServerCall<ReqT, RespT> serverCall, Metadata metadata) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/exception/RobertServerCryptoExceptionHandler.java:52:                serverCall.close(Status.UNKNOWN, metadata);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/ICryptoServerConfigurationService.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.service;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/ICryptoServerConfigurationService.java:3:public interface ICryptoServerConfigurationService {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/IECDHKeyService.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.service;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/IECDHKeyService.java:5:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/IECDHKeyService.java:6:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/IECDHKeyService.java:9:    Optional<ClientIdentifierBundle> deriveKeysFromClientPublicKey(byte[] clientPublicKey) throws RobertServerCryptoException;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.service.impl;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:25:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:26:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:27:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CryptoGrpcServiceImplGrpc.CryptoGrpcServiceImplImplBase;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:28:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:29:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:30:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.ErrorMessage;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:31:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromAuthRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:32:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromAuthResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:33:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromStatusRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:34:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromStatusResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:35:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetInfoFromHelloMessageRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:36:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetInfoFromHelloMessageResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:37:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.HSMCacheStatusRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:38:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.HSMCacheStatusResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:39:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.ReloadHSMRequest;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:40:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.ReloadHSMResponse;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:41:import fr.gouv.stopc.robert.crypto.grpc.server.service.ICryptoServerConfigurationService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:42:import fr.gouv.stopc.robert.crypto.grpc.server.service.IECDHKeyService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:43:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:44:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:45:import fr.gouv.stopc.robert.crypto.grpc.server.storage.service.IClientKeyStorageService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:46:import fr.gouv.stopc.robert.crypto.grpc.server.utils.PropertyLoader;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:47:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:48:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:49:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:50:import fr.gouv.stopc.robert.server.crypto.callable.TupleGenerator;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:51:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:52:import fr.gouv.stopc.robert.server.crypto.model.EphemeralTuple;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:53:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:54:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESECB;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:55:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESGCM;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:56:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:57:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:58:import io.grpc.stub.StreamObserver;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:70:    private final ICryptoServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:78:    public CryptoGrpcServiceBaseImpl(final ICryptoServerConfigurationService serverConfigurationService,
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:85:        this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:94:    public void reloadHSM(ReloadHSMRequest request, StreamObserver<ReloadHSMResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:100:        responseObserver.onNext(ReloadHSMResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:103:        responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:107:    public void getHSMCacheStatus(HSMCacheStatusRequest request, StreamObserver<HSMCacheStatusResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:111:        responseObserver.onNext(HSMCacheStatusResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:114:        responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:119:                                   StreamObserver<CreateRegistrationResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:128:                responseObserver.onNext(CreateRegistrationResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:134:                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:145:                responseObserver.onNext(CreateRegistrationResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:151:                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:160:                    request.getServerCountryCode().byteAt(0));
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:165:                responseObserver.onNext(CreateRegistrationResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:172:                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:182:            responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:183:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:184:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:187:            //throw new RobertServerCryptoInternalErrorException(errorMessage);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:188:            responseObserver.onNext(CreateRegistrationResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:194:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:201:                              StreamObserver<GetIdFromAuthResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:207:            responseObserver.onNext(GetIdFromAuthResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:213:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:227:            //throw new RobertServerCryptoInvalidAuthRequestException(errorMessage);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:228:            responseObserver.onNext(GetIdFromAuthResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:234:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:246:            responseObserver.onNext(responseBuilder.build());
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:247:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:251:        responseObserver.onNext(GetIdFromAuthResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:255:        responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:260:                                StreamObserver<GetIdFromStatusResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:272:            responseObserver.onNext(GetIdFromStatusResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:278:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:290:            responseObserver.onNext(responseBuilder.build());
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:291:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:299:            responseObserver.onNext(GetIdFromStatusResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:305:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:314:                request.getServerCountryCode().byteAt(0));
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:319:            responseObserver.onNext(GetIdFromStatusResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:325:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:329:        responseObserver.onNext(GetIdFromStatusResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:334:        responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:339:                                        StreamObserver<GetInfoFromHelloMessageResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:348:            // If country code was decrypted successfully but does not match current server,
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:349:            // return directly and forward to appropriate federation server
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:350:            if (!Arrays.equals(cc, request.getServerCountryCode().toByteArray())) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:351:                responseObserver.onNext(GetInfoFromHelloMessageResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:354:                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:357:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:360:            responseObserver.onNext(GetInfoFromHelloMessageResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:366:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:376:                responseObserver.onNext(GetInfoFromHelloMessageResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:382:                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:388:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:390:            responseObserver.onNext(GetInfoFromHelloMessageResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:396:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:406:                responseObserver.onNext(GetInfoFromHelloMessageResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:413:                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:422:                responseObserver.onNext(GetInfoFromHelloMessageResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:429:                responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:432:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:435:            responseObserver.onNext(GetInfoFromHelloMessageResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:442:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:452:        responseObserver.onNext(response);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:453:        responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:458:                         StreamObserver<DeleteIdResponse> responseObserver) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:468:            responseObserver.onError(new RobertServerCryptoException("Could not validate auth request"));
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:478:            responseObserver.onNext(responseBuilder.build());
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:479:            responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:485:        responseObserver.onNext(DeleteIdResponse.newBuilder()
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:488:        responseObserver.onCompleted();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:545:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:609:     * @throws RobertServerCryptoException
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:617:            throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:619:        byte[] serverKey = this.cryptographicStorageService.getServerKey(
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:621:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:624:        if (Objects.isNull(serverKey)) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:625:            log.warn("Cannot retrieve server key for {}", authRequestEpoch);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:629:        byte[] decryptedEbid = this.cryptoService.decryptEBID(new CryptoSkinny64(serverKey), ebid);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:666:     * @throws RobertServerCryptoException
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:668:    private EbidContent decryptEBIDAndCheckEpoch(byte[] ebid, int epoch) throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:677:            throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:691:    private EbidContent decryptEBIDWithTimeReceived(byte[] ebid, long timeReceived) throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:693:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:729:    private byte[] decryptECC(byte[] ebid, byte encryptedCountryCode) throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:778:                                                                     byte serverCountryCode) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:788:        final byte[][] serverKeys = this.cryptographicStorageService.getServerKeys(
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:790:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:793:        if (Objects.isNull(serverKeys)) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:794:            log.warn("Could not retrieve server keys for epoch span starting with: {}", epochId);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:797:        int[] nbOfEpochsToGeneratePerDay = new int[serverKeys.length];
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:807:            if (serverKeys[i] != null) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:808:                final TupleGenerator tupleGenerator = new TupleGenerator(serverKeys[i], federationKey);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:814:                            serverCountryCode
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:818:                } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoGrpcServiceBaseImpl.java:843:        } catch (JsonProcessingException | RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoServerConfigurationServiceImpl.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.service.impl;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoServerConfigurationServiceImpl.java:13:import fr.gouv.stopc.robert.crypto.grpc.server.service.ICryptoServerConfigurationService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoServerConfigurationServiceImpl.java:14:import fr.gouv.stopc.robert.crypto.grpc.server.utils.PropertyLoader;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoServerConfigurationServiceImpl.java:15:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoServerConfigurationServiceImpl.java:19: * Default implementation of the ICryptoServerConfigurationService
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoServerConfigurationServiceImpl.java:22:public class CryptoServerConfigurationServiceImpl implements ICryptoServerConfigurationService {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/CryptoServerConfigurationServiceImpl.java:29:    public CryptoServerConfigurationServiceImpl(final PropertyLoader propertyLoader) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.service.impl;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:20:import fr.gouv.stopc.robert.crypto.grpc.server.service.IECDHKeyService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:21:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:22:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:23:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:24:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:41:    private byte[] deriveKeyForMacFromClientPublicKey(byte[] sharedSecret) throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:46:    private byte[] deriveKeyForTuplesFromClientPublicKey(byte[] sharedSecret) throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:53:        Optional<KeyPair> serverKeyPair = this.cryptographicStorageService.getServerKeyPair();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:55:        if (!serverKeyPair.isPresent()) {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:56:            log.error("Could not retrieve server key pair");
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:60:        PrivateKey serverPrivateKey = serverKeyPair.get().getPrivate();
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:64:            keyAgreement.init(serverPrivateKey);
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:80:     * @return keys generated from shared secret and the server public key
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:81:     * @throws RobertServerCryptoException
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImpl.java:85:            throws RobertServerCryptoException {
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/utils/PropertyLoader.java:1:package fr.gouv.stopc.robert.crypto.grpc.server.utils;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/utils/PropertyLoader.java:13:    @Value("${robert.crypto.server.port}")
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/utils/PropertyLoader.java:14:    private String cryptoServerPort;
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/utils/PropertyLoader.java:16:    @Value("${robert.crypto.server.keystore.password}")
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/utils/PropertyLoader.java:19:    @Value("${robert.crypto.server.keystore.config.file}")
./robert-server-develop/robert-crypto-grpc-server/src/main/java/fr/gouv/stopc/robert/crypto/grpc/server/utils/PropertyLoader.java:22:    @Value("${robert.server.time-start}")
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:9:# The port of the crypto server
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:10:robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:13:robert.crypto.server.keystore.password=${ROBERT_CRYPTO_SERVER_KEYSTORE_PASSWORD:1234}
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:16:robert.crypto.server.keystore.config.file=${ROBERT_CRYPTO_SERVER_CONFIG_FILE:/config/SoftHSMv2/softhsm2.cfg}
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:18:spring.datasource.url= ${ROBERT_CRYPTO_SERVER_DB_URL:jdbc:postgresql://localhost:5432/robert}
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:19:spring.datasource.username=${ROBERT_CRYPTO_SERVER_DB_USR:robert}
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:20:spring.datasource.password=${ROBERT_CRYPTO_SERVER_DB_PWD:robert}
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/application.properties:26:robert.server.time-start=${ROBERT_SERVER_TIMESTART:20200601}
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/logback.xml:5:		value="${ROBERT_CRYPTO_SERVER_LOG_FILE_PATH:-/logs}" />
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/logback.xml:7:		value="${ROBERT_CRYPTO_SERVER_LOG_FILE_NAME:-robert-crypto-grpc-server}" />
./robert-server-develop/robert-crypto-grpc-server/src/main/resources/logback.xml:9:		value="${ROBERT_CRYPTO_SERVER_ERROR_LOG_FILE_NAME:-robert-crypto-grpc-server}.error" />
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1:package test.fr.gouv.stopc.robert.crypto.grpc.server;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:44:import fr.gouv.stopc.robert.crypto.grpc.server.CryptoServiceGrpcServer;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:45:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationRequest;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:46:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationResponse;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:47:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CryptoGrpcServiceImplGrpc;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:48:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CryptoGrpcServiceImplGrpc.CryptoGrpcServiceImplImplBase;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:49:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CryptoGrpcServiceImplGrpc.CryptoGrpcServiceImplStub;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:50:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdRequest;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:51:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:52:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromAuthRequest;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:53:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromAuthResponse;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:54:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromStatusRequest;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:55:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromStatusResponse;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:56:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetInfoFromHelloMessageRequest;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:57:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetInfoFromHelloMessageResponse;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:58:import fr.gouv.stopc.robert.crypto.grpc.server.service.ICryptoServerConfigurationService;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:59:import fr.gouv.stopc.robert.crypto.grpc.server.service.impl.CryptoGrpcServiceBaseImpl;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:60:import fr.gouv.stopc.robert.crypto.grpc.server.service.impl.ECDHKeyServiceImpl;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:61:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:62:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:63:import fr.gouv.stopc.robert.crypto.grpc.server.storage.service.IClientKeyStorageService;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:64:import fr.gouv.stopc.robert.crypto.grpc.server.utils.PropertyLoader;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:65:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:66:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:67:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:68:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:69:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:70:import fr.gouv.stopc.robert.server.crypto.service.impl.CryptoServiceImpl;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:71:import fr.gouv.stopc.robert.server.crypto.structure.CryptoAES;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:72:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESECB;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:73:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESGCM;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:74:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:75:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:78:import io.grpc.inprocess.InProcessServerBuilder;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:79:import io.grpc.stub.StreamObserver;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:87:import test.fr.gouv.stopc.robert.crypto.grpc.server.utils.CryptoTestUtils;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:93:class CryptoServiceGrpcServerTest {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:96:    private final static byte[] SERVER_COUNTRY_CODE = new byte[] { (byte) 0x21 };
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:105:    private CryptoServiceGrpcServer server;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:109:    private ICryptoServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:131:        serverConfigurationService = new ICryptoServerConfigurationService() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:147:        service = new CryptoGrpcServiceBaseImpl(serverConfigurationService,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:154:        when(this.cryptographicStorageService.getServerKeyPair())
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:165:        String serverName = InProcessServerBuilder.generateName();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:167:        server = new CryptoServiceGrpcServer(
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:168:                InProcessServerBuilder.forName(serverName)
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:172:        server.start();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:174:                InProcessChannelBuilder.forName(serverName).directExecutor().build());
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:176:        this.currentEpochId = TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:185:        server.stop();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:196:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:199:        byte[][] serverKeys = generateRandomServerKeys();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:201:        doReturn(serverKeys).when(this.cryptographicStorageService).getServerKeys(
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:203:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:206:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:210:                        (stub, req, observer) -> stub.createRegistration(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:218:        assertTrue(checkTuples(createRegistrationResponse.getIdA().toByteArray(), tuples, this.currentEpochId, serverKeys));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:254:            } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:263:                                                      byte[][] serverKeys) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:270:        for (int i = 0; i < serverKeys.length; i++) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:273:            results.add(checkTuplesForDay(listToProcess, serverKeys[i]));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:280:    private boolean checkTuples(byte[] id, byte[] tuples, int epochId, byte[][] serverKeys) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:290:            return sizeMatches && checkTuplesContentMatchesKeysForDays(decodedTuples, epochId, serverKeys);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:291:        } catch (RobertServerCryptoException | IOException e) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:307:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:310:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:314:                        (stub, req, observer) -> stub.createRegistration(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:330:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:333:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:337:                        (stub, req, observer) -> stub.createRegistration(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:348:        // Client public key generated with EC curve "secp256k1" instead of server's choice of "secp256*r*1"
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:354:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:357:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:361:                        (stub, req, observer) -> stub.createRegistration(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:380:        private byte[] serverKey;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:401:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:417:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:436:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:463:                .when(this.cryptographicStorageService).getServerKey(
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:465:                        this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:468:                .when(this.cryptographicStorageService).getServerKey(
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:470:                        this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:479:                .serverKey(ks)
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:511:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:515:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:543:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:547:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:576:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:580:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:612:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:616:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:642:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:646:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:672:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:676:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:702:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:706:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:732:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:736:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:773:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:777:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:812:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:816:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:844:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:848:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:876:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:880:                        (stub, req, observer) -> stub.getIdFromAuth(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:905:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:909:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:945:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:949:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:978:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:982:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1013:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1017:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1042:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1046:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1071:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1075:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1109:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1113:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1141:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1145:                        (stub, req, observer) -> stub.deleteId(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1162:        byte[][] serverKeys = generateRandomServerKeys();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1164:        when(this.cryptographicStorageService.getServerKeys(this.currentEpochId,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1165:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1167:                .thenReturn(serverKeys);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1178:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1181:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1185:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1191:        assertTrue(checkTuples(response.getIdA().toByteArray(), response.getTuples().toByteArray(), this.currentEpochId, serverKeys));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1194:    private byte[][] generateRandomServerKeys() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1195:        byte[][] serverKeys = new byte[4][24];
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1196:        new SecureRandom().nextBytes(serverKeys[0]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1197:        new SecureRandom().nextBytes(serverKeys[1]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1198:        new SecureRandom().nextBytes(serverKeys[2]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1199:        new SecureRandom().nextBytes(serverKeys[3]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1200:        return serverKeys;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1213:        byte[][] serverKeys = generateRandomServerKeys();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1214:        when(this.cryptographicStorageService.getServerKeys(
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1216:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1217:                4)).thenReturn(serverKeys);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1228:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1231:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1235:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1263:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1267:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1297:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1301:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1326:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1330:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1355:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1359:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1384:        byte[][] serverKeys = generateRandomServerKeys();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1386:        when(this.cryptographicStorageService.getServerKeys(this.currentEpochId,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1387:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1389:                .thenReturn(serverKeys);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1400:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1403:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1407:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1413:        assertTrue(checkTuples(response.getIdA().toByteArray(), response.getTuples().toByteArray(), this.currentEpochId, serverKeys));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1426:        byte[][] serverKeys = generateRandomServerKeys();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1428:        when(this.cryptographicStorageService.getServerKeys(this.currentEpochId,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1429:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1431:                .thenReturn(serverKeys);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1442:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1445:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1449:                        (stub, req, observer) -> stub.getIdFromStatus(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1470:                                                    byte[][] serverKeys,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1488:                .getServerKey(epochId,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1489:                        this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1492:                .getServerKey(epochId + 1,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1493:                        this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1496:                .getServerKey(epochId - 1,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1497:                        this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1500:                .getServerKey(epochId,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1501:                        this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1504:        byte[] serverKey;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1507:                serverKey = ksPrevious;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1510:                serverKey = ksNext;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1514:                serverKey = ks;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1518:        byte[] ebid = generateEbid(id, epochId, serverKey);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1529:                    SERVER_COUNTRY_CODE[0]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1535:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1550:        byte[][] serverKeys = new byte[4][24];
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1551:        new SecureRandom().nextBytes(serverKeys[0]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1552:        new SecureRandom().nextBytes(serverKeys[1]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1553:        new SecureRandom().nextBytes(serverKeys[2]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1554:        new SecureRandom().nextBytes(serverKeys[3]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1559:                serverKeys,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1573:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1576:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1580:                        (stub, req, observer) -> stub.getInfoFromHelloMessage(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1586:        assertTrue(Arrays.equals(response.getCountryCode().toByteArray(), SERVER_COUNTRY_CODE));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1591:        byte[][] serverKeys = new byte[1][24];
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1592:        new SecureRandom().nextBytes(serverKeys[0]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1597:                serverKeys,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1616:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1619:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1623:                        (stub, req, observer) -> stub.getInfoFromHelloMessage(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1633:        byte[][] serverKeys = new byte[1][24];
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1634:        new SecureRandom().nextBytes(serverKeys[0]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1639:                serverKeys,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1656:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1659:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1663:                        (stub, req, observer) -> stub.getInfoFromHelloMessage(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1674:        byte[][] serverKeys = new byte[4][24];
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1675:        new SecureRandom().nextBytes(serverKeys[0]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1676:        new SecureRandom().nextBytes(serverKeys[1]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1677:        new SecureRandom().nextBytes(serverKeys[2]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1678:        new SecureRandom().nextBytes(serverKeys[3]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1685:                serverKeys,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1713:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1716:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1720:                        (stub, req, observer) -> stub.getInfoFromHelloMessage(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1726:        assertTrue(Arrays.equals(response.getCountryCode().toByteArray(), SERVER_COUNTRY_CODE));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1732:        byte[][] serverKeys = new byte[4][24];
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1733:        new SecureRandom().nextBytes(serverKeys[0]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1734:        new SecureRandom().nextBytes(serverKeys[1]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1735:        new SecureRandom().nextBytes(serverKeys[2]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1736:        new SecureRandom().nextBytes(serverKeys[3]);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1741:                serverKeys,
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1755:                .setServerCountryCode(ByteString.copyFrom(SERVER_COUNTRY_CODE))
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1758:        ObserverExecutionResult res = new ObserverExecutionResult(false);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1762:                        (stub, req, observer) -> stub.getInfoFromHelloMessage(req, observer),
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1775:    static class ObserverExecutionResult {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1780:        void execute(CryptoGrpcServiceImplStub stub, T t, StreamObserver<U> u);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1787:    <T, U> U sendCryptoRequest(T request, StubExecution<T, U> stubExecution, HandleError handleError, ObserverExecutionResult res) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1795:            StreamObserver<U> responseObserver =
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1796:                    new StreamObserver<U>() {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1814:            stubExecution.execute(stub, request, responseObserver);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/CryptoServiceGrpcServerTest.java:1816:            //stub.createRegistration(request, responseObserver);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:1:package test.fr.gouv.stopc.robert.crypto.grpc.server.service.impl;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:7:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:8:import fr.gouv.stopc.robert.crypto.grpc.server.storage.model.ClientIdentifierBundle;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:9:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:21:import fr.gouv.stopc.robert.crypto.grpc.server.service.impl.ECDHKeyServiceImpl;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:22:import test.fr.gouv.stopc.robert.crypto.grpc.server.utils.CryptoTestUtils;
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:51:        when(this.cryptographicStorageService.getServerKeyPair())
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:57:        } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:76:            KeyPair serverECDHKey = kpg.generateKeyPair();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:78:            PrivateKey serverPrivateKey = serverECDHKey.getPrivate();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:79:            log.info("Server private key format: {}", serverPrivateKey.getFormat());
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:80:            log.info("Server private key algorithm: {}", serverPrivateKey.getAlgorithm());
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:81:            log.info("Server private key data as hex: {}", ByteUtils.toHexString(serverPrivateKey.getEncoded()));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:82:            log.info("Server private key data as binary: {}", ByteUtils.toBinaryString(serverPrivateKey.getEncoded()));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:83:            log.info(ToStringBuilder.reflectionToString(serverPrivateKey, ToStringStyle.MULTI_LINE_STYLE));
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:85:            // use server public key as client public key
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:86:            PublicKey clientPublicKey = serverECDHKey.getPublic();
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/service/impl/ECDHKeyServiceImplTest.java:94:            ka.init(serverPrivateKey);
./robert-server-develop/robert-crypto-grpc-server/src/test/java/test/fr/gouv/stopc/robert/crypto/grpc/server/utils/CryptoTestUtils.java:1:package test.fr.gouv.stopc.robert.crypto.grpc.server.utils;
./robert-server-develop/robert-crypto-grpc-server/src/test/resources/application.properties:3:robert.crypto.server.port=9090
./robert-server-develop/robert-server-batch/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-batch/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-batch/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-server-batch/pom.xml:19:	<artifactId>robert-server-batch</artifactId>
./robert-server-develop/robert-server-batch/pom.xml:20:	<name>robert-server-batch</name>
./robert-server-develop/robert-server-batch/pom.xml:50:			<artifactId>robert-crypto-grpc-server-messaging</artifactId>
./robert-server-develop/robert-server-batch/pom.xml:56:			<artifactId>robert-server-database</artifactId>
./robert-server-develop/robert-server-batch/pom.xml:62:			<artifactId>robert-server-crypto</artifactId>
./robert-server-develop/robert-server-batch/pom.xml:68:			<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/RobertServerBatchApplication.java:1:package fr.gouv.stopc.robert.server.batch;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/RobertServerBatchApplication.java:14:public class RobertServerBatchApplication {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/RobertServerBatchApplication.java:17:		SpringApplication.run(RobertServerBatchApplication.class, args);
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:1:package fr.gouv.stopc.robert.server.batch.configuration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:34:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:35:import fr.gouv.stopc.robert.server.batch.listener.PopulateIdMappingListener;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:36:import fr.gouv.stopc.robert.server.batch.listener.ProcessingJobExecutionListener;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:37:import fr.gouv.stopc.robert.server.batch.model.ItemIdMapping;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:38:import fr.gouv.stopc.robert.server.batch.partitioner.RangePartitioner;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:39:import fr.gouv.stopc.robert.server.batch.processor.ContactIdMappingProcessor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:40:import fr.gouv.stopc.robert.server.batch.processor.ContactProcessor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:41:import fr.gouv.stopc.robert.server.batch.processor.PurgeOldEpochExpositionsProcessor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:42:import fr.gouv.stopc.robert.server.batch.processor.RegistrationIdMappingProcessor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:43:import fr.gouv.stopc.robert.server.batch.processor.RegistrationProcessor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:44:import fr.gouv.stopc.robert.server.batch.processor.UpdateRegistrationFlagsProcessor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:45:import fr.gouv.stopc.robert.server.batch.service.ItemIdMappingService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:46:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:47:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:48:import fr.gouv.stopc.robert.server.batch.writer.ContactItemWriter;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:49:import fr.gouv.stopc.robert.server.batch.writer.RegistrationItemWriter;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:50:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:51:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:52:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:53:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:54:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:55:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:68:    private final IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:78:    private final ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:92:    public ContactsProcessingConfiguration(final IServerConfigurationService serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:95:            final ICryptoServerGrpcClient cryptoServerClient,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:103:        this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:106:        this.cryptoServerClient = cryptoServerClient;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:134:                            registrationService, contactService, serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:142:                            registrationService, contactService, serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:152:                            registrationService, contactService, serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:338:                this.serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:340:                this.cryptoServerClient,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:348:                this.serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:356:                this.serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ContactsProcessingConfiguration.java:412:        int currentEpochId = TimeUtils.getCurrentEpochFrom(serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/RobertServerBatchConfiguration.java:1:package fr.gouv.stopc.robert.server.batch.configuration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/RobertServerBatchConfiguration.java:7:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/RobertServerBatchConfiguration.java:8:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/RobertServerBatchConfiguration.java:11:public class RobertServerBatchConfiguration {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/RobertServerBatchConfiguration.java:14:	public RobertServerBatchConfiguration(final PropertyLoader propertyLoader,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/RobertServerBatchConfiguration.java:15:			final ICryptoServerGrpcClient cryptoServerClient) {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/RobertServerBatchConfiguration.java:17:		cryptoServerClient.init(propertyLoader.getCryptoServerHost(), Integer.parseInt( propertyLoader.getCryptoServerPort()));
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/configuration/ScoringAlgorithmConfiguration.java:1:package fr.gouv.stopc.robert.server.batch.configuration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/exception/RobertScoringException.java:1:package fr.gouv.stopc.robert.server.batch.exception;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/PopulateIdMappingListener.java:1:package fr.gouv.stopc.robert.server.batch.listener;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/PopulateIdMappingListener.java:7:import fr.gouv.stopc.robert.server.batch.service.ItemIdMappingService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:1:package fr.gouv.stopc.robert.server.batch.listener;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:3:import fr.gouv.stopc.robert.server.batch.configuration.ContactsProcessingConfiguration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:4:import fr.gouv.stopc.robert.server.batch.service.ItemIdMappingService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:5:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:6:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:7:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:8:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:9:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:25:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/listener/ProcessingJobExecutionListener.java:55:        int currentEpochId = TimeUtils.getCurrentEpochFrom(serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/model/ItemIdMapping.java:1:package fr.gouv.stopc.robert.server.batch.model;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/model/ScoringResult.java:1:package fr.gouv.stopc.robert.server.batch.model;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/partitioner/RangePartitioner.java:1:package fr.gouv.stopc.robert.server.batch.partitioner;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/partitioner/RangePartitioner.java:3:import fr.gouv.stopc.robert.server.batch.configuration.ContactsProcessingConfiguration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/partitioner/RangePartitioner.java:4:import fr.gouv.stopc.robert.server.batch.utils.ItemProcessingCounterUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactIdMappingProcessor.java:1:package fr.gouv.stopc.robert.server.batch.processor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactIdMappingProcessor.java:3:import fr.gouv.stopc.robert.server.batch.model.ItemIdMapping;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactIdMappingProcessor.java:4:import fr.gouv.stopc.robert.server.batch.utils.ItemProcessingCounterUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactIdMappingProcessor.java:5:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:1:package fr.gouv.stopc.robert.server.batch.processor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:13:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:14:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetInfoFromHelloMessageRequest;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:15:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetInfoFromHelloMessageResponse;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:16:import fr.gouv.stopc.robert.server.batch.exception.RobertScoringException;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:17:import fr.gouv.stopc.robert.server.batch.model.ScoringResult;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:18:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:19:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:20:import fr.gouv.stopc.robert.server.batch.utils.ScoringUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:21:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:22:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:23:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:24:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:25:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:26:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:27:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:28:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:35:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:39:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:51:            final IServerConfigurationService serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:53:             final ICryptoServerGrpcClient cryptoServerClient,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:57:        this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:59:         this.cryptoServerClient = cryptoServerClient;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:70:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:74:    public Contact process(Contact contact) throws RobertServerCryptoException, RobertScoringException {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:82:        byte[] serverCountryCode = new byte[1];
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:83:        serverCountryCode[0] = this.serverConfigurationService.getServerCountryCode();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:98:                    .setServerCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:102:            Optional<GetInfoFromHelloMessageResponse> response = this.cryptoServerClient.getInfoFromHelloMessage(request);
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:112:                // Check step #2: is contact managed by this server?
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:113:                if (!Arrays.equals(helloMessageResponse.getCountryCode().toByteArray(), serverCountryCode)) {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:115:                            "Country code {} is not managed by this server ({}); rerouting contact to federation network",
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:117:                            serverCountryCode);
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:119:                    // TODO: send the message to the dedicated country server
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:164:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:202:        final long tpstStartNTPsec = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:242:        int currentEpochId = TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/ContactProcessor.java:247:                this.serverConfigurationService.getEpochDurationSecs());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:1:package fr.gouv.stopc.robert.server.batch.processor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:9:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:10:import fr.gouv.stopc.robert.server.batch.utils.ScoringUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:11:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:12:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:13:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:14:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:23:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:36:        int currentEpochId = TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/PurgeOldEpochExpositionsProcessor.java:41:                this.serverConfigurationService.getEpochDurationSecs());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationIdMappingProcessor.java:1:package fr.gouv.stopc.robert.server.batch.processor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationIdMappingProcessor.java:3:import fr.gouv.stopc.robert.server.batch.model.ItemIdMapping;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationIdMappingProcessor.java:4:import fr.gouv.stopc.robert.server.batch.utils.ItemProcessingCounterUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationIdMappingProcessor.java:5:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:1:package fr.gouv.stopc.robert.server.batch.processor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:7:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:8:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:9:import fr.gouv.stopc.robert.server.batch.utils.ScoringUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:10:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:11:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:12:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:13:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:20:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:29:        int currentEpochId = TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:34:                this.serverConfigurationService.getEpochDurationSecs());
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/RegistrationProcessor.java:39:                this.serverConfigurationService.getServiceTimeStart(),
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/UpdateRegistrationFlagsProcessor.java:1:package fr.gouv.stopc.robert.server.batch.processor;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/UpdateRegistrationFlagsProcessor.java:5:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/processor/UpdateRegistrationFlagsProcessor.java:6:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/repository/ItemIdMappingRepository.java:1:package fr.gouv.stopc.robert.server.batch.repository;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/repository/ItemIdMappingRepository.java:3:import fr.gouv.stopc.robert.server.batch.model.ItemIdMapping;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/ItemIdMappingService.java:1:package fr.gouv.stopc.robert.server.batch.service;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/ScoringStrategyService.java:1:package fr.gouv.stopc.robert.server.batch.service;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/ScoringStrategyService.java:3:import fr.gouv.stopc.robert.server.batch.exception.RobertScoringException;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/ScoringStrategyService.java:4:import fr.gouv.stopc.robert.server.batch.model.ScoringResult;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/ScoringStrategyService.java:5:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ItemIdMappingServiceImpl.java:1:package fr.gouv.stopc.robert.server.batch.service.impl;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ItemIdMappingServiceImpl.java:3:import fr.gouv.stopc.robert.server.batch.repository.ItemIdMappingRepository;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ItemIdMappingServiceImpl.java:4:import fr.gouv.stopc.robert.server.batch.service.ItemIdMappingService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:1:package fr.gouv.stopc.robert.server.batch.service.impl;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:10:import fr.gouv.stopc.robert.server.batch.exception.RobertScoringException;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:11:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:12:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:13:import fr.gouv.stopc.robert.server.batch.model.ScoringResult;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:14:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:15:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:16:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:30:    private final IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:35:    public ScoringStrategyServiceImpl(IServerConfigurationService serverConfigurationService, PropertyLoader propertyLoader) {
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:37:        this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:75:            long epochDuration = this.serverConfigurationService.getEpochDurationSecs();
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyServiceImpl.java:76:            long remainder = (message.getTimeCollectedOnDevice() - this.serverConfigurationService.getServiceTimeStart()) % epochDuration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:1:package fr.gouv.stopc.robert.server.batch.service.impl;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:6:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:10:import fr.gouv.stopc.robert.server.batch.configuration.ScoringAlgorithmConfiguration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:11:import fr.gouv.stopc.robert.server.batch.exception.RobertScoringException;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:12:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:13:import fr.gouv.stopc.robert.server.batch.model.ScoringResult;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:14:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:15:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:16:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:28:	private final IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:38:	 * @param serverConfigurationService the
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:39:	 *                                   <code>IServerConfigurationService</code>
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:45:	public ScoringStrategyV2ServiceImpl(IServerConfigurationService serverConfigurationService,
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:48:		this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:89:		final int epochDurationInMinutes = this.serverConfigurationService.getEpochDurationSecs() / 60;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/ItemProcessingCounterUtils.java:1:package fr.gouv.stopc.robert.server.batch.utils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/PropertyLoader.java:1:package fr.gouv.stopc.robert.server.batch.utils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/PropertyLoader.java:14:    @Value("${robert.crypto.server.host}")
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/PropertyLoader.java:15:    private String cryptoServerHost;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/PropertyLoader.java:17:    @Value("${robert.crypto.server.port}")
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/PropertyLoader.java:18:    private String cryptoServerPort;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/ScoringUtils.java:1:package fr.gouv.stopc.robert.server.batch.utils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/ScoringUtils.java:9:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/ScoringUtils.java:10:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/ScoringUtils.java:11:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/utils/ScoringUtils.java:12:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:1:package fr.gouv.stopc.robert.server.batch.writer;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:3:import fr.gouv.stopc.robert.server.batch.configuration.ContactsProcessingConfiguration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:4:import fr.gouv.stopc.robert.server.batch.utils.ItemProcessingCounterUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:5:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/ContactItemWriter.java:6:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/RegistrationItemWriter.java:1:package fr.gouv.stopc.robert.server.batch.writer;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/RegistrationItemWriter.java:12:import fr.gouv.stopc.robert.server.batch.utils.ItemProcessingCounterUtils;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/RegistrationItemWriter.java:13:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/writer/RegistrationItemWriter.java:14:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:3:# spring.data.mongodb.database=${ROBERT_SERVER_DB_NAME:protectedRobertDB}
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:6:# spring.data.mongodb.host=${ROBERT_SERVER_DB_HOST:localhost}
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:7:# Mongo server host.
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:8:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:9:# Mongo server port.
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:10:# spring.data.mongodb.port=${ROBERT_SERVER_DB_PORT:27017}
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:11:spring.data.mongodb.uri=${ROBERT_SERVER_DB_URI:mongodb\://${ROBERT_SERVER_DB_HOST:localhost}\:${ROBERT_SERVER_DB_PORT:27017}/${ROBERT_SERVER_DB_NAME:protectedRobertDB}}
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:15:# The hostname of the crypto server
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:16:robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:localhost}
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:18:# The port of the crypto server
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:19:robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:21:# The time start of the server
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:22:robert.server.time-start=${ROBERT_SERVER_TIMESTART:20200601}
./robert-server-develop/robert-server-batch/src/main/resources/application-dev.properties:41:robert.server.country-code=${ROBERT_SERVER_COUNTRY_CODE:0x21}
./robert-server-develop/robert-server-batch/src/main/resources/application.properties:3:# The hostname of the crypto server
./robert-server-develop/robert-server-batch/src/main/resources/application.properties:4:robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:localhost}
./robert-server-develop/robert-server-batch/src/main/resources/application.properties:6:# The port of the crypto server
./robert-server-develop/robert-server-batch/src/main/resources/application.properties:7:robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}
./robert-server-develop/robert-server-batch/src/main/resources/application.properties:9:# The time start of the server
./robert-server-develop/robert-server-batch/src/main/resources/application.properties:10:robert.server.time-start=${ROBERT_SERVER_TIMESTART:20200601}
./robert-server-develop/robert-server-batch/src/main/resources/application.properties:18:robert.server.country-code=${ROBERT_SERVER_COUNTRY_CODE:0x21}
./robert-server-develop/robert-server-batch/src/main/resources/bootstrap.yml:16:      token: ${ROBERT_SERVER_CONSUL_ACL_TOKEN:token}
./robert-server-develop/robert-server-batch/src/main/resources/logback.xml:4: <property  name="LOG_DIR" value="${ROBERT_SERVER_BATCH_LOG_FILE_PATH:-/logs}" />
./robert-server-develop/robert-server-batch/src/main/resources/logback.xml:5: <property  name="LOG_FILENAME" value="${ROBERT_SERVER_BATCH_LOG_FILE_NAME:-robert-server-batch}" />
./robert-server-develop/robert-server-batch/src/main/resources/logback.xml:6: <property  name="ERROR_LOG_FILENAME" value="${ROBERT_SERVER_BATCH_ERROR_LOG_FILE_NAME:-robert-server-batch}.error" />
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/RobertServerBatchApplicationTest.java:1:package test.fr.gouv.stopc.robertserver.batch;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/RobertServerBatchApplicationTest.java:8:class RobertServerBatchApplicationTest {
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1:package test.fr.gouv.stopc.robertserver.batch.processor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:42:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:43:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetInfoFromHelloMessageResponse;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:44:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:45:import fr.gouv.stopc.robert.server.batch.processor.ContactProcessor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:46:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:47:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:48:import fr.gouv.stopc.robert.server.batch.writer.ContactItemWriter;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:49:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:50:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:51:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:52:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:53:import fr.gouv.stopc.robert.server.crypto.structure.CryptoAES;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:54:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESECB;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:55:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:56:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:57:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:58:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:59:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:60:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:61:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:62:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:64:import test.fr.gouv.stopc.robertserver.batch.utils.ProcessorTestUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:70:@ContextConfiguration(classes = { RobertServerBatchApplication.class })
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:81:	private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:87:	private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:103:	private byte[] serverKey;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:118:		this.serverKey = this.generateKey(24);
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:120:		this.countryCode = this.serverConfigurationService.getServerCountryCode();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:123:				serverConfigurationService,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:125:				cryptoServerClient,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:132:		this.epochDuration = this.serverConfigurationService.getEpochDurationSecs();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:133:		this.serviceTimeStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:142:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:145:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId, ProcessorTestUtils.generateIdA());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:179:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:182:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId, ProcessorTestUtils.generateIdA());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:201:			verify(this.cryptoServerClient, never()).getInfoFromHelloMessage(any()); // must be called once only
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:215:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:220:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId, ProcessorTestUtils.generateIdA());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:236:			when(this.cryptoServerClient.getInfoFromHelloMessage(any())).thenReturn(Optional.empty());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:258:			verify(this.cryptoServerClient, atLeast(1)).getInfoFromHelloMessage(any()); // must be called at least once
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:272:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:293:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:298:			when(this.cryptoServerClient.getInfoFromHelloMessage(any())).thenReturn(Optional.of(
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:301:							.setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:336:			verify(this.cryptoServerClient, times(messages.size())).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:350:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:370:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:374:			when(this.cryptoServerClient.getInfoFromHelloMessage(any())).thenReturn(Optional.of(
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:377:							.setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:413:			verify(this.cryptoServerClient, times(messages.size())).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:429:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:434:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:460:							.setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:463:					.when(this.cryptoServerClient)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:496:			verify(this.cryptoServerClient, times(1)).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:520:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:525:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:535:			long tsDevice = currentTime + this.serverConfigurationService.getEpochDurationSecs() * 2 + 2;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:555:							.setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:558:					.when(this.cryptoServerClient)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:590:			verify(this.cryptoServerClient).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:606:            final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:611:            byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:621:            long tsDevice = currentTime + this.serverConfigurationService.getEpochDurationSecs() * 2 + 2;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:634:            tsDevice = currentTime + this.serverConfigurationService.getEpochDurationSecs() + 2;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:651:                            .setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:654:                    .when(this.cryptoServerClient)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:701:            verify(this.cryptoServerClient, times(2)).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:716:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:722:					new CryptoSkinny64(serverKey),
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:751:			doReturn(Optional.empty()).when(this.cryptoServerClient).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:782:			verify(this.cryptoServerClient).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:796:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:803:					currentTime - this.serverConfigurationService.getEpochDurationSecs());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:820:					new CryptoSkinny64(serverKey),
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:870:							.setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:873:					.when(this.cryptoServerClient)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:895:			verify(this.cryptoServerClient, times(contact.getMessageDetails().size())).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:909:            final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:914:            byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:951:                            .setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:954:                    .when(this.cryptoServerClient)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1007:            verify(this.cryptoServerClient, times(3)).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1022:			final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1027:					/ this.serverConfigurationService.getEpochDurationSecs();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1041:			byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1069:							.setCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1072:					.when(this.cryptoServerClient)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ContactProcessorTest.java:1111:			verify(this.cryptoServerClient, times(contact.getMessageDetails().size())).getInfoFromHelloMessage(any());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:1:package test.fr.gouv.stopc.robertserver.batch.processor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:3:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:4:import fr.gouv.stopc.robert.server.batch.model.ItemIdMapping;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:5:import fr.gouv.stopc.robert.server.batch.processor.ContactIdMappingProcessor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:6:import fr.gouv.stopc.robert.server.batch.processor.RegistrationIdMappingProcessor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:7:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:8:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/ItemIdProcessorTest.java:27:@ContextConfiguration(classes = { RobertServerBatchApplication.class })
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:1:package test.fr.gouv.stopc.robertserver.batch.processor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:21:import test.fr.gouv.stopc.robertserver.batch.utils.ProcessorTestUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:23:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:24:import fr.gouv.stopc.robert.server.batch.configuration.ContactsProcessingConfiguration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:25:import fr.gouv.stopc.robert.server.batch.processor.PurgeOldEpochExpositionsProcessor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:26:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:27:import fr.gouv.stopc.robert.server.batch.writer.RegistrationItemWriter;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:28:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:29:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:30:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:31:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:32:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:37:@ContextConfiguration(classes = { RobertServerBatchApplication.class })
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:50:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:64:        this.purgeOldEpochExpositionsProcessor = new PurgeOldEpochExpositionsProcessor(this.serverConfigurationService,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/PurgeOldEpochExpositionsProcessorTest.java:69:        this.currentEpoch = TimeUtils.getCurrentEpochFrom(serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:1:package test.fr.gouv.stopc.robertserver.batch.processor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:23:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:24:import fr.gouv.stopc.robert.server.batch.configuration.ContactsProcessingConfiguration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:25:import fr.gouv.stopc.robert.server.batch.configuration.RobertServerBatchConfiguration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:26:import fr.gouv.stopc.robert.server.batch.processor.RegistrationProcessor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:27:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:28:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:29:import fr.gouv.stopc.robert.server.batch.writer.RegistrationItemWriter;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:30:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:31:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:32:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:33:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:34:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:35:import test.fr.gouv.stopc.robertserver.batch.utils.ProcessorTestUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:39:@ContextConfiguration(classes = { RobertServerBatchApplication.class })
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:52:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:66:    private RobertServerBatchConfiguration configuration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:75:                serverConfigurationService,
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/RegistrationProcessorTest.java:82:        this.currentEpoch = TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/TimeArithmeticTest.java:1:package test.fr.gouv.stopc.robertserver.batch.processor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/TimeArithmeticTest.java:3:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/UpdateRegistrationFlagsProcessorTest.java:1:package test.fr.gouv.stopc.robertserver.batch.processor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/UpdateRegistrationFlagsProcessorTest.java:18:import fr.gouv.stopc.robert.server.batch.processor.UpdateRegistrationFlagsProcessor;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/UpdateRegistrationFlagsProcessorTest.java:19:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/processor/UpdateRegistrationFlagsProcessorTest.java:20:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/repository/ItemIdMappingRepositoryTest.java:1:package test.fr.gouv.stopc.robertserver.batch.repository;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/repository/ItemIdMappingRepositoryTest.java:3:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/repository/ItemIdMappingRepositoryTest.java:4:import fr.gouv.stopc.robert.server.batch.model.ItemIdMapping;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/repository/ItemIdMappingRepositoryTest.java:5:import fr.gouv.stopc.robert.server.batch.repository.ItemIdMappingRepository;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/repository/ItemIdMappingRepositoryTest.java:24:@ContextConfiguration(classes = RobertServerBatchApplication.class)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:1:package test.fr.gouv.stopc.robertserver.batch.scoring;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:25:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:26:import fr.gouv.stopc.robert.server.batch.exception.RobertScoringException;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:27:import fr.gouv.stopc.robert.server.batch.service.impl.ScoringStrategyServiceImpl;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:28:import fr.gouv.stopc.robert.server.batch.utils.PropertyLoader;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:29:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:30:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:31:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:32:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:37:@ContextConfiguration(classes = RobertServerBatchApplication.class)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:47:	private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:65:		when(this.serverConfigurationService.getEpochDurationSecs()).thenReturn(this.epochDuration);
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:68:		this.randomReferenceEpochStartTime = this.serverConfigurationService.getServiceTimeStart()
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/RSSICalibratedScoringStrategyTest.java:69:				+ new Random().nextInt(20) * this.serverConfigurationService.getEpochDurationSecs();
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:1:package test.fr.gouv.stopc.robertserver.batch.scoring;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:23:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:24:import fr.gouv.stopc.robert.server.batch.exception.RobertScoringException;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:25:import fr.gouv.stopc.robert.server.batch.service.ScoringStrategyService;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:26:import fr.gouv.stopc.robert.server.batch.model.ScoringResult;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:27:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:28:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/scoring/ScoringAlgorithmV2Test.java:34:@ContextConfiguration(classes = RobertServerBatchApplication.class)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/service/ItemIdMappingServiceTest.java:1:package test.fr.gouv.stopc.robertserver.batch.service;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/service/ItemIdMappingServiceTest.java:3:import fr.gouv.stopc.robert.server.batch.RobertServerBatchApplication;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/service/ItemIdMappingServiceTest.java:4:import fr.gouv.stopc.robert.server.batch.repository.ItemIdMappingRepository;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/service/ItemIdMappingServiceTest.java:5:import fr.gouv.stopc.robert.server.batch.service.impl.ItemIdMappingServiceImpl;
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/service/ItemIdMappingServiceTest.java:18:@ContextConfiguration(classes = RobertServerBatchApplication.class)
./robert-server-develop/robert-server-batch/src/test/java/test/fr/gouv/stopc/robertserver/batch/utils/ProcessorTestUtils.java:1:package test.fr.gouv.stopc.robertserver.batch.utils;
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:7:# Mongo server host.
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:8:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:9:# Mongo server port.
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:12:# The hostname of the crypto server
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:13:robert.crypto.server.host=localhost
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:15:# The port of the crypto server
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:16:robert.crypto.server.port=9090
./robert-server-develop/robert-server-batch/src/test/resources/application.properties:33:robert.server.time-start=20200601
./robert-server-develop/robert-server-common/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-common/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-common/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-server-common/pom.xml:19:	<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-server-common/pom.xml:20:	<name>robert-server-common</name>
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/DigestSaltEnum.java:1:package fr.gouv.stopc.robert.server.common;
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/IServerConfigurationService.java:1:package fr.gouv.stopc.robert.server.common.service;
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/IServerConfigurationService.java:3:public interface IServerConfigurationService {
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/IServerConfigurationService.java:15:    byte getServerCountryCode();
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:1:package fr.gouv.stopc.robert.server.common.service.impl;
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:13:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:14:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:17: * Facade for server configuration parameters and keys
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:20:public class ServerConfigurationServiceImpl implements IServerConfigurationService {
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:22:    @Value("${robert.server.time-start:20200601}")
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:25:    @Value("${robert.server.country-code:0x21}")
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/service/impl/ServerConfigurationServiceImpl.java:47:    public byte getServerCountryCode() {
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/utils/ByteUtils.java:1:package fr.gouv.stopc.robert.server.common.utils;
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/utils/TimeUtils.java:1:package fr.gouv.stopc.robert.server.common.utils;
./robert-server-develop/robert-server-common/src/test/java/test/fr/gouv/stopc/robert/server/common/utils/TimeUtilsTest.java:1:package test.fr.gouv.stopc.robert.server.common.utils;
./robert-server-develop/robert-server-common/src/test/java/test/fr/gouv/stopc/robert/server/common/utils/TimeUtilsTest.java:14:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-crypto/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-crypto/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-crypto/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-server-crypto/pom.xml:19:	<artifactId>robert-server-crypto</artifactId>
./robert-server-develop/robert-server-crypto/pom.xml:21:	<name>robert-server-crypto</name>
./robert-server-develop/robert-server-crypto/pom.xml:22:	<description>Cryptography library module. Do not use directly except for tests and from crypto server</description>
./robert-server-develop/robert-server-crypto/pom.xml:34:			<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/RobertServerCryptoApplication.java:1:package fr.gouv.stopc.robert.server.crypto;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/RobertServerCryptoApplication.java:7:public class RobertServerCryptoApplication {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/RobertServerCryptoApplication.java:10:		SpringApplication.run(RobertServerCryptoApplication.class, args);
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/CryptoStructureConcurrentArray.java:1:package fr.gouv.stopc.robert.server.crypto.callable;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/CryptoStructureConcurrentArray.java:9:import fr.gouv.stopc.robert.server.crypto.structure.ICryptoStructure;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/CryptoStructureConcurrentArray.java:10:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/CryptoStructureConcurrentArray.java:32:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/CryptoStructureConcurrentArray.java:34:    public T getCryptoStructure(String threadName) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/CryptoStructureConcurrentArray.java:39:                throw new RobertServerCryptoException("There is no more CryptoStructure available.");
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:1:package fr.gouv.stopc.robert.server.crypto.callable;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:5:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:6:import fr.gouv.stopc.robert.server.crypto.model.EphemeralTuple;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:7:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:8:import fr.gouv.stopc.robert.server.crypto.structure.CryptoCipherStructureAbstract;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:23:     * Permanent and anonymous identifier of user UA, stored by the server
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:82:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleCallable.java:86:    public EphemeralTuple call() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:1:package fr.gouv.stopc.robert.server.crypto.callable;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:11:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESECB;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:13:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:14:import fr.gouv.stopc.robert.server.crypto.model.EphemeralTuple;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:15:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:16:import fr.gouv.stopc.robert.server.crypto.service.impl.CryptoServiceImpl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:17:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:24:    private final byte[] serverKey;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:34:    public TupleGenerator(byte[] serverKey, Key federationKey) {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:35:        this.serverKey = serverKey;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:37:        this.skinny64 =  new CryptoSkinny64(this.serverKey);
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:47:                                           final byte countryCode) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:58:            } catch (RobertServerCryptoException e) {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/callable/TupleGenerator.java:68:            throw new RobertServerCryptoException("Failed to generate the tuples");
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/exception/RobertServerCryptoException.java:1:package fr.gouv.stopc.robert.server.crypto.exception;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/exception/RobertServerCryptoException.java:10:public class RobertServerCryptoException extends Exception {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/exception/RobertServerCryptoException.java:18:	public RobertServerCryptoException(String message) {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/model/EphemeralTuple.java:1:package fr.gouv.stopc.robert.server.crypto.model;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:1:package fr.gouv.stopc.robert.server.crypto.service;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:3:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:4:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:5:import fr.gouv.stopc.robert.server.crypto.model.EphemeralTuple;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:6:import fr.gouv.stopc.robert.server.crypto.structure.CryptoCipherStructureAbstract;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:7:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:25:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:30:            int epochId, byte[] idA, byte countryCode) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:34:     * @param cryptoForEBID instance of Crypto algo to encrypt EBID with, using KS (server key)
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:38:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:40:    byte[] generateEBID(CryptoCipherStructureAbstract cryptoForEBID, int epochId, byte[] idA) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:47:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:49:    byte[] decryptEBID(CryptoCipherStructureAbstract cryptoForEBID, byte[] ebid) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:56:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:58:    byte[] encryptCountryCode(CryptoCipherStructureAbstract cryptoForECC, byte[] ebid, byte countryCode) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:66:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:68:     byte[] decryptCountryCode(CryptoCipherStructureAbstract cryptoForECC, byte[] ebid, byte encryptedCountryCode) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:75:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:77:    byte[] generateMACHello(CryptoHMACSHA256 cryptoHMACSHA256S, byte[] hello) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:83:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:85:    boolean macHelloValidation(CryptoHMACSHA256 cryptoHMACSHA256S, byte[] hello) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:92:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:96:                             byte[] macToVerify) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:105:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/CryptoService.java:110:                                 final DigestSaltEnum salt) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:1:package fr.gouv.stopc.robert.server.crypto.service.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:17:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:18:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:19:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:20:import fr.gouv.stopc.robert.server.crypto.model.EphemeralTuple;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:21:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:22:import fr.gouv.stopc.robert.server.crypto.structure.CryptoCipherStructureAbstract;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:23:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:38:            final byte countryCode) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:49:    public byte[] generateEBID(final CryptoCipherStructureAbstract cryptoForEBID, final int epochId, final byte[] idA) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:61:    public byte[] decryptEBID(final CryptoCipherStructureAbstract cryptoForEBID, final byte[] ebid) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:68:    public byte[] encryptCountryCode(final CryptoCipherStructureAbstract cryptoForECC, final byte[] ebid, final byte countryCode) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:86:    public byte[] decryptCountryCode(final CryptoCipherStructureAbstract cryptoForECC, final byte[] ebid, final byte encryptedCountryCode) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:95:    public byte[] generateMACHello(final CryptoHMACSHA256 cryptoHMACSHA256S, final byte[] hello) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:119:            final DigestSaltEnum salt) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:128:    public boolean macHelloValidation(final CryptoHMACSHA256 cryptoHMACSHA256S, final byte[] hello) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:143:            final byte[] macToVerify) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:151:            final DigestSaltEnum salt) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:162:     * @throws RobertServerCryptoException argument should be at the right size
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:164:    protected void assertLength(String propertyName, int size, byte... bytes) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImpl.java:168:            throw new RobertServerCryptoException(message);
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/skinny64/Skinny64Key.java:4:package fr.gouv.stopc.robert.server.crypto.skinny64;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/skinny64/SkinnyCipher192.java:4:package fr.gouv.stopc.robert.server.crypto.skinny64;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/skinny64/impl/SkinnyCipher192Impl.java:4:package fr.gouv.stopc.robert.server.crypto.skinny64.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/skinny64/impl/SkinnyCipher192Impl.java:6:import fr.gouv.stopc.robert.server.crypto.skinny64.Skinny64Key;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/skinny64/impl/SkinnyCipher192Impl.java:7:import fr.gouv.stopc.robert.server.crypto.skinny64.SkinnyCipher192;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoAES.java:1:package fr.gouv.stopc.robert.server.crypto.structure;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoAES.java:16:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoAES.java:41:            // Generate encryption keySpec with server federate keySpec.
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoCipherStructureAbstract.java:1:package fr.gouv.stopc.robert.server.crypto.structure;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoCipherStructureAbstract.java:12:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoCipherStructureAbstract.java:13:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoCipherStructureAbstract.java:24:    public byte[] encrypt(byte[] plainText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoCipherStructureAbstract.java:49:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoCipherStructureAbstract.java:54:    public byte[] decrypt(byte[] cipherText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoCipherStructureAbstract.java:59:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoMacStructureAbstract.java:1:package fr.gouv.stopc.robert.server.crypto.structure;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoMacStructureAbstract.java:5:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoMacStructureAbstract.java:14:     * @throws RobertServerCryptoException 
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoMacStructureAbstract.java:17:    public byte[] encrypt(byte[] payloadToEncrypt) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/CryptoMacStructureAbstract.java:24:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICipherStructure.java:1:package fr.gouv.stopc.robert.server.crypto.structure;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:1:package fr.gouv.stopc.robert.server.crypto.structure;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:7:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:27:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:29:    byte[] encrypt(byte[] arguments) throws RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:35:     * @throws RobertServerCryptoException
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:37:    default byte[] decrypt(byte[] arguments) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:38:        throw new RobertServerCryptoException();
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/IMacStructure.java:1:package fr.gouv.stopc.robert.server.crypto.structure;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/Crypto3DES.java:1:package fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/Crypto3DES.java:15:import fr.gouv.stopc.robert.server.crypto.structure.CryptoCipherStructureAbstract;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/Crypto3DES.java:48:     * @param keyServer key generated by server at first ROBERT start.
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/Crypto3DES.java:50:    public Crypto3DES(byte[] keyServer) {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/Crypto3DES.java:55:            // Generate encryption key with server key.
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/Crypto3DES.java:56:            KeySpec ks = new DESedeKeySpec(keyServer);
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECB.java:1:package fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECB.java:3:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECB.java:4:import fr.gouv.stopc.robert.server.crypto.structure.CryptoAES;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECB.java:26:    public byte[] encrypt(byte[] plainText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECB.java:31:    public byte[] decrypt(byte[] cipherText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECB.java:36:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCM.java:1:package fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCM.java:7:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCM.java:8:import fr.gouv.stopc.robert.server.crypto.structure.CryptoAES;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCM.java:26:    public byte[] encrypt(byte[] plainText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCM.java:31:    public byte[] decrypt(byte[] cipherText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCM.java:40:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFB.java:1:package fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFB.java:11:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFB.java:12:import fr.gouv.stopc.robert.server.crypto.structure.CryptoAES;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFB.java:25:    public byte[] encrypt(byte[] plainText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFB.java:31:    public byte[] decrypt(byte[] cipherText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFB.java:33:            throw new RobertServerCryptoException("IV must be set before decryption");
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFB.java:39:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoHMACSHA256.java:1:package fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoHMACSHA256.java:9:import fr.gouv.stopc.robert.server.crypto.structure.CryptoMacStructureAbstract;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoHMACSHA256.java:22:     * @param applicationKey key shared between application and  server
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoHMACSHA256.java:28:            // Generate encryption key with server federate key.
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:1:package fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:7:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:8:import fr.gouv.stopc.robert.server.crypto.skinny64.SkinnyCipher192;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:9:import fr.gouv.stopc.robert.server.crypto.skinny64.Skinny64Key;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:10:import fr.gouv.stopc.robert.server.crypto.skinny64.impl.SkinnyCipher192Impl;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:11:import fr.gouv.stopc.robert.server.crypto.structure.CryptoCipherStructureAbstract;
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:51:	public byte[] decrypt(byte[] cipherText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:61:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:67:	public byte[] encrypt(byte[] plainText) throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64.java:77:            throw new RobertServerCryptoException(e.getMessage());
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:1:package test.fr.gouv.stopc.robert.server.crypto.service.impl;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:16:import fr.gouv.stopc.robert.server.crypto.structure.CryptoAES;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:17:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESECB;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:22:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:23:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:24:import fr.gouv.stopc.robert.server.crypto.callable.TupleGenerator;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:25:import fr.gouv.stopc.robert.server.crypto.model.EphemeralTuple;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:26:import fr.gouv.stopc.robert.server.crypto.service.impl.CryptoServiceImpl;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:27:import fr.gouv.stopc.robert.server.crypto.structure.CryptoCipherStructureAbstract;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:28:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:29:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:49:        // Server key should be 192-bits (3 x 64-bits) long because of the TripleDES key property
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:50:        final byte[] serverKey = new byte[(3 * 64) / 8];
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:55:        // Hazarding idA, serverKey and federationKey keys
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:58:        random.nextBytes(serverKey);
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:66:        final TupleGenerator tupleGenerator = new TupleGenerator(serverKey, new SecretKeySpec(federationKey, CryptoAES.AES_ENCRYPTION_KEY_SCHEME));
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:108:        // Server key should be 192-bits (3 x 64-bits) long because of the TripleDES key property
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:109:        final byte[] serverKey = new byte[(3 * 64) / 8];
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:114:        // Hazarding IDa, serverKey and federationKey keys
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:117:        random.nextBytes(serverKey);
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:125:        final TupleGenerator tupleGenerator = new TupleGenerator(serverKey, new SecretKeySpec(federationKey, CryptoAES.AES_ENCRYPTION_KEY_SCHEME));
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/service/impl/CryptoServiceImplTest.java:149:        final CryptoCipherStructureAbstract cryptoForEBID = new CryptoSkinny64(serverKey);
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECBTest.java:1:package test.fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECBTest.java:4:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECBTest.java:5:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESECB;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECBTest.java:6:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESOFB;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECBTest.java:22:    public void testCryptoAESECBEncryptDecryptSucceeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESECBTest.java:37:    public void testCryptoAESECBCompareEncryptedSamples() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:1:package test.fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:3:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:4:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESGCM;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:20:    public void testCryptoAESGCMEncryptDecryptSucceeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:35:    public void testCryptoAESGCMEncryptDecryptBadIVFails() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:48:        Assertions.assertThrows(RobertServerCryptoException.class, () -> cryptoToDecrypt.decrypt(cipherText));
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:52:    public void testCryptoAESGCMEncryptDecryptBadTagFails() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESGCMTest.java:66:        Assertions.assertThrows(RobertServerCryptoException.class, () -> cryptoToDecrypt.decrypt(cipherText));
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFBTest.java:1:package test.fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFBTest.java:3:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFBTest.java:4:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESOFB;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFBTest.java:19:    public void testCryptoAESOFBEncryptDecryptSucceeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoAESOFBTest.java:35:    public void testCryptoAESOFBEncryptDecryptBadIvFails() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:1:package test.fr.gouv.stopc.robert.server.crypto.structure.impl;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:12:import fr.gouv.stopc.robert.server.crypto.exception.RobertServerCryptoException;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:13:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:56:	public void testDecryptKey1Succeeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:69:	public void testDecryptKey2Succeeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:81:	public void testEncryptKey1Succeeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:93:	public void testEncryptKey2Succeeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-crypto/src/test/java/test/fr/gouv/stopc/robert/server/crypto/structure/impl/CryptoSkinny64KeyTest.java:105:	public void testEncryptDecryptBijectionSucceeds() throws RobertServerCryptoException {
./robert-server-develop/robert-server-database/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-database/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-database/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-server-database/pom.xml:20:	<artifactId>robert-server-database</artifactId>
./robert-server-develop/robert-server-database/pom.xml:22:	<name>robert-server-database</name>
./robert-server-develop/robert-server-database/pom.xml:73:			<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/RobertServerDatabaseApplication.java:1:package fr.gouv.stopc.robertserver.database;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/RobertServerDatabaseApplication.java:7:public class RobertServerDatabaseApplication {
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/RobertServerDatabaseApplication.java:11:		SpringApplication.run(RobertServerDatabaseApplication.class, args);
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/model/ApplicationConfigurationModel.java:1:package fr.gouv.stopc.robertserver.database.model;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/model/Contact.java:1:package fr.gouv.stopc.robertserver.database.model;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/model/EpochExposition.java:1:package fr.gouv.stopc.robertserver.database.model;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/model/HelloMessageDetail.java:1:package fr.gouv.stopc.robertserver.database.model;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/model/Registration.java:1:package fr.gouv.stopc.robertserver.database.model;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/model/Registration.java:34:     * Record the time difference perceived between the server time and the client time
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/ApplicationConfigurationRepository.java:1:package fr.gouv.stopc.robertserver.database.repository;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/ApplicationConfigurationRepository.java:5:import fr.gouv.stopc.robertserver.database.model.ApplicationConfigurationModel;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/ContactRepository.java:1:package fr.gouv.stopc.robertserver.database.repository;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/ContactRepository.java:3:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/ContactUUIDRepository.java:1:package fr.gouv.stopc.robertserver.database.repository;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/ContactUUIDRepository.java:13:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/RegistrationRepository.java:1:package fr.gouv.stopc.robertserver.database.repository;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/repository/RegistrationRepository.java:7:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/ContactService.java:1:package fr.gouv.stopc.robertserver.database.service;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/ContactService.java:5:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/IApplicationConfigService.java:1:package fr.gouv.stopc.robertserver.database.service;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/IApplicationConfigService.java:5:import fr.gouv.stopc.robertserver.database.model.ApplicationConfigurationModel;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/IRegistrationService.java:1:package fr.gouv.stopc.robertserver.database.service;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/IRegistrationService.java:6:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ApplicationConfigServiceImpl.java:1:package fr.gouv.stopc.robertserver.database.service.impl;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ApplicationConfigServiceImpl.java:9:import fr.gouv.stopc.robertserver.database.model.ApplicationConfigurationModel;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ApplicationConfigServiceImpl.java:10:import fr.gouv.stopc.robertserver.database.repository.ApplicationConfigurationRepository;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ApplicationConfigServiceImpl.java:11:import fr.gouv.stopc.robertserver.database.service.IApplicationConfigService;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:1:package fr.gouv.stopc.robertserver.database.service.impl;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:12:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:13:import fr.gouv.stopc.robertserver.database.repository.ContactRepository;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/ContactServiceImpl.java:14:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:1:package fr.gouv.stopc.robertserver.database.service.impl;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:10:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:11:import fr.gouv.stopc.robertserver.database.repository.RegistrationRepository;
./robert-server-develop/robert-server-database/src/main/java/fr/gouv/stopc/robertserver/database/service/impl/RegistrationService.java:12:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ApplicationConfigurationRepositoryTest.java:1:package test.fr.gouv.stopc.robertserver.database.repository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ApplicationConfigurationRepositoryTest.java:14:import fr.gouv.stopc.robertserver.database.RobertServerDatabaseApplication;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ApplicationConfigurationRepositoryTest.java:15:import fr.gouv.stopc.robertserver.database.model.ApplicationConfigurationModel;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ApplicationConfigurationRepositoryTest.java:16:import fr.gouv.stopc.robertserver.database.repository.ApplicationConfigurationRepository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ApplicationConfigurationRepositoryTest.java:18:@ContextConfiguration(classes = { RobertServerDatabaseApplication.class })
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ContactRepositoryTest.java:1:package test.fr.gouv.stopc.robertserver.database.repository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ContactRepositoryTest.java:8:import fr.gouv.stopc.robertserver.database.RobertServerDatabaseApplication;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ContactRepositoryTest.java:9:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ContactRepositoryTest.java:10:import fr.gouv.stopc.robertserver.database.repository.ContactRepository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/ContactRepositoryTest.java:16:@ContextConfiguration(classes = {RobertServerDatabaseApplication.class})
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/RegistrationRepositoryTest.java:1:package test.fr.gouv.stopc.robertserver.database.repository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/RegistrationRepositoryTest.java:16:import fr.gouv.stopc.robertserver.database.RobertServerDatabaseApplication;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/RegistrationRepositoryTest.java:17:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/RegistrationRepositoryTest.java:18:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/RegistrationRepositoryTest.java:19:import fr.gouv.stopc.robertserver.database.repository.RegistrationRepository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/repository/RegistrationRepositoryTest.java:21:@ContextConfiguration(classes = {RobertServerDatabaseApplication.class})
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ApplicationConfigServiceImplTest.java:1:package test.fr.gouv.stopc.robertserver.database.service;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ApplicationConfigServiceImplTest.java:12:import fr.gouv.stopc.robertserver.database.repository.ApplicationConfigurationRepository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ApplicationConfigServiceImplTest.java:13:import fr.gouv.stopc.robertserver.database.service.impl.ApplicationConfigServiceImpl;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:1:package test.fr.gouv.stopc.robertserver.database.service;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:18:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:19:import fr.gouv.stopc.robertserver.database.repository.ContactRepository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/ContactServiceImplTest.java:20:import fr.gouv.stopc.robertserver.database.service.impl.ContactServiceImpl;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:1:package test.fr.gouv.stopc.robertserver.database.service;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:3:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:4:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:5:import fr.gouv.stopc.robertserver.database.repository.RegistrationRepository;
./robert-server-develop/robert-server-database/src/test/java/test/fr/gouv/stopc/robertserver/database/service/RegistrationServiceImplTest.java:6:import fr.gouv.stopc.robertserver.database.service.impl.RegistrationService;
./robert-server-develop/robert-server-database/src/test/resources/application.properties:7:# Mongo server host.
./robert-server-develop/robert-server-database/src/test/resources/application.properties:8:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-database/src/test/resources/application.properties:9:# Mongo server port.
./robert-server-develop/robert-server-dataset-injector/README.md:4:- running instance of crypto-server (which depends on PostgreSQL DB and softHSMv2)
./robert-server-develop/robert-server-dataset-injector/README.md:9:java -jar robert-server-dataset-injector <contact | registration> <number of record to generate>
./robert-server-develop/robert-server-dataset-injector/README.md:14:java -jar robert-server-dataset-injector.jar contact 100000
./robert-server-develop/robert-server-dataset-injector/README.md:15:java -jar robert-server-dataset-injector registration 20000
./robert-server-develop/robert-server-dataset-injector/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-dataset-injector/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-dataset-injector/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-server-dataset-injector/pom.xml:20:	<artifactId>robert-server-dataset-injector</artifactId>
./robert-server-develop/robert-server-dataset-injector/pom.xml:22:	<name>robert-server-dataset-injector</name>
./robert-server-develop/robert-server-dataset-injector/pom.xml:73:			<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-server-dataset-injector/pom.xml:79:			<artifactId>robert-server-database</artifactId>
./robert-server-develop/robert-server-dataset-injector/pom.xml:90:			<artifactId>robert-server-crypto</artifactId>
./robert-server-develop/robert-server-dataset-injector/pom.xml:95:            <artifactId>robert-crypto-grpc-server-storage</artifactId>
./robert-server-develop/robert-server-dataset-injector/pom.xml:108:            <artifactId>robert-crypto-grpc-server-messaging</artifactId>
./robert-server-develop/robert-server-dataset-injector/pom.xml:121:					<mainClass>fr.gouv.stopc.robertserver.dataset.injector.RobertServerInjectorDatasetApplication</mainClass>
./robert-server-develop/robert-server-dataset-injector/script/reset-mongo-db.bat:9:cd C:\Program Files\MongoDB\Server\4.2\bin
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/RobertServerInjectorDatasetApplication.java:1:package fr.gouv.stopc.robertserver.dataset.injector;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/RobertServerInjectorDatasetApplication.java:3:import fr.gouv.stopc.robertserver.dataset.injector.service.InjectorDataSetService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/RobertServerInjectorDatasetApplication.java:19:@EnableMongoRepositories(basePackages = "fr.gouv.stopc.robertserver.database.repository")
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/RobertServerInjectorDatasetApplication.java:21:@EnableJpaRepositories(basePackages ="fr.gouv.stopc.robert.crypto.grpc.server.storage.database.repository")
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/RobertServerInjectorDatasetApplication.java:23:public class RobertServerInjectorDatasetApplication {
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/RobertServerInjectorDatasetApplication.java:29:		ConfigurableApplicationContext cac = SpringApplication.run(RobertServerInjectorDatasetApplication.class, args);
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/exception/RobertInjectorDataSetException.java:1:package fr.gouv.stopc.robertserver.dataset.injector.exception;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/GeneratorIdService.java:1:package fr.gouv.stopc.robertserver.dataset.injector.service;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/InjectorDataSetService.java:1:package fr.gouv.stopc.robertserver.dataset.injector.service;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:1:package fr.gouv.stopc.robertserver.dataset.injector.service.impl;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:4:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:5:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationRequest;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:6:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationResponse;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:7:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:8:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:9:import fr.gouv.stopc.robertserver.dataset.injector.service.GeneratorIdService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:10:import fr.gouv.stopc.robertserver.dataset.injector.utils.PropertyLoader;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:37:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:39:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:43:    public GeneratorIdServiceImpl(PropertyLoader propertyLoader, ICryptoServerGrpcClient cryptoServerClient) {
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:45:        this.cryptoServerClient = cryptoServerClient;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:46:        this.cryptoServerClient.init(propertyLoader.getCryptoServerHost(), Integer.parseInt(propertyLoader.getCryptoServerPort()));
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:52:        byte[] serverCountryCode = new byte[1];
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:53:        serverCountryCode[0] = this.serverConfigurationService.getServerCountryCode();
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:57:                .setNumberOfDaysForEpochBundles(this.serverConfigurationService.getEpochBundleDurationInDays())
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:58:                .setServerCountryCode(ByteString.copyFrom(serverCountryCode))
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:59:                .setFromEpochId(TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart()))
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/GeneratorIdServiceImpl.java:62:        Optional<CreateRegistrationResponse> response = this.cryptoServerClient.createRegistration(request);
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:1:package fr.gouv.stopc.robertserver.dataset.injector.service.impl;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:3:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:4:import fr.gouv.stopc.robert.crypto.grpc.server.storage.cryptographic.service.ICryptographicStorageService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:5:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.model.ClientIdentifier;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:6:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.repository.ClientIdentifierRepository;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:7:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:8:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:9:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:10:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:11:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoAESECB;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:12:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:13:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:14:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:15:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:16:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:17:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:18:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:19:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:20:import fr.gouv.stopc.robertserver.dataset.injector.service.GeneratorIdService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:21:import fr.gouv.stopc.robertserver.dataset.injector.service.InjectorDataSetService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:22:import fr.gouv.stopc.robertserver.dataset.injector.utils.PropertyLoader;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:53:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:62:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:70:    private byte[] serverKey;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:87:        int epochId = TimeUtils.getNumberOfEpochsBetween(this.serverConfigurationService.getServiceTimeStart(), time);
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:89:        serverKey = cryptographicStorageService.getServerKey(epochId,serverConfigurationService.getServiceTimeStart(), false);
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:92:        countryCode = this.serverConfigurationService.getServerCountryCode();
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:93:        epochDuration = this.serverConfigurationService.getEpochDurationSecs();
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:94:        serviceTimeStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:121:        final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:149:        final long tpstStart = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:174:        // retrieve the key_for_mac from crypto server
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImpl.java:191:        byte[] ebid = this.cryptoService.generateEBID(new CryptoSkinny64(serverKey), currentEpochId, permanentIdentifier);
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/utils/PropertyLoader.java:1:package fr.gouv.stopc.robertserver.dataset.injector.utils;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/utils/PropertyLoader.java:10:    @Value("${robert.crypto.server.keystore.password}")
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/utils/PropertyLoader.java:13:    @Value("${robert.crypto.server.keystore.config.file}")
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/utils/PropertyLoader.java:16:    @Value("${robert.crypto.server.host}")
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/utils/PropertyLoader.java:17:    private String cryptoServerHost;
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/utils/PropertyLoader.java:19:    @Value("${robert.crypto.server.port}")
./robert-server-develop/robert-server-dataset-injector/src/main/java/fr/gouv/stopc/robertserver/dataset/injector/utils/PropertyLoader.java:20:    private String cryptoServerPort;
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:4:# spring.data.mongodb.database=${ROBERT_SERVER_DB_NAME:protectedRobertDB}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:7:# spring.data.mongodb.host=${ROBERT_SERVER_DB_HOST:localhost}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:8:# Mongo server host.
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:9:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:10:# Mongo server port.
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:11:# spring.data.mongodb.port=${ROBERT_SERVER_DB_PORT:27017}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:12:spring.data.mongodb.uri=${ROBERT_SERVER_DB_URI:mongodb\://${ROBERT_SERVER_DB_HOST:localhost}\:${ROBERT_SERVER_DB_PORT:27017}/${ROBERT_SERVER_DB_NAME:protectedRobertDB}}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:16:# The hostname of the crypto server
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:17:robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:localhost}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:19:# The port of the crypto server
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:20:robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:41:robert.crypto.server.keystore.password=${ROBERT_CRYPTO_SERVER_KEYSTORE_PASSWORD:1234}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:44:robert.crypto.server.keystore.config.file=${ROBERT_CRYPTO_SERVER_CONFIG_FILE:C:/works/SoftHSM2/softhsm2.cfg}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:46:spring.datasource.url= ${ROBERT_CRYPTO_SERVER_DB_URL:jdbc:postgresql://localhost:5432/robert}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:47:spring.datasource.username=${ROBERT_CRYPTO_SERVER_DB_USR:robert}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/application.properties:48:spring.datasource.password=${ROBERT_CRYPTO_SERVER_DB_PWD:robert}
./robert-server-develop/robert-server-dataset-injector/src/main/resources/logback.xml:4: <property  name="LOG_DIR" value="${ROBERT_SERVER_BATCH_LOG_FILE_PATH:-/logs}" />
./robert-server-develop/robert-server-dataset-injector/src/main/resources/logback.xml:5: <property  name="LOG_FILENAME" value="${ROBERT_SERVER_BATCH_LOG_FILE_NAME:-robert-server-dataset-injector}" />
./robert-server-develop/robert-server-dataset-injector/src/main/resources/logback.xml:6: <property  name="ERROR_LOG_FILENAME" value="${ROBERT_SERVER_BATCH_ERROR_LOG_FILE_NAME:-robert-server-dataset-injector}.error" />
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:1:package test.fr.gouv.stopc.robertserver.dataset.injector.service.impl;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:3:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.model.ClientIdentifier;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:4:import fr.gouv.stopc.robert.crypto.grpc.server.storage.database.repository.ClientIdentifierRepository;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:5:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:6:import fr.gouv.stopc.robertserver.database.service.impl.RegistrationService;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:7:import fr.gouv.stopc.robertserver.dataset.injector.RobertServerInjectorDatasetApplication;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:8:import fr.gouv.stopc.robertserver.dataset.injector.service.GeneratorIdService;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:9:import fr.gouv.stopc.robertserver.dataset.injector.service.InjectorDataSetService;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:20:import test.fr.gouv.stopc.robertserver.dataset.injector.utils.GenerateIdUtils;
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/service/impl/InjectorDataSetServiceImplTest.java:31:@ContextConfiguration(classes = {RobertServerInjectorDatasetApplication.class })
./robert-server-develop/robert-server-dataset-injector/src/test/java/test/fr/gouv/stopc/robertserver/dataset/injector/utils/GenerateIdUtils.java:1:package test.fr.gouv.stopc.robertserver.dataset.injector.utils;
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:7:# Mongo server host.
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:8:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:9:# Mongo server port.
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:19:# The hostname of the crypto server
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:20:robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:localhost}
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:22:# The port of the crypto server
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:23:robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:26:robert.crypto.server.keystore.password=${ROBERT_CRYPTO_SERVER_KEYSTORE_PASSWORD:1234}
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:29:robert.crypto.server.keystore.config.file=${ROBERT_CRYPTO_SERVER_CONFIG_FILE:C:/works/SoftHSM2/softhsm2.cfg}
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:31:spring.datasource.url= ${ROBERT_CRYPTO_SERVER_DB_URL:jdbc:postgresql://localhost:5432/robert}
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:32:spring.datasource.username=${ROBERT_CRYPTO_SERVER_DB_USR:robert}
./robert-server-develop/robert-server-dataset-injector/src/test/resources/application.properties:33:spring.datasource.password=${ROBERT_CRYPTO_SERVER_DB_PWD:robert}
./robert-server-develop/robert-server-ws-rest/mvnw:33:#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-ws-rest/mvnw.cmd:32:@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
./robert-server-develop/robert-server-ws-rest/pom.xml:15:		<artifactId>robert-server</artifactId>
./robert-server-develop/robert-server-ws-rest/pom.xml:19:	<artifactId>robert-server-ws-rest</artifactId>
./robert-server-develop/robert-server-ws-rest/pom.xml:21:	<name>robert-server-ws-rest</name>
./robert-server-develop/robert-server-ws-rest/pom.xml:55:			<artifactId>robert-crypto-grpc-server-messaging</artifactId>
./robert-server-develop/robert-server-ws-rest/pom.xml:61:			<artifactId>robert-server-database</artifactId>
./robert-server-develop/robert-server-ws-rest/pom.xml:67:			<artifactId>robert-server-crypto</artifactId>
./robert-server-develop/robert-server-ws-rest/pom.xml:73:			<artifactId>robert-server-common</artifactId>
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/RobertServerWsRestApplication.java:1:package fr.gouv.stopc.robertserver.ws;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/RobertServerWsRestApplication.java:14:public class RobertServerWsRestApplication {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/RobertServerWsRestApplication.java:17:		SpringApplication.run(RobertServerWsRestApplication.class, args);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/Config.java:1:package fr.gouv.stopc.robertserver.ws.config;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/Config.java:21:    @Value("${push.server.connection.timeout-millis}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/Config.java:24:    @Value("${push.server.global.timeout}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/RobertServerWsConfiguration.java:1:package fr.gouv.stopc.robertserver.ws.config;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/RobertServerWsConfiguration.java:7:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/RobertServerWsConfiguration.java:8:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/RobertServerWsConfiguration.java:11:public class RobertServerWsConfiguration {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/RobertServerWsConfiguration.java:14:	public RobertServerWsConfiguration(final PropertyLoader propertyLoader,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/RobertServerWsConfiguration.java:15:			final ICryptoServerGrpcClient cryptoServerClient) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/RobertServerWsConfiguration.java:17:		cryptoServerClient.init(propertyLoader.getCryptoServerHost(), Integer.parseInt( propertyLoader.getCryptoServerPort()));
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/WsServerConfiguration.java:1:package fr.gouv.stopc.robertserver.ws.config;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/WsServerConfiguration.java:11: * Global configuration of the Robert Server WS application, which is editable through Consul.
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/WsServerConfiguration.java:17:public class WsServerConfiguration {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/config/WsServerConfiguration.java:22:    @Value("${robert.server.status-request-minimum-epoch-gap}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:16:import fr.gouv.stopc.robertserver.ws.dto.CaptchaCreationDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:17:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:18:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:19:import fr.gouv.stopc.robertserver.ws.vo.CaptchaCreationVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:30:            throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:36:            throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/ICaptchaController.java:42:            throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:14:import fr.gouv.stopc.robertserver.ws.dto.DeleteHistoryResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:15:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:16:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:17:import fr.gouv.stopc.robertserver.ws.vo.DeleteHistoryRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IDeleteHistoryController.java:29:			throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IRegisterController.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IRegisterController.java:7:import fr.gouv.stopc.robertserver.ws.vo.RegisterVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IRegisterController.java:15:import fr.gouv.stopc.robertserver.ws.dto.RegisterResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IRegisterController.java:16:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IRegisterController.java:17:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IRegisterController.java:28:			throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportController.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportController.java:14:import fr.gouv.stopc.robertserver.ws.dto.ReportBatchResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportController.java:15:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportController.java:16:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportController.java:17:import fr.gouv.stopc.robertserver.ws.vo.ReportBatchRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportController.java:29:			throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportControllerV4.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportControllerV4.java:12:import fr.gouv.stopc.robertserver.ws.dto.ReportBatchResponseV4Dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportControllerV4.java:13:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportControllerV4.java:14:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportControllerV4.java:15:import fr.gouv.stopc.robertserver.ws.vo.ReportBatchRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IReportControllerV4.java:24:			throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IStatusController.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IStatusController.java:14:import fr.gouv.stopc.robertserver.ws.dto.StatusResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IStatusController.java:15:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IStatusController.java:16:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IStatusController.java:17:import fr.gouv.stopc.robertserver.ws.vo.StatusVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IStatusController.java:27:	ResponseEntity<StatusResponseDto> getStatus(@Valid @RequestBody(required=true) StatusVo statusVo) throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IUnregisterController.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IUnregisterController.java:14:import fr.gouv.stopc.robertserver.ws.dto.UnregisterResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IUnregisterController.java:15:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/IUnregisterController.java:16:import fr.gouv.stopc.robertserver.ws.vo.UnregisterRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/KpiController.java:1:package fr.gouv.stopc.robertserver.ws.controller;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/KpiController.java:14:import fr.gouv.stopc.robertserver.ws.dto.RobertServerKpi;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/KpiController.java:15:import fr.gouv.stopc.robertserver.ws.service.IKpiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/KpiController.java:16:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/KpiController.java:43:	 * Generates the Kpis for Robert Server on a period
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/KpiController.java:49:	public ResponseEntity<List<RobertServerKpi>> getKpi(
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:18:import fr.gouv.stopc.robertserver.ws.controller.ICaptchaController;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:19:import fr.gouv.stopc.robertserver.ws.dto.CaptchaCreationDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:20:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:21:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:22:import fr.gouv.stopc.robertserver.ws.vo.CaptchaCreationVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:42:            @Valid CaptchaCreationVo captchaCreationVo) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:63:    public ResponseEntity<byte[]> getCaptchaImage(String captchaId) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/CaptchaControllerImpl.java:68:    public ResponseEntity<byte[]> getCaptchaAudio(String captchaId) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:8:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:9:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromAuthResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:10:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:16:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:17:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:18:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:19:import fr.gouv.stopc.robertserver.ws.controller.IDeleteHistoryController;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:20:import fr.gouv.stopc.robertserver.ws.dto.DeleteHistoryResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:21:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:22:import fr.gouv.stopc.robertserver.ws.service.AuthRequestValidationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:23:import fr.gouv.stopc.robertserver.ws.vo.DeleteHistoryRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/DeleteHistoryControllerImpl.java:42:			throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:7:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationRequest;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:8:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:9:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:10:import fr.gouv.stopc.robertserver.database.model.ApplicationConfigurationModel;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:11:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:12:import fr.gouv.stopc.robertserver.ws.dto.ClientConfigDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:13:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:14:import fr.gouv.stopc.robertserver.ws.vo.RegisterVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:21:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:22:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:23:import fr.gouv.stopc.robertserver.database.service.IApplicationConfigService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:24:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:25:import fr.gouv.stopc.robertserver.ws.config.WsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:26:import fr.gouv.stopc.robertserver.ws.controller.IRegisterController;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:27:import fr.gouv.stopc.robertserver.ws.dto.RegisterResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:28:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:29:import fr.gouv.stopc.robertserver.ws.service.CaptchaService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:30:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:44:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:46:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:49:    private WsServerConfiguration wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:55:                                  final IServerConfigurationService serverConfigurationService,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:58:                                  final ICryptoServerGrpcClient cryptoServerClient,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:60:                                  final WsServerConfiguration wsServerConfiguration) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:63:        this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:66:        this.cryptoServerClient = cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:68:        this.wsServerConfiguration = wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:73:			throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:83:    private ResponseEntity<RegisterResponseDto> postCheckRegister(RegisterVo registerVo) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:86:        byte[] serverCountryCode = new byte[1];
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:87:        serverCountryCode[0] = this.serverConfigurationService.getServerCountryCode();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:91:                .setNumberOfDaysForEpochBundles(this.wsServerConfiguration.getEpochBundleDurationInDays())
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:92:                .setServerCountryCode(ByteString.copyFrom(serverCountryCode))
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:93:                .setFromEpochId(TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart()))
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:96:        Optional<CreateRegistrationResponse> response = this.cryptoServerClient.createRegistration(request);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:100:            throw new RobertServerException(MessageConstants.ERROR_OCCURED);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:114:            List<ApplicationConfigurationModel> serverConf = this.applicationConfigService.findAll();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:115:            if (CollectionUtils.isEmpty(serverConf)) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:118:                registerResponseDto.setConfig(serverConf
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:125:            registerResponseDto.setTimeStart(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:9:import fr.gouv.stopc.robertserver.ws.dto.VerifyResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:10:import fr.gouv.stopc.robertserver.ws.exception.RobertServerBadRequestException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:11:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:12:import fr.gouv.stopc.robertserver.ws.exception.RobertServerUnauthorizedException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:13:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:14:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:15:import fr.gouv.stopc.robertserver.ws.vo.ReportBatchRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:28:    public boolean isReportRequestValid(ReportBatchRequestVo reportBatchRequestVo) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:54:    private void checkValidityToken(String token) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:57:            throw new RobertServerBadRequestException(MessageConstants.INVALID_DATA.getValue());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:62:            throw new RobertServerBadRequestException(MessageConstants.INVALID_DATA.getValue());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerDelegate.java:69:            throw new RobertServerUnauthorizedException(MessageConstants.INVALID_AUTHENTICATION.getValue());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:6:import fr.gouv.stopc.robertserver.ws.controller.IReportController;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:7:import fr.gouv.stopc.robertserver.ws.dto.ReportBatchResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:8:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:9:import fr.gouv.stopc.robertserver.ws.service.ContactDtoService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:10:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:11:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:12:import fr.gouv.stopc.robertserver.ws.vo.ReportBatchRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerImpl.java:29:    public ResponseEntity<ReportBatchResponseDto> reportContactHistory(ReportBatchRequestVo reportBatchRequestVo) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:14:import fr.gouv.stopc.robertserver.ws.config.WsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:15:import fr.gouv.stopc.robertserver.ws.controller.IReportControllerV4;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:16:import fr.gouv.stopc.robertserver.ws.dto.ReportBatchResponseV4Dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:17:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:18:import fr.gouv.stopc.robertserver.ws.service.ContactDtoService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:19:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:20:import fr.gouv.stopc.robertserver.ws.vo.ReportBatchRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:33:    private final  WsServerConfiguration wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:42:            final WsServerConfiguration wsServerConfiguration,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:46:        this.wsServerConfiguration = wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:51:    public ResponseEntity<ReportBatchResponseV4Dto> reportContactHistory(ReportBatchRequestVo reportBatchRequestVo) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:68:    private String generateJWT(ReportBatchRequestVo reportBatchRequestVo) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:71:            Date expiration = new Date(now.getTime() + this.wsServerConfiguration.getJwtLifeTime() * 60000);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:92:        if (this.wsServerConfiguration.getJwtUseTransientKey()) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/ReportControllerV4Impl.java:97:            byte[] encoded = Decoders.BASE64.decode(this.wsServerConfiguration.getJwtPrivateKey());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:17:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromStatusResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:18:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:19:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:20:import fr.gouv.stopc.robertserver.database.model.ApplicationConfigurationModel;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:21:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:22:import fr.gouv.stopc.robertserver.database.service.IApplicationConfigService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:23:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:24:import fr.gouv.stopc.robertserver.ws.config.WsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:25:import fr.gouv.stopc.robertserver.ws.controller.IStatusController;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:26:import fr.gouv.stopc.robertserver.ws.dto.ClientConfigDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:27:import fr.gouv.stopc.robertserver.ws.dto.StatusResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:28:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:29:import fr.gouv.stopc.robertserver.ws.service.AuthRequestValidationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:30:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:31:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:32:import fr.gouv.stopc.robertserver.ws.vo.StatusVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:39:	private final IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:49:	private final WsServerConfiguration wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:55:			final IServerConfigurationService serverConfigurationService,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:61:			final WsServerConfiguration wsServerConfiguration) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:62:		this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:68:		this.wsServerConfiguration = wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:89:					int currentEpoch = TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:116:			} catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:126:	public Optional<ResponseEntity> validate(Registration record, int epoch, byte[] tuples) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:135:		int currentEpoch = TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:137:		if(epochDistance < this.wsServerConfiguration.getStatusRequestMinimumEpochGap() 
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:147:                    this.wsServerConfiguration.getStatusRequestMinimumEpochGap());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:152:					this.wsServerConfiguration.getStatusRequestMinimumEpochGap());
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:168:		// (now iterating through steps from section "If the ESR_REQUEST_A,i is valid, the server:", p11 of spec)
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:203:		List<ApplicationConfigurationModel> serverConf = this.applicationConfigService.findAll();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:204:		if (CollectionUtils.isEmpty(serverConf)) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:207:			return serverConf
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:1:package fr.gouv.stopc.robertserver.ws.controller.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:11:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:12:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:13:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:14:import fr.gouv.stopc.robertserver.ws.controller.IUnregisterController;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:15:import fr.gouv.stopc.robertserver.ws.dto.UnregisterResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:16:import fr.gouv.stopc.robertserver.ws.service.AuthRequestValidationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:17:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/UnregisterControllerImpl.java:18:import fr.gouv.stopc.robertserver.ws.vo.UnregisterRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/CaptchaCreationDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/CaptchaDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/ClientConfigDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/DeleteHistoryResponseDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/EpochKeyBundleDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/EpochKeyDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/RegisterResponseDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/ReportBatchResponseDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/ReportBatchResponseV4Dto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/RobertServerKpi.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/RobertServerKpi.java:18:public class RobertServerKpi {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/StatusResponseDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/UnregisterResponseDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/dto/VerifyResponseDto.java:1:package fr.gouv.stopc.robertserver.ws.dto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/ApiError.java:1:package fr.gouv.stopc.robertserver.ws.exception;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:1:package fr.gouv.stopc.robertserver.ws.exception;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:13:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:42:		if (e instanceof RobertServerException) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:52:		if (e instanceof RobertServerUnauthorizedException) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:54:		} else if (e instanceof RobertServerBadRequestException) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:58:		return HttpStatus.INTERNAL_SERVER_ERROR;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerBadRequestException.java:1:package fr.gouv.stopc.robertserver.ws.exception;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerBadRequestException.java:3:public class RobertServerBadRequestException extends RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerBadRequestException.java:7:	public RobertServerBadRequestException(String message) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerException.java:1:package fr.gouv.stopc.robertserver.ws.exception;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerException.java:5:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerException.java:11:public class RobertServerException extends Exception {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerException.java:19:	public RobertServerException(String message) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerException.java:24:	public RobertServerException(MessageConstants message) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerException.java:29:	public RobertServerException(MessageConstants message, Throwable error) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerUnauthorizedException.java:1:package fr.gouv.stopc.robertserver.ws.exception;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerUnauthorizedException.java:3:public class RobertServerUnauthorizedException extends RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/RobertServerUnauthorizedException.java:7:    public RobertServerUnauthorizedException(String message) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:1:package fr.gouv.stopc.robertserver.ws.service;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:3:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:4:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromAuthResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:5:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromStatusResponse;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:6:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:7:import fr.gouv.stopc.robertserver.ws.vo.StatusVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:11:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:12:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/AuthRequestValidationService.java:13:import fr.gouv.stopc.robertserver.ws.vo.AuthRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/CaptchaService.java:1:package fr.gouv.stopc.robertserver.ws.service;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/CaptchaService.java:3:import fr.gouv.stopc.robertserver.ws.vo.RegisterVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/ContactDtoService.java:1:package fr.gouv.stopc.robertserver.ws.service;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/ContactDtoService.java:5:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/ContactDtoService.java:6:import fr.gouv.stopc.robertserver.ws.vo.ContactVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/ContactDtoService.java:11:	public void saveContacts(List<ContactVo> contactVoList) throws RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/IKpiService.java:1:package fr.gouv.stopc.robertserver.ws.service;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/IKpiService.java:6:import fr.gouv.stopc.robertserver.ws.dto.RobertServerKpi;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/IKpiService.java:19:	 * @return the list of <code>RobertServerKpi</code> for each day on the period
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/IKpiService.java:21:	List<RobertServerKpi> computeKpi(LocalDate fromDate, LocalDate toDate);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/IRestApiService.java:1:package fr.gouv.stopc.robertserver.ws.service;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/IRestApiService.java:5:import fr.gouv.stopc.robertserver.ws.dto.VerifyResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/IRestApiService.java:6:import fr.gouv.stopc.robertserver.ws.vo.PushInfoVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:1:package fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:9:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:10:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:18:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:19:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.*;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:20:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:21:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:22:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:23:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:24:import fr.gouv.stopc.robertserver.ws.config.WsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:25:import fr.gouv.stopc.robertserver.ws.service.AuthRequestValidationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:26:import fr.gouv.stopc.robertserver.ws.vo.AuthRequestVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:27:import fr.gouv.stopc.robertserver.ws.vo.StatusVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:34:    @Value("${robert.server.request-time-delta-tolerance:60}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:37:    private final IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:39:    private final ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:43:    private final WsServerConfiguration wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:46:    public AuthRequestValidationServiceImpl(final IServerConfigurationService serverConfigurationService,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:47:                                            final ICryptoServerGrpcClient cryptoServerClient,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:49:                                            final WsServerConfiguration wsServerConfiguration) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:50:        this.serverConfigurationService = serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:51:        this.cryptoServerClient = cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:53:        this.wsServerConfiguration = wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:92:        // Moved timestamp difference check to after request sent to cryptoserver to be able to store drift in db
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:114:            Optional<GetIdFromAuthResponse> response = this.cryptoServerClient.getIdFromAuth(request);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:150:            Optional<DeleteIdResponse> response = this.cryptoServerClient.deleteId(request);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:184:                        .setFromEpochId(TimeUtils.getCurrentEpochFrom(this.serverConfigurationService.getServiceTimeStart()))
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:185:                        .setNumberOfDaysForEpochBundles(this.wsServerConfiguration.getEpochBundleDurationInDays())
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:186:                        .setServerCountryCode(ByteString.copyFrom(new byte[] { this.serverConfigurationService.getServerCountryCode() }))
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:189:            Optional<GetIdFromStatusResponse> response = this.cryptoServerClient.getIdFromStatus(request);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:230:            log.warn("Witnessing abnormal time difference {} between client: {} and server: {}",
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/AuthRequestValidationServiceImpl.java:236:                            "Discarding authenticated request because provided time is too far from current server time")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaErrorMessage.java:1:package fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:1:package fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:11:import fr.gouv.stopc.robertserver.ws.vo.RegisterVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:22:import fr.gouv.stopc.robertserver.ws.dto.CaptchaDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:23:import fr.gouv.stopc.robertserver.ws.service.CaptchaService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:24:import fr.gouv.stopc.robertserver.ws.service.impl.utils.CaptchaAccessException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:25:import fr.gouv.stopc.robertserver.ws.service.impl.utils.CaptchaErrorHandler;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:26:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:27:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:1:package fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:9:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:10:import fr.gouv.stopc.robertserver.database.service.ContactService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:11:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:12:import fr.gouv.stopc.robertserver.ws.service.ContactDtoService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:13:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:14:import fr.gouv.stopc.robertserver.ws.vo.ContactVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:15:import fr.gouv.stopc.robertserver.ws.vo.mapper.ContactMapper;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:33:	public void saveContacts(List<ContactVo> contactVoList) throws RobertServerException {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/ContactDtoServiceImpl.java:41:			throw new RobertServerException(MessageConstants.ERROR_OCCURED, e);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/KpiServiceImpl.java:1:package fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/KpiServiceImpl.java:9:import fr.gouv.stopc.robertserver.database.service.IRegistrationService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/KpiServiceImpl.java:10:import fr.gouv.stopc.robertserver.ws.dto.RobertServerKpi;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/KpiServiceImpl.java:11:import fr.gouv.stopc.robertserver.ws.service.IKpiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/KpiServiceImpl.java:39:	public List<RobertServerKpi> computeKpi(LocalDate fromDate, LocalDate toDate) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/KpiServiceImpl.java:41:		// implementation of the Robert Protocol, kpis of Robert Server can be
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/KpiServiceImpl.java:49:		return Arrays.asList(new RobertServerKpi(LocalDate.now(), nbAlertedUsers, nbExposedUsersNotAtRisk,
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:1:package fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:19:import fr.gouv.stopc.robertserver.ws.dto.VerifyResponseDto;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:20:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:21:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:22:import fr.gouv.stopc.robertserver.ws.vo.PushInfoVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:66:                .host(this.propertyLoader.getServerCodeHost())
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:67:                .port(this.propertyLoader.getServerCodePort())
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:68:                .path(this.propertyLoader.getServerCodeVerificationPath())
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:79:                .host(this.propertyLoader.getPushServerHost())
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImpl.java:80:                .port(this.propertyLoader.getPushServerPort())
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaAccessException.java:1:package fr.gouv.stopc.robertserver.ws.service.impl.utils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaAccessException.java:5:import fr.gouv.stopc.robertserver.ws.service.impl.CaptchaErrorMessage;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaErrorHandler.java:1:package fr.gouv.stopc.robertserver.ws.service.impl.utils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaErrorHandler.java:13:import fr.gouv.stopc.robertserver.ws.service.impl.CaptchaErrorMessage;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaErrorHandler.java:21:		if (response.getStatusCode().is4xxClientError() || response.getStatusCode().is5xxServerError()) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/MessageConstants.java:1:package fr.gouv.stopc.robertserver.ws.utils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:1:package fr.gouv.stopc.robertserver.ws.utils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:12:    @Value("${robert.crypto.server.host}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:13:    private String cryptoServerHost;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:15:    @Value("${robert.crypto.server.port}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:16:    private String cryptoServerPort;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:33:    @Value("${submission.code.server.host}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:34:    private String serverCodeHost;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:36:    @Value("${submission.code.server.port}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:37:    private String serverCodePort;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:39:    @Value("${submission.code.server.verify.path}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:40:    private String serverCodeVerificationPath;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:45:    @Value("${robert.server.request-time-delta-tolerance}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:48:    @Value("${robert.server.captcha-challenge-timestamp-tolerance}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:54:    @Value("${push.server.host}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:55:    private String pushServerHost;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:57:    @Value("${push.server.port}")
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/PropertyLoader.java:58:    private String pushServerPort;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/utils/UriConstants.java:1:package fr.gouv.stopc.robertserver.ws.utils;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/AuthRequestVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/CaptchaCreationVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/ContactVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/DeleteHistoryRequestVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/HelloMessageDetailVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/PushInfoVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/RegisterVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/ReportBatchRequestVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/RobertServerKpi.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/RobertServerKpi.java:18:public class RobertServerKpi {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/StatusVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/UnregisterRequestVo.java:1:package fr.gouv.stopc.robertserver.ws.vo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapper.java:1:package fr.gouv.stopc.robertserver.ws.vo.mapper;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapper.java:13:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapper.java:14:import fr.gouv.stopc.robertserver.database.model.HelloMessageDetail;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapper.java:15:import fr.gouv.stopc.robertserver.ws.vo.HelloMessageDetailVo;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapper.java:16:import fr.gouv.stopc.robertserver.ws.vo.ContactVo;
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:11:debug=${ROBERT_SERVER_DEBUG_ERRORS:false}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:15:#spring.data.mongodb.database=${ROBERT_SERVER_DB_NAME:protectedRobertDB}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:18:#spring.data.mongodb.host=${ROBERT_SERVER_DB_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:19:# Mongo server host.
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:20:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:21:# Mongo server port.
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:22:#spring.data.mongodb.port=${ROBERT_SERVER_DB_PORT:27017}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:25:server.port=${ROBERT_SERVER_PORT:8086}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:27:## Giving a value to $ROBERT_SERVER_DB_URI will bypass ROBERT_SERVER_DB_HOST, ROBERT_SERVER_DB_PORT and ROBERT_SERVER_DB_NAME
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:28:spring.data.mongodb.uri=${ROBERT_SERVER_DB_URI:mongodb\://${ROBERT_SERVER_DB_HOST:localhost}\:${ROBERT_SERVER_DB_PORT:27017}/${ROBERT_SERVER_DB_NAME:protectedRobertDB}}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:30:# The hostname of the crypto server
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:31:robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:33:# The port of the crypto server
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:34:robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:36:# Submission code server
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:37:submission.code.server.host=${SUBMISSION_CODE_SERVER_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:38:submission.code.server.port=${SUBMISSION_CODE_SERVER_PORT:8087}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:39:submission.code.server.verify.path=/api/v1/verify
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:51:management.endpoints.web.exposure.include=${ROBERT_SERVER_MONITORING_ENDPOINTS:health,metrics}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:53:robert.server.country-code=${ROBERT_SERVER_COUNTRY_CODE:0x33}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:54:robert.server.request-time-delta-tolerance=${ROBERT_SERVER_REQUEST_TIME_DELTA_TOLERANCE:60}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:55:robert.server.status-request-minimum-epoch-gap=${ROBERT_SERVER_ESR_MINI_EPOCH_GAP:2}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:56:robert.server.captcha-challenge-timestamp-tolerance=${ROBERT_SERVER_CAPTCHA_CHALLENGE_TIMESTAMP_TOLERANCE:15}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:57:robert.server.time-start=${ROBERT_SERVER_TIMESTART:20200601}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:60:push.server.host=${PUSH_SERVER_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:61:push.server.port=${PUSH_SERVER_PORT:9096}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:63:# Push server Timeout
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:64:push.server.connection.timeout-millis=${PUSH_SERVER_CONNECTION_TIMEOUT_MILLIS:10000}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application-dev.properties:65:push.server.global.timeout=${PUSH_SERVER_READ_TIMEOUT:10}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:11:debug=${ROBERT_SERVER_DEBUG_ERRORS:false}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:15:#spring.data.mongodb.database=${ROBERT_SERVER_DB_NAME:protectedRobertDB}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:18:#spring.data.mongodb.host=${ROBERT_SERVER_DB_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:19:# Mongo server host.
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:20:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:21:# Mongo server port.
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:22:#spring.data.mongodb.port=${ROBERT_SERVER_DB_PORT:27017}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:25:server.port=${ROBERT_SERVER_PORT:8086}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:27:## Giving a value to $ROBERT_SERVER_DB_URI will bypass ROBERT_SERVER_DB_HOST, ROBERT_SERVER_DB_PORT and ROBERT_SERVER_DB_NAME
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:29:# The hostname of the crypto server
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:30:robert.crypto.server.host=${ROBERT_CRYPTO_SERVER_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:32:# The port of the crypto server
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:33:robert.crypto.server.port=${ROBERT_CRYPTO_SERVER_PORT:9090}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:35:# Submission code server
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:36:submission.code.server.host=${SUBMISSION_CODE_SERVER_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:37:submission.code.server.port=${SUBMISSION_CODE_SERVER_PORT:8087}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:38:submission.code.server.verify.path=/api/v1/verify
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:50:management.endpoints.web.exposure.include=${ROBERT_SERVER_MONITORING_ENDPOINTS:health,metrics}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:52:robert.server.country-code=${ROBERT_SERVER_COUNTRY_CODE:0x33}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:53:robert.server.request-time-delta-tolerance=${ROBERT_SERVER_REQUEST_TIME_DELTA_TOLERANCE:60}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:54:robert.server.captcha-challenge-timestamp-tolerance=${ROBERT_SERVER_CAPTCHA_CHALLENGE_TIMESTAMP_TOLERANCE:15}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:55:robert.server.time-start=${ROBERT_SERVER_TIMESTART:20200601}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:57:push.server.host=${PUSH_SERVER_HOST:localhost}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:58:push.server.port=${PUSH_SERVER_PORT:9096}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:60:# Push server Timeout
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:61:push.server.connection.timeout-millis=${PUSH_SERVER_CONNECTION_TIMEOUT_MILLIS:10000}
./robert-server-develop/robert-server-ws-rest/src/main/resources/application.properties:62:push.server.global.timeout=${PUSH_SERVER_READ_TIMEOUT:10}
./robert-server-develop/robert-server-ws-rest/src/main/resources/bootstrap.yml:5:    name: robert-server
./robert-server-develop/robert-server-ws-rest/src/main/resources/bootstrap.yml:16:      token: ${ROBERT_SERVER_CONSUL_ACL_TOKEN:token}
./robert-server-develop/robert-server-ws-rest/src/main/resources/logback.xml:4: <property  name="LOG_DIR" value="${ROBERT_SERVER_LOG_FILE_PATH:-/logs}" />
./robert-server-develop/robert-server-ws-rest/src/main/resources/logback.xml:5: <property  name="LOG_FILENAME" value="${ROBERT_SERVER_LOG_FILE_NAME:-robert-server-ws-rest}" />
./robert-server-develop/robert-server-ws-rest/src/main/resources/logback.xml:6: <property  name="ERROR_LOG_FILENAME" value="${ROBERT_SERVER_ERROR_LOG_FILE_NAME:-robert-server-ws-rest}.error" />
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:1:package test.fr.gouv.stopc.robertserver.ws;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:49:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:50:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromAuthResponse;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:51:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:52:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:53:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:54:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:55:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:56:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:57:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:58:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:59:import fr.gouv.stopc.robertserver.database.service.impl.RegistrationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:60:import fr.gouv.stopc.robertserver.ws.RobertServerWsRestApplication;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:61:import fr.gouv.stopc.robertserver.ws.dto.DeleteHistoryResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:62:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:63:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:64:import fr.gouv.stopc.robertserver.ws.vo.DeleteHistoryRequestVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:70:        RobertServerWsRestApplication.class }, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:103:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:109:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:113:    private byte[] serverKey;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:126:        this.serverKey = this.generateKey(24);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:162:        .when(this.cryptoServerClient).getIdFromAuth(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:216:        .when(this.cryptoServerClient).getIdFromAuth(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:263:        .when(this.cryptoServerClient).getIdFromAuth(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:319:        .when(this.cryptoServerClient).getIdFromAuth(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:411:        doReturn(Optional.empty()).when(this.cryptoServerClient).getIdFromAuth(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:458:        long tpStartInSecondsNTP = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:510:            res[0] = this.cryptoService.generateEBID(new CryptoSkinny64(this.serverKey),
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:1:package test.fr.gouv.stopc.robertserver.ws;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:18:import fr.gouv.stopc.robertserver.ws.vo.RegisterVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:43:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:44:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.CreateRegistrationResponse;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:45:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:46:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:47:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:48:import fr.gouv.stopc.robertserver.database.service.impl.RegistrationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:49:import fr.gouv.stopc.robertserver.ws.RobertServerWsRestApplication;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:50:import fr.gouv.stopc.robertserver.ws.dto.RegisterResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:51:import fr.gouv.stopc.robertserver.ws.service.CaptchaService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:52:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:53:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:54:import fr.gouv.stopc.robertserver.ws.vo.PushInfoVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:61:        RobertServerWsRestApplication.class }, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:93:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:96:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:229:        when(this.cryptoServerClient.createRegistration(any())).thenReturn(Optional.empty());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:236:        assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:237:        verify(this.cryptoServerClient).createRegistration(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:264:        when(this.cryptoServerClient.createRegistration(any())).thenReturn(Optional.of(createRegistrationResponse));
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:273:        verify(this.cryptoServerClient).createRegistration(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:296:    public void testShouldCallPushServerWhenPushInfoIsProvidedAndRegistrationCreated() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:328:        when(this.cryptoServerClient.createRegistration(any())).thenReturn(Optional.of(createRegistrationResponse));
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:343:        verify(this.cryptoServerClient).createRegistration(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:373:        when(this.cryptoServerClient.createRegistration(any())).thenReturn(Optional.of(createRegistrationResponse));
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:388:        verify(this.cryptoServerClient).createRegistration(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:394:        long tpStartInSecondsNTP = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:1:package test.fr.gouv.stopc.robertserver.ws;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:43:import fr.gouv.stopc.robertserver.ws.RobertServerWsRestApplication;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:44:import fr.gouv.stopc.robertserver.ws.config.RobertServerWsConfiguration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:45:import fr.gouv.stopc.robertserver.ws.dto.ReportBatchResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:46:import fr.gouv.stopc.robertserver.ws.dto.ReportBatchResponseV4Dto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:47:import fr.gouv.stopc.robertserver.ws.dto.VerifyResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:48:import fr.gouv.stopc.robertserver.ws.exception.ApiError;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:49:import fr.gouv.stopc.robertserver.ws.exception.RobertServerException;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:50:import fr.gouv.stopc.robertserver.ws.service.ContactDtoService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:51:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:52:import fr.gouv.stopc.robertserver.ws.utils.MessageConstants;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:53:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:54:import fr.gouv.stopc.robertserver.ws.vo.ContactVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:55:import fr.gouv.stopc.robertserver.ws.vo.HelloMessageDetailVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:56:import fr.gouv.stopc.robertserver.ws.vo.ReportBatchRequestVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:60:@SpringBootTest(classes = { RobertServerWsRestApplication.class }, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:88:    private RobertServerWsConfiguration config;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:142:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:164:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:186:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:208:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:244:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:287:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:313:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:341:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:364:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:386:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:408:        } catch (RobertServerException e) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:439:        doThrow(new RobertServerException(MessageConstants.ERROR_OCCURED)).when(this.contactDtoService).saveContacts(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:446:        assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RobertServerWsRestApplicationTest.java:1:package test.fr.gouv.stopc.robertserver.ws;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RobertServerWsRestApplicationTest.java:8:class RobertServerWsRestApplicationTest {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1:package test.fr.gouv.stopc.robertserver.ws;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:49:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:50:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.GetIdFromStatusResponse;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:51:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:52:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:53:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:54:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:55:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:56:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:57:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:58:import fr.gouv.stopc.robertserver.database.model.EpochExposition;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:59:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:60:import fr.gouv.stopc.robertserver.database.service.impl.RegistrationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:61:import fr.gouv.stopc.robertserver.ws.RobertServerWsRestApplication;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:62:import fr.gouv.stopc.robertserver.ws.config.RobertServerWsConfiguration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:63:import fr.gouv.stopc.robertserver.ws.config.WsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:64:import fr.gouv.stopc.robertserver.ws.dto.StatusResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:65:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:66:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:67:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:68:import fr.gouv.stopc.robertserver.ws.vo.PushInfoVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:69:import fr.gouv.stopc.robertserver.ws.vo.StatusVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:75:        RobertServerWsRestApplication.class }, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:92:    @Value("${robert.server.status-request-minimum-epoch-gap}")
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:113:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:116:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:122:    private WsServerConfiguration wsServerConfiguration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:125:    private RobertServerWsConfiguration config;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:132:    private byte[] serverKey;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:144:        when(this.wsServerConfiguration.getStatusRequestMinimumEpochGap()).thenReturn(this.statusRequestMinimumEpochGap);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:146:        this.serverKey = this.generateKey(24);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:222:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:259:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:505:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:559:        long tpStartInSecondsNTP = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:609:            res[0] = this.cryptoService.generateEBID(new CryptoSkinny64(this.serverKey),
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:675:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:729:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:793:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:865:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:902:                this.wsServerConfiguration.getStatusRequestMinimumEpochGap());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:931:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:961:                this.wsServerConfiguration.getStatusRequestMinimumEpochGap());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:998:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1049:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1110:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1181:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1241:        .when(this.cryptoServerClient).getIdFromStatus(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:1:package test.fr.gouv.stopc.robertserver.ws;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:46:import fr.gouv.stopc.robert.crypto.grpc.server.client.service.ICryptoServerGrpcClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:47:import fr.gouv.stopc.robert.crypto.grpc.server.messaging.DeleteIdResponse;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:48:import fr.gouv.stopc.robert.server.common.DigestSaltEnum;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:49:import fr.gouv.stopc.robert.server.common.service.IServerConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:50:import fr.gouv.stopc.robert.server.common.utils.ByteUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:51:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:52:import fr.gouv.stopc.robert.server.crypto.service.CryptoService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:53:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoHMACSHA256;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:54:import fr.gouv.stopc.robert.server.crypto.structure.impl.CryptoSkinny64;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:55:import fr.gouv.stopc.robertserver.database.model.Registration;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:56:import fr.gouv.stopc.robertserver.database.service.impl.RegistrationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:57:import fr.gouv.stopc.robertserver.ws.RobertServerWsRestApplication;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:58:import fr.gouv.stopc.robertserver.ws.dto.UnregisterResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:59:import fr.gouv.stopc.robertserver.ws.service.IRestApiService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:60:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:61:import fr.gouv.stopc.robertserver.ws.utils.UriConstants;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:62:import fr.gouv.stopc.robertserver.ws.vo.UnregisterRequestVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:68:        RobertServerWsRestApplication.class }, webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:100:    private ICryptoServerGrpcClient cryptoServerClient;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:109:    private IServerConfigurationService serverConfigurationService;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:113:    private byte[] serverKey;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:124:        this.serverKey = generateKey(24);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:207:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:224:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:351:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:367:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:397:        long tpStartInSecondsNTP = this.serverConfigurationService.getServiceTimeStart();
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:444:            res[0] = this.cryptoService.generateEBID(new CryptoSkinny64(this.serverKey),
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:475:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:490:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:512:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:530:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:536:    public void testUnregisterShouldCallPushServerWhenItSucceedsAndPushTokenIsProvidedAndNotEmpty() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:550:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:557:    public void testUnregisterShouldNotCallPushServerWhenItSucceedsAndPushTokenIsProvidedAndEmpty() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:571:        verify(this.cryptoServerClient, times(1)).deleteId(ArgumentMatchers.any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:596:        .when(this.cryptoServerClient).deleteId(any());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:1:package test.fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:10:import fr.gouv.stopc.robertserver.ws.vo.RegisterVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:24:import fr.gouv.stopc.robertserver.ws.dto.CaptchaDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:25:import fr.gouv.stopc.robertserver.ws.service.impl.CaptchaErrorMessage;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:26:import fr.gouv.stopc.robertserver.ws.service.impl.CaptchaServiceImpl;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:27:import fr.gouv.stopc.robertserver.ws.service.impl.utils.CaptchaAccessException;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:28:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:1:package test.fr.gouv.stopc.robertserver.ws.service.impl;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:29:import fr.gouv.stopc.robertserver.ws.dto.VerifyResponseDto;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:30:import fr.gouv.stopc.robertserver.ws.service.impl.RestApiServiceImpl;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:31:import fr.gouv.stopc.robertserver.ws.utils.PropertyLoader;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:32:import fr.gouv.stopc.robertserver.ws.vo.PushInfoVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:53:    @Value("${push.server.host}")
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:54:    private String pushServerHost;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:56:    @Value("${push.server.port}")
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:57:    private String pushServerPort;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:83:        when(this.propertyLoader.getServerCodeHost()).thenReturn("localhost");
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:84:        when(this.propertyLoader.getServerCodePort()).thenReturn("8080");
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:85:        when(this.propertyLoader.getServerCodeVerificationPath()).thenReturn("/api/v1/verify");
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:87:        when(this.propertyLoader.getPushServerHost()).thenReturn(this.pushServerHost);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:88:        when(this.propertyLoader.getPushServerPort()).thenReturn(this.pushServerPort);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:172:    public void testRegisterPushNotifShouldNotCallPushServerWhenPushInfoIsNull() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:185:    public void testRegisterPushNotifShouldNotCallPushServerWhenPushInfoTokenIsNull() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:198:    public void testRegisterPushNotifShouldNotCallPushServerWhenPushInfoTokenIsBlank() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:211:    public void testRegisterPushNotifShouldNotCallPushServerWhenPushInfoLocaleIsNull() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:224:    public void testRegisterPushNotifShouldNotCallPushServerWhenPushInfoLocaleIsBlank() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:237:    public void testRegisterPushNotifShouldNotCallPushServerWhenPushInfoTimezoneIsNull() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:250:    public void testRegisterPushNotifShouldNotCallPushServerWhenPushInfoTimezoneIsBlank() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:264:    public void testUnregisterPushNotifShouldNotCallPushServerWhenPushTokenIsNull() {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapperTest.java:1:package test.fr.gouv.stopc.robertserver.ws.vo.mapper;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapperTest.java:20:import fr.gouv.stopc.robert.server.common.utils.TimeUtils;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapperTest.java:21:import fr.gouv.stopc.robertserver.database.model.Contact;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapperTest.java:22:import fr.gouv.stopc.robertserver.ws.vo.ContactVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapperTest.java:23:import fr.gouv.stopc.robertserver.ws.vo.HelloMessageDetailVo;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/vo/mapper/ContactMapperTest.java:24:import fr.gouv.stopc.robertserver.ws.vo.mapper.ContactMapper;
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:18:# Mongo server host.
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:19:#spring.data.mongodb.password= # Login password of the mongo server.
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:20:# Mongo server port.
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:26:# The hostname of the crypto server
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:27:robert.crypto.server.host=localhost
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:29:# The port of the crypto server
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:30:robert.crypto.server.port=9090
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:32:# Submission code server
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:33:submission.code.server.host=localhost
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:34:submission.code.server.port=8087
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:35:submission.code.server.verify.path=/api/v1/verify
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:47:robert.server.country-code=0x21
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:48:robert.server.request-time-delta-tolerance=60
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:49:robert.server.captcha-challenge-timestamp-tolerance=15
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:50:robert.server.time-start=20200601
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:52:push.server.host=localhost
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:53:push.server.port=8090
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:60:# Push server Timeout
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:61:push.server.connection.timeout-millis=10000
./robert-server-develop/robert-server-ws-rest/src/test/resources/application.properties:62:push.server.global.timeout=10
