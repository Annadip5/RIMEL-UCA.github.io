./robert-server-develop/LICENSE.md:172:> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.  
./robert-server-develop/README.md:2:Ce projet gitlab.inria.fr est un des composants de la solution plus globale [StopCovid](https://gitlab.inria.fr/stopcovid19/accueil/-/blob/master/README.md).
./robert-server-develop/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-crypto-grpc-server-messaging/LICENSE:172:> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
./robert-server-develop/robert-crypto-grpc-server-messaging/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-crypto-grpc-server-messaging/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-crypto-grpc-server-messaging/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-crypto-grpc-server-messaging/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-crypto-grpc-server-messaging/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-crypto-grpc-server-messaging/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-crypto-grpc-server-messaging/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-crypto-grpc-server-storage/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-crypto-grpc-server-storage/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-crypto-grpc-server/LICENSE:172:> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
./robert-server-develop/robert-crypto-grpc-server/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-crypto-grpc-server/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-crypto-grpc-server/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-crypto-grpc-server/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-crypto-grpc-server/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-crypto-grpc-server/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-crypto-grpc-server/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-server-batch/LICENSE:172:> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
./robert-server-develop/robert-server-batch/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-batch/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-server-batch/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-batch/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-batch/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-batch/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-server-batch/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:66:	// https://hal.inria.fr/hal-02641630/document (Table 4)
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:68:	// Aggregate (formula n56) taken from https://hal.inria.fr/hal-02641630/document
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:73:		// https://hal.inria.fr/hal-02641630/document (56)
./robert-server-develop/robert-server-batch/src/main/java/fr/gouv/stopc/robert/server/batch/service/impl/ScoringStrategyV2ServiceImpl.java:160:		// https://hal.inria.fr/hal-02641630/document - eq (52)
./robert-server-develop/robert-server-common/LICENSE:172:> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
./robert-server-develop/robert-server-common/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-common/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-server-common/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-common/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-common/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-common/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-server-common/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-server-common/src/main/java/fr/gouv/stopc/robert/server/common/utils/TimeUtils.java:32:     * ref {@see <a href="https://stackoverflow.com/questions/29112071/how-to-convert-ntp-time-to-unix-epoch-time-in-c-language-linux/29138806#29138806">Stackoverflow NTP to unix time interval</a>}
./robert-server-develop/robert-server-crypto/LICENSE:172:> This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.
./robert-server-develop/robert-server-crypto/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-crypto/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-server-crypto/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-crypto/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-crypto/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-crypto/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-server-crypto/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/skinny64/SkinnyCipher192.java:11: * @see https://github.com/rweather/skinny-c
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/skinny64/impl/SkinnyCipher192Impl.java:226:         * technique from https://github.com/kste/skinny_avx to convert NOR-XOR
./robert-server-develop/robert-server-crypto/src/main/java/fr/gouv/stopc/robert/server/crypto/structure/ICryptoStructure.java:15: * {@see <a href="https://github.com/ROBERT-proximity-tracing/documents/blob/master/ROBERT-specification-EN-v1_0.pdf">ROBERT: ROBust and privacy-presERving-proximity Tracing</a>}
./robert-server-develop/robert-server-database/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-database/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-server-database/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-database/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-database/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-database/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-server-database/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-server-dataset-injector/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-dataset-injector/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-server-dataset-injector/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-dataset-injector/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-dataset-injector/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-dataset-injector/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-server-dataset-injector/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-server-ws-rest/mvnw:11:#    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-ws-rest/mvnw:58:    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
./robert-server-develop/robert-server-ws-rest/mvnw:217:      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-ws-rest/mvnw.cmd:10:@REM    https://www.apache.org/licenses/LICENSE-2.0
./robert-server-develop/robert-server-ws-rest/mvnw.cmd:123:set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"
./robert-server-develop/robert-server-ws-rest/pom.xml:2:<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
./robert-server-develop/robert-server-ws-rest/pom.xml:8:			<url>https://www.mozilla.org/en-US/MPL/2.0/</url>
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:17:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:76:            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:129:            return ResponseEntity.status(HttpStatus.CREATED).body(registerResponseDto);
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/RegisterControllerImpl.java:132:        return ResponseEntity.status(HttpStatus.BAD_REQUEST).build();
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:12:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/controller/impl/StatusControllerImpl.java:108:				    .filter(push -> responseEntity.get().getStatusCode().equals(HttpStatus.OK))
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:4:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:21:	protected ResponseEntity<Object> handleHttpRequestMethodNotSupported(HttpRequestMethodNotSupportedException e, HttpHeaders headers, HttpStatus status, WebRequest request) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:30:	protected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException e, HttpHeaders headers, HttpStatus status, WebRequest request) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:47:		return new ResponseEntity<>(buildApiError(message), retrieveHttpStatus(e));
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:50:	private HttpStatus retrieveHttpStatus(Exception e) {
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:53:			return HttpStatus.UNAUTHORIZED;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:55:			return HttpStatus.BAD_REQUEST;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/exception/CustomRestExceptionHandler.java:58:		return HttpStatus.INTERNAL_SERVER_ERROR;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaErrorMessage.java:3:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaErrorMessage.java:18:	private HttpStatus httpStatus;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:14:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:72:							&& Objects.equals(HttpStatus.NOT_FOUND, e.getStatusCode()))
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImpl.java:80:							&& Objects.equals(HttpStatus.NOT_FOUND, e.getStatusCode()))) || (Objects.equals(HttpStatus.GONE, e.getStatusCode())))
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaAccessException.java:3:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaAccessException.java:18:	private HttpStatus statusCode;
./robert-server-develop/robert-server-ws-rest/src/main/java/fr/gouv/stopc/robertserver/ws/service/impl/utils/CaptchaAccessException.java:21:	public CaptchaAccessException(HttpStatus statusCode, CaptchaErrorMessage errorMessage, String error) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:38:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:139:        assertEquals(HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:175:        callWsAndAssertResponse(reg, this.requestBody, HttpStatus.OK, 2, 1);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:233:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:274:        callWsAndAssertResponse(reg, this.requestBody, HttpStatus.NOT_FOUND, 2, 0);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:288:        callWsAndAssertResponse(null, this.requestBody, HttpStatus.BAD_REQUEST, 0, 0);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:328:        callWsAndAssertResponse(reg, this.requestBody, HttpStatus.OK, 2, 2);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:344:        callWsAndAssertResponse(null, this.requestBody, HttpStatus.BAD_REQUEST, 0, 0);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:360:        callWsAndAssertResponse(null, this.requestBody, HttpStatus.BAD_REQUEST, 0, 0);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:375:        callWsAndAssertResponse(null, this.requestBody, HttpStatus.BAD_REQUEST, 0, 0);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:392:        callWsAndAssertResponse(null, this.requestBody, HttpStatus.BAD_REQUEST, 0, 0);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:425:        callWsAndAssertResponse(null, this.requestBody, HttpStatus.BAD_REQUEST, 0, 0);
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/DeleteHistoryControllerWsRestTest.java:521:            HttpStatus expectedStatus, int findByIdCalls, int saveRegistrationCalls) {
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:32:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:131:        assertEquals(HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:144:    		assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:157:    		assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:166:        assertEquals(HttpStatus.BAD_REQUEST, 
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:170:        assertEquals(HttpStatus.BAD_REQUEST, 
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:174:        assertEquals(HttpStatus.BAD_REQUEST, 
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:178:        assertEquals(HttpStatus.BAD_REQUEST, 
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:182:        assertEquals(HttpStatus.BAD_REQUEST, 
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:186:        assertEquals(HttpStatus.BAD_REQUEST, 
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:209:        assertEquals(HttpStatus.UNAUTHORIZED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:236:        assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:272:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:339:        assertEquals(HttpStatus.CREATED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/RegisterControllerWsRestTest.java:384:        assertEquals(HttpStatus.CREATED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:34:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:137:            assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:159:            assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:181:            assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:203:            assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:238:            assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:279:            assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:305:            assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:333:            assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:360:            assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:383:            assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:405:            assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:425:        assertEquals(HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:446:        assertEquals(HttpStatus.INTERNAL_SERVER_ERROR, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/ReportControllerWsRestTest.java:467:        assertEquals(HttpStatus.UNAUTHORIZED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:38:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:160:        assertEquals(HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:190:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:235:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:276:        assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:308:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:345:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:377:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:419:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:452:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:483:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:524:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:684:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:738:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:809:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:879:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:941:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1008:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1060:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1121:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1197:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/StatusControllerWsRestTest.java:1251:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:35:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:138:        assertEquals(HttpStatus.METHOD_NOT_ALLOWED, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:160:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:223:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:252:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:279:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:302:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:325:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:366:        assertEquals(HttpStatus.BAD_REQUEST, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:488:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:529:        assertEquals(HttpStatus.NOT_FOUND, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:548:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/UnregisterControllerWsRestTest.java:569:        assertEquals(HttpStatus.OK, response.getStatusCode());
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:17:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:146:                .thenThrow( new CaptchaAccessException(HttpStatus.NOT_FOUND,
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/CaptchaServiceImplTest.java:147:                        CaptchaErrorMessage.builder().httpStatus(HttpStatus.NOT_FOUND).message("The captcha does not exist").code("0002").build(),
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:21:import org.springframework.http.HttpStatus;
./robert-server-develop/robert-server-ws-rest/src/test/java/test/fr/gouv/stopc/robertserver/ws/service/impl/RestApiServiceImplTest.java:144:                new HttpClientErrorException(HttpStatus.BAD_REQUEST));
