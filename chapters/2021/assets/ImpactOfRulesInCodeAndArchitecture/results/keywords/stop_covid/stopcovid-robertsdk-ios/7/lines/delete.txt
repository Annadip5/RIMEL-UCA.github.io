../stopcovid-robertsdk-ios/.git/hooks/pre-push.sample:31:		# Handle delete
../stopcovid-robertsdk-ios/.git/hooks/pre-rebase.sample:102:   it is deleted.  If you need to build on top of it to correct
../stopcovid-robertsdk-ios/.git/hooks/pre-rebase.sample:124:    Then you can delete it.  More importantly, you should not
../stopcovid-robertsdk-ios/.git/hooks/pre-rebase.sample:149:   and is ready to be deleted.
../stopcovid-robertsdk-ios/.git/hooks/pre-rebase.sample:154:B to be deleted.
../stopcovid-robertsdk-ios/.git/hooks/update.sample:13:# hooks.allowdeletetag
../stopcovid-robertsdk-ios/.git/hooks/update.sample:19:# hooks.allowdeletebranch
../stopcovid-robertsdk-ios/.git/hooks/update.sample:47:allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
../stopcovid-robertsdk-ios/.git/hooks/update.sample:49:allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
../stopcovid-robertsdk-ios/.git/hooks/update.sample:62:# if $newrev is 0000...0000, it's a commit to delete a ref.
../stopcovid-robertsdk-ios/.git/hooks/update.sample:65:	newrev_type=delete
../stopcovid-robertsdk-ios/.git/hooks/update.sample:80:	refs/tags/*,delete)
../stopcovid-robertsdk-ios/.git/hooks/update.sample:81:		# delete tag
../stopcovid-robertsdk-ios/.git/hooks/update.sample:82:		if [ "$allowdeletetag" != "true" ]; then
../stopcovid-robertsdk-ios/.git/hooks/update.sample:103:	refs/heads/*,delete)
../stopcovid-robertsdk-ios/.git/hooks/update.sample:104:		# delete branch
../stopcovid-robertsdk-ios/.git/hooks/update.sample:105:		if [ "$allowdeletebranch" != "true" ]; then
../stopcovid-robertsdk-ios/.git/hooks/update.sample:113:	refs/remotes/*,delete)
../stopcovid-robertsdk-ios/.git/hooks/update.sample:114:		# delete tracking branch
../stopcovid-robertsdk-ios/.git/hooks/update.sample:115:		if [ "$allowdeletebranch" != "true" ]; then
Binary file ../stopcovid-robertsdk-ios/.git/index matches
../stopcovid-robertsdk-ios/Robert/Message/RBMessageGenerator.swift:71:    // MARK: - Delete exposure history mac generation -
../stopcovid-robertsdk-ios/Robert/Message/RBMessageGenerator.swift:72:    static func generateDeleteExposureHistoryMessage(for epoch: RBEpoch, ntpTimestamp: Int, key: Data) throws -> RBDeleteExposureHistoryMessage {
../stopcovid-robertsdk-ios/Robert/Message/RBMessageGenerator.swift:75:        let mac: Data = try generateDeleteExposureHistoryMessageMAC(key: key, epoch: epoch, timeData: timeData)
../stopcovid-robertsdk-ios/Robert/Message/RBMessageGenerator.swift:76:        return RBDeleteExposureHistoryMessage(ebid: epoch.ebid, time: timeData.base64EncodedString(), mac: mac.base64EncodedString())
../stopcovid-robertsdk-ios/Robert/Message/RBMessageGenerator.swift:79:    private static func generateDeleteExposureHistoryMessageMAC(key: Data, epoch: RBEpoch, timeData: Data) throws -> Data {
../stopcovid-robertsdk-ios/Robert/Model/RBDeleteExposureHistoryMessage.swift:5://  RBDeleteExposureHistoryMessage.swift
../stopcovid-robertsdk-ios/Robert/Model/RBDeleteExposureHistoryMessage.swift:13:struct RBDeleteExposureHistoryMessage {
../stopcovid-robertsdk-ios/Robert/Protocols/RBServer.swift:19:    func deleteExposureHistory(ebid: String, time: String, mac: String, completion: @escaping (_ error: Error?) -> ())
../stopcovid-robertsdk-ios/Robert/RBManager.swift:214:    func deleteExposureHistory(_ completion: @escaping (_ error: Error?) -> ()) {
../stopcovid-robertsdk-ios/Robert/RBManager.swift:225:            let statusMessage: RBDeleteExposureHistoryMessage = try RBMessageGenerator.generateDeleteExposureHistoryMessage(for: epoch, ntpTimestamp: ntpTimestamp, key: ka)
../stopcovid-robertsdk-ios/Robert/RBManager.swift:226:            server.deleteExposureHistory(ebid: statusMessage.ebid, time: statusMessage.time, mac: statusMessage.mac, completion: { error in
