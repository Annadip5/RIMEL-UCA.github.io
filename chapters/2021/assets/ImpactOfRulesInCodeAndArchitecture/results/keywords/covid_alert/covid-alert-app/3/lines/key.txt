/mnt/c/Users/conig/Desktop/test/covid-alert-app/.env.example:13:HMAC_KEY=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.env.example:27:METRICS_API_KEY=
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/.git/index matches
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/.git/objects/pack/pack-2eee96e38f6668f4725249e4ef9c31892516bc60.idx matches
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/.git/objects/pack/pack-2eee96e38f6668f4725249e4ef9c31892516bc60.pack matches
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.git/packed-refs:7:0414ca529dfa9c11d672c1db2d9eb33904d47140 refs/remotes/origin/feature/clear-key-storage
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.gitignore:35:keystore.properties
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.gitignore:49:!debug.keystore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.gitignore:50:*.keystore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.vscode/i18n-ally-custom-framework.yml:11:# An Array of regex to find the keys usage. **The key should captured in the first match group**.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.vscode/i18n-ally-custom-framework.yml:14:keyMatchReg:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.vscode/i18n-ally-custom-framework.yml:15:  # The following examples show how to detect `t("your.i18n.keys")`
/mnt/c/Users/conig/Desktop/test/covid-alert-app/.vscode/settings.json:34:  "i18n-ally.keystyle": "nested"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:166:        def keystorePropertiesFile = rootProject.file("keystore.properties")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:168:        if (keystorePropertiesFile.exists()) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:169:          // Initialize a new Properties() object called keystoreProperties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:170:          def keystoreProperties = new Properties()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:172:          // Load your keystore.properties file into the keystoreProperties object.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:173:          keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:175:          storeFile file(keystoreProperties["STOPCOVID_UPLOAD_STORE_FILE"])
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:176:          storePassword keystoreProperties["STOPCOVID_UPLOAD_STORE_PASSWORD"]
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:177:          keyAlias keystoreProperties["STOPCOVID_UPLOAD_KEY_ALIAS"]
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/build.gradle:178:          keyPassword keystoreProperties["STOPCOVID_UPLOAD_KEY_PASSWORD"]
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/AndroidManifest.xml:28:            android:configChanges="keyboard|keyboardHidden|orientation|screenSize|uiMode"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ExposureSummaryExtensions.kt:10:        matchedKeyCount = matchedKeyCount,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/LogExtensions.kt:6:fun Any.log(message: String?, keyValueMap: Map<String, Any?> = emptyMap(), tag: String = this::class.java.simpleName) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/LogExtensions.kt:8:        Log.d("CovidShield $tag", "$message $keyValueMap".trim())
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:35:    val iterator = jsonObject.keys()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:37:        val key = iterator.next()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:38:        when (val value = jsonObject[key]) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:40:                map.putMap(key, convertJsonToMap(value))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:43:                map.putArray(key, convertJsonToArray(value))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:46:                map.putBoolean(key, value)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:49:                map.putInt(key, value)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:52:                map.putDouble(key, value)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:55:                map.putString(key, value)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:58:                map.putString(key, value.toString())
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:102:    val iterator = readableMap.keySetIterator()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:103:    while (iterator.hasNextKey()) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:104:        val key = iterator.nextKey()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:105:        when (readableMap.getType(key)) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:106:            ReadableType.Null -> jsonObject.put(key, JSONObject.NULL)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:107:            ReadableType.Boolean -> jsonObject.put(key, readableMap.getBoolean(key))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:108:            ReadableType.Number -> jsonObject.put(key, readableMap.getDouble(key))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:109:            ReadableType.String -> jsonObject.put(key, readableMap.getString(key))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:110:            ReadableType.Map -> jsonObject.put(key, convertMapToJson(readableMap.getMap(key)))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/ReactNativeExtensions.kt:111:            ReadableType.Array -> jsonObject.put(key, convertArrayToJson(readableMap.getArray(key)))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/TemporaryExposureKeyExtensions.kt:4:import app.covidshield.models.ExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/TemporaryExposureKeyExtensions.kt:5:import com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/TemporaryExposureKeyExtensions.kt:7:fun TemporaryExposureKey.toExposureKey(): ExposureKey {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/TemporaryExposureKeyExtensions.kt:8:    return ExposureKey(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/extensions/TemporaryExposureKeyExtensions.kt:9:        keyData = Base64.encodeToString(keyData, Base64.NO_WRAP),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/models/ExposureKey.kt:5:data class ExposureKey(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/models/ExposureKey.kt:6:    @SerializedName("keyData") val keyData: String,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/models/Summary.kt:8:    @SerializedName("matchedKeyCount") val matchedKeyCount: Int,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/CovidShieldModule.kt:40:    fun downloadDiagnosisKeysFile(url: String, promise: Promise) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/CovidShieldModule.kt:58:        val file = File(reactApplicationContext.getDir(dirName, Context.MODE_PRIVATE), "keys.zip")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:16:import app.covidshield.extensions.toExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:23:import app.covidshield.models.ExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:54:private const val SUMMARY_HIDDEN_KEY = "_summaryIdx"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:130:    fun detectExposure(configuration: ReadableMap, diagnosisKeysURLs: ReadableArray, promise: Promise) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:137:            val files = diagnosisKeysURLs.parse(String::class.java).map { File(it) }
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:141:            exposureNotificationClient.provideDiagnosisKeys(files, exposureConfiguration, token).await()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:157:                putString(SUMMARY_HIDDEN_KEY, token)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:177:                        .takeIf { it.matchedKeyCount > 0 }
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:188:                putString(SUMMARY_HIDDEN_KEY, summaryAndToken.second)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:194:    fun getTemporaryExposureKeyHistory(promise: Promise) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:200:            val exposureKeys = getTemporaryExposureKeyHistoryInternal()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:201:            promise.resolve(exposureKeys.toWritableArray())
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:206:    fun provideDiagnosisKeys(diagnosisKeysURLs: ReadableArray, promise: Promise) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:209:                val files = diagnosisKeysURLs.parse(String::class.java).map { File(it) }
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:210:                val diagnosisKeyFileProvider = DiagnosisKeyFileProvider(files)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:211:                exposureNotificationClient.provideDiagnosisKeys(diagnosisKeyFileProvider)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:220:    fun setDiagnosisKeysDataMapping(promise: Promise) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:223:                val diagnosisKeysDataMapping: DiagnosisKeysDataMapping by lazy {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:228:                    DiagnosisKeysDataMapping.DiagnosisKeysDataMappingBuilder()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:234:                val oldDiagnosisKeysDataMapping = exposureNotificationClient.diagnosisKeysDataMapping.await()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:235:                if (diagnosisKeysDataMapping != oldDiagnosisKeysDataMapping) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:236:                    exposureNotificationClient.setDiagnosisKeysDataMapping(diagnosisKeysDataMapping)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:299:    private suspend fun getTemporaryExposureKeyHistoryInternal(): List<ExposureKey> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:303:            val tekKeys = exposureNotificationClient.temporaryExposureKeyHistory.await()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:304:            return tekKeys.map { it.toExposureKey() }
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/src/main/java/app/covidshield/module/ExposureNotificationModule.kt:318:                    return getTemporaryExposureKeyHistoryInternal()
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/_BUCK:6:# - `keytool -genkey -v -keystore keystores/debug.keystore -storepass android -alias androiddebugkey -keypass android -dname "CN=Android Debug,O=Android,C=US"`
/mnt/c/Users/conig/Desktop/test/covid-alert-app/android/app/_BUCK:49:    keystore = "//android/keystores:debug",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/app.json:11:        "ECDSA_KEY": "30770201010420a6885a310b694b7bb4ba985459de1e79446dddcd1247c62ece925402b362a110a00a06082a8648ce3d030107a1440342000403eb64f714c4b4ed394331c26c31b7ce7156d00fb28982ad2679a87eaa1a3869802fbeb1d7ee28002762921929c3f7603672d535fcac3d24d57afbb4e2d97f5a",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/app.json:12:        "KEY_CLAIM_TOKEN": "thisisaverylongtoken=302",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/app.json:14:        "RETRIEVE_HMAC_KEY": "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:17:echo "HMAC_KEY=$HMAC_KEY" >> $dotenv
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:28:# Setup keystore.properties
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:30:keystorep=./android/keystore.properties
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:31:touch $keystorep
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:33:echo "STOPCOVID_UPLOAD_STORE_FILE=$STOPCOVID_UPLOAD_STORE_FILE" >> $keystorep
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:34:echo "STOPCOVID_UPLOAD_KEY_ALIAS=$STOPCOVID_UPLOAD_KEY_ALIAS" >> $keystorep
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:35:echo "STOPCOVID_UPLOAD_STORE_PASSWORD=$STOPCOVID_UPLOAD_STORE_PASSWORD" >> $keystorep
/mnt/c/Users/conig/Desktop/test/covid-alert-app/appcenter-post-clone.sh:36:echo "STOPCOVID_UPLOAD_KEY_PASSWORD=$STOPCOVID_UPLOAD_KEY_PASSWORD" >> $keystorep
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/design/aftereffects/locationping.aep matches
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/design/aftereffects/onboarding-new.aep matches
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/design/aftereffects/onboarding.aep matches
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/design/aftereffects/phone.ai matches
/mnt/c/Users/conig/Desktop/test/covid-alert-app/design/illustrator/illustrations.ai:35:                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqskmijpzYLXpigyA5rldXUMpqD0IxUG28UuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KvLf+cgvzD8yeR/LWnahoLxJc3N79XlM0YkHD0nfYH3UYq8G/wChpPzY&#xA;/wCWiz/6Rl/rirv+hpPzY/5aLP8A6Rl/rirv+hpPzY/5aLP/AKRl/rirv+hpPzY/5aLP/pGX+uKs&#xA;m/LT/nIX8x/MHnzRdF1Ga1axvrgRXAS3VGKkE7MDt0xV9S4q7FXYqwHWvNup6fe3P1vTpWskneKC&#xA;9owjKhiAK0pt0w263NmkCbG1o/SPNUN5xiQmFnPJBUFW+TbfdiJWnHnvZkcOoqVPq7MOlO+NOXHL&#xA;3oLV/M1hp8YaWUR1rQEVZqfyqKnGmGXUiLF9Q/MeCa0kjhSRZyremxVeIfopbf6emNuHPW2KZxpd&#xA;x9Z0y0uKcfWhjk4+HJAafjgdljNxB8kTizdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeD&#xA;/wDOX3/KE6N/20h/yYkxV8n4q7FXYq7FWcfkj/5Njyz/AMxi/wDEWxV94Yq7FXYq83uvMumXGra7&#xA;5a1aa5gThK627IisxE/MG3Y1rWN1cVB/aJoFy3hIFuBLILlGV1+3oxW2uPLttfT2UWtuiW8zRet6&#xA;Yljqp68o/U+mmJwk7uJwRBriZb9ZtYmFn/iaFZbhQFlLMU36UkZSik9viysRLdwjlxse836Hp+jB&#xA;hd6qJtQIqlpHVpCTuC5P2R8/oycMZLVl04hzO6TeTvMnl6zvrwao0Et6IeVhDcgtCZAasp2IDsPs&#xA;8ssnhobIwmEbJ59Le76c8b6favEixRtDGUiQEKqlQQqghSAPkMx3cQ5BEYsnYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FVG7uRbxczTchRU0FT0xDCcuEIODUGRv3zclY0B22Ptkqao5SOaA1HzvpFnN6YDz&#xA;lTxl9MfZqKilaA/fkhjJTLURCd2l5b3cEc0DhkkUOtCCaHxpkCKbYyB5PDf+cvv+UJ0b/tpD/kxJ&#xA;gZPk5iQpp17YqpQrcNOoiBMxPwgdfHCBaCQBum1jp0swDXAMSttwGzEdQfw75ZHHfNqnlrkpahbi&#xA;BkBJYuKhvHuSeu9TkZxpljnbLfyR/wDJseWf+Yxf+ItkGx94Yq7FXYqgNV8v6Hq6qNTsLe84AiNp&#xA;o1dkr14MRyX6DhEiOTCWOMuYtgHmH8jdJnnF15cujo8p/vbVlaa3kPbYsGT6CR4AZfHOeu7i5NED&#xA;vHZE+Wvyz1iytZbPWL+3vbQ7xIsR+En7X2ulfbIzyA9GoaE9SgfM/wCS9zqTFtP1QWvMjn6is5AA&#xA;pQGtadMYZuFMtCe9f5P/ACH0PRdQj1DVLs6vcQkPBE0YihVxvyZeUheh6VNPbJT1BIobNmLRRibO&#xA;71DMdzXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwr82b2az8u2ssJo312MH5enIf4ZPHDiNOHrfo&#xA;HvY/p/6Q1y1tooLuCdkpKsQlDSqadGX7YphFw5uLjjKQ710nkzzGUPpxxuOhPI9V2p0yUsvcyOCf&#xA;Rd5Cur+384tpk8yy8bdw4jYsi0IYDw2J7ZCUTVldKJDJRLGP+cvv+UJ0b/tpD/kxJkHaPk/jy+Gl&#xA;a9sVTLR7S3M0bNfRW84PFUnR6b7fbHwj6SMnDYtWQmuWzKIvLt1eM1rZ31o91F/eLHIrstP8kE5k&#xA;bnk4fGBuQaYtremSWN1xkvUu5akP6fxKpHbn0qPAZjzDmYp2OVMn/JH/AMmx5Z/5jF/4i2QbXvv5&#xA;6fnp5t8g+bbTR9HtLC4triwjvHe8jmeQSPNNGQDHNEONIh2xV5z/ANDdfmT/ANW3Rv8AkRdf9lOK&#xA;u/6G6/Mn/q26N/yIuv8AspxV3/Q3X5k/9W3Rv+RF1/2U4q7/AKG6/Mn/AKtujf8AIi6/7KcVd/0N&#xA;1+ZP/Vt0b/kRdf8AZTirv+huvzJ/6tujf8iLr/spxV3/AEN1+ZP/AFbdG/5EXX/ZTirv+huvzJ/6&#xA;tujf8iLr/spxV3/Q3X5k/wDVt0b/AJEXX/ZTirI/y6/5yX89+ZfO+j6FfWGlx2moXAhmkgiuFkCk&#xA;E/CWnda7d1OKvpbFVC+vrWxs5ry6cR28Cl5XPQKMQGE5iIs8ggNF81aHrLmOwnLyhPV9J0eNjHUD&#xA;mAwFV3G4yRgRzasOphk2HNQXzz5UbUW05dQU3aSCF0CycRISVCl+PCtRTrh8M1aDrMQlw3uv1jzl&#xA;5b0a8js9SvBBcSKGVOLuaHoTwDU6YIwJ5Jy6rHA1IppZ3dveWsV1bP6kEyh43FQCp6HfARTdCYkL&#xA;HIvGv+cj/wAwPPHlS48r2/lS/wDqUuqvdxzr6NvL6jRm3EQ/fpJxoZW6U674GRLAfMX5gfntpWm/&#xA;X7XzamoxxAm69PT7SMLwFXMZktx6ir3NAfbLDiIFuDi18JS4dxfJL/Ln5nf85Da/GJbXzDHDCUaQ&#xA;SzWlpTglebUitZGAWnUjGOMkWzy6yEDRsnyV9N/MX/nIW7bURP5lhsl02YWsjzWlmwe4KlhGnpW0&#xA;n7IqSdsjGBJpOXVwgAe9KvMf50/np5fuYba98zRPPNH6pjitLMlAWKgPytl3IXkKdjjKJBotmHPH&#xA;ILD6U/NDQI9fsNH0uS5e1jm1IM0kVDIRHaXMnCMEj4m40GTxS4bPkw1MOIAef6C8p81eXL3yvDDq&#xA;+k/Wb/QGjjlj1CXis0LSOU9OWgWvajcaGtMyMcxPY83X5MXCOKO8U60jUdKutKiWK6Ol3+rw8XRK&#xA;pDLxNVWRdwOXQEADqoO/HKjAjl0a4SobGrTXyr5l1LWvzNtbW6tRAun2l2y8WDbSNGnDZU+FCtFB&#xA;rSp3yNDgPvcvT5TPJv0tIf8AnL7/AJQnRv8AtpD/AJMSZS7J8s6WFOoW4Y0UuAT4DJ4/qDXm+kp/&#xA;eafZahGroPq8yO8VGYVcod+NftZlTgJeTgY80oHfcJE9lcw3rLaMxeMcldDxcVG4qO9MxjAg7Ob4&#xA;kSPUtiun+pz2kpNYwpjB6bPvt474iXpIUwHEJBl35I/+TY8s/wDMYv8AxFsrbmb/APOXX/kydN/7&#xA;Y0H/AFFXOKvEMVdiq1pApp1OKtq4Iriq8haMQagGgrQGm/auKtslByXdfvpWtATQb7YoWMyhanrX&#xA;fFLgaioxV2Ks4/JH/wAmx5Z/5jF/4i2KvvDFUJq+mW+qaXdadcEiG6jaJ2XZgGFKj3GEGjbDJjE4&#xA;mJ6pXovk6w0q+F7HNcSyrbraRiaUy8YlIIAJAI6DbpkpTJFNGLSRhLis8qSS1/LVofMDXTXavpQm&#xA;W7igClZhMHaTiWWisvJ68mqafCKdcn4vppxx2f69z6efmiPOPkKbWdUt9V0+5jtrxF9GYzIHHp1q&#xA;HjNCVkU9PHxGDHk4Wep0ZnLiiaLKdLsItO062sImLR20axKzdSFFKnKybNuZjhwREe54b/zlP5T8&#xA;168/lZ/L+mXWoPZm+aZrSNnMRf6sYySv2a8DT5YGbzW7svzjm8vrpsXk7UIL11dLvUBBKWdJAVbi&#xA;lAqMymjH7qZacpIpwYaCEZ8XdyX6VH+d1hpi2DeUL2dIYFt7fnay8aRoY0aRCGDMiHirLxIHfBDJ&#xA;QXNoROV3V80Fomkfnhpt/c3MnlrUblL24F1dxNaMAZgGHNQF4iqsVI48SNiOmCM6NtmbSxnEAbVy&#xA;SzzV5G/NjzFqzajP5S1KJioRV9CV2oCWqzkDkxLHemCcuI2z0+AY41dvr/z95PXzXoDacLg2l1FK&#xA;tzZ3IqeE0YIBIFDQqxG3Trhxz4Tac+LjjTCLP8r/ADfLZvpmqagkumliPSWhYxGX1hFzI5cfU+IV&#xA;P4bZLj6jZwPyuWq6MqsPINot5a3FxEoWyT0rdASQqk/FxHYt3OPibUGePRm/VyZJY6NpdhLNNZ2s&#xA;cMtwazSKPibcnc9epyu3PhjjHkHif/OX3/KE6N/20h/yYkwM3ylFI0ciyL9pTUYQaQRYpENqt8VC&#xA;IVjAdpAyipq3KvXbo5yfilq8GPVuw1FrMTlYllmmFBLIWJXepNK0av8AlVyMZkMp4xKvJCEksWO7&#xA;HqT1yLZTN/yR/wDJseWf+Yxf+ItirN/+cuv/ACZOm/8AbGg/6irnFXiGKuxVES6RcrYjUPgeA/aC&#xA;k81FaVI+eT8M8NtIzR4+HqgmjBHJPuyDc5ZHAoRXwrirbM7AKx4qDUD3OKr4YGmcLErSv1CICxoP&#xA;YVwgE8kSkBzXFChKMCpXYqdiCOxwJBtrFWcfkj/5Njyz/wAxi/8AEWxV94Yq7FXYq7FXYq7FXn/5&#xA;sfnDpv5c/or67p81/wDpX6x6fouicPq/p1ry8fWGKvPv+hwvLf8A1L15/wAjYsVd/wBDheW/+pev&#xA;P+RsWKu/6HC8t/8AUvXn/I2LFXf9DheW/wDqXrz/AJGxYq+gcVSufzPolvrMWjz3Kx381BFE37RI&#xA;5Ur226V2PQVINJCBq2s5YiXD1S8eftCPm1fK3739KMrORwoiKndySCvLbjtvVf5hjwGrXxRxcLJM&#xA;i2PB/wDnL7/lCdG/7aQ/5MSYq+T8VdirsVdirOPyR/8AJseWf+Yxf+ItirN/+cuv/Jk6b/2xoP8A&#xA;qKucVeIYq7FU40q7tktpYpAh9QopSSpWnIAnj38foy7HMAUXFzYSTYWyzaXaTkT6cJbcsTHLG5U8&#xA;K7VqGFRkSRfJsEZVz3R0N95LkuBG1rNHCTQTtxp9IFSMIMWsjIBdoLXJtBMrWmkWxmkrxNyTVffg&#xA;B1+eCVdGzGJ85FbpcVxYW1xK7ek8ijiV+0pBrv8APwwwlw2jNj468kvuZvWuJJak82LVNKmp702y&#xA;uRs22wjQAUsDJnH5I/8Ak2PLP/MYv/EWxV94Yqtm9T0n9P8AvOJ4V/mptixldGubD/Kc3nU6jbrq&#xA;5ka2kt5HufUMBCTCSicfSHNfh2ox618MumI1s6/SnNxDi5VvyVfPGp61Y3Fmba4ltNPcMJ54YhKT&#xA;LyXgjMVkMYIr8QVt9qHBiALLWZZxIqxHv/HJffXHm1PIiXC8l10Ro83FFLgc6tRKU5BO1MAEeLyT&#xA;M5vAv+Nr8vdQ1i+0+4mv7iS6hV1S1uZIxHzAX4yoAVivLYFv7MOUAHZdBOcokyNjo8X/AOcxyA3k&#xA;8kVAOo1Hj/vLlTnsN836l+X2pfltBfRS2a6hJJLHaafE5N9BQD00aHjwijUpuwNGB23y4yjwurw6&#xA;fLCYN9Te55MU/LC58jW9/I/mYcmLKIQ4UoFAJJBYFQeVOpFR0IODERe7drY5DXDfD1rmt1HX/KY/&#xA;MCLUra0VtHhLKypHxVno4SUIS32Cyn3498EiOLyRDFk8Axv1FH/mlq/lO+tbIaK8cty7CW5mCoZG&#xA;+Ej4nUbBdhxJqaVNNgJZTHo16DHkiTxXXn3vuPKXZpa/l7Sn1xdbkiMmoRxejDIzEiNN6hFrQV5b&#xA;5LiNUw8McXF1as/LOiWmr3esQ2sY1K9IM9zxXmaKFoGpXouCzVJEBd9UzwMng/8Azl9/yhOjf9tI&#xA;f8mJMVfJ+KuxV2KuxVnH5I/+TY8s/wDMYv8AxFsVZv8A85df+TJ03/tjQf8AUVc4q8QxV2KuxVVj&#xA;uJY1Kqao3VGAI+44qsd+bciAD34gAfcMVbgleCQyRmjEUPfbFV811PMKSPUeHQfhhtVHArsVZx+S&#xA;P/k2PLP/ADGL/wARbFX3hirsVdirsVdirsVSjX/KHlfzF6H6d0u21P6rz+r/AFmNZPT9Tjz48hty&#xA;4LX5YqlH/Kovyv8A+pW03/pGj/pirv8AlUX5X/8AUrab/wBI0f8ATFXf8qi/K/8A6lbTf+kaP+mK&#xA;u/5VF+V//Urab/0jR/0xVl2KuxV2KuxViX5j/lnoX5gaXa6brM91bwWk/wBZjazeNHL8GSjGSOUU&#xA;o3hirz3/AKFF/Lb/AKuWs/8AI+1/7JsVd/0KL+W3/Vy1n/kfa/8AZNirv+hRfy2/6uWs/wDI+1/7&#xA;JsVd/wBCi/lt/wBXLWf+R9r/ANk2Kpr5W/5xo8ieWvMNjrtjf6pJd6fKJoY55bdoywBHxBYEam/Z&#xA;hiqP/Mz8iPLv5ga7BrOpaheWk9vapZrHbelwKJJJIGPNGNaynFWJf9Cg+Sf+rzqX3wf9U8Vd/wBC&#xA;g+Sf+rzqX3wf9U8Vd/0KD5J/6vOpffB/1TxV3/QoPkn/AKvOpffB/wBU8Vd/0KD5J/6vOpffB/1T&#xA;xV3/AEKD5J/6vOpffB/1TxV3/QoPkn/q86l98H/VPFXf9Cg+Sf8Aq86l98H/AFTxV3/QoPkn/q86&#xA;l98H/VPFU38pf84y+U/LXmTT9etNVv5rnT5RNFFL6PBiARRuMYPfxxV7DirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQlzq2n20npTzBZKV&#xA;KgM1PnxBwiJLXLLGJolS/wAQaR/v/wD4R/8AmnDwFj48O93+INI/3/8A8I//ADTjwFfHh3u/xBpH&#xA;+/8A/hH/AOaceAr48O93+INI/wB//wDCP/zTjwFfHh3o9HR0DqQyMKhh0IyLaCgW17SVYqbgVBoa&#xA;K5H3gZLgLX48O9r/ABBpH+//APhH/wCaceAo8eHe7/EGkf7/AP8AhH/5px4Cvjw73f4g0j/f/wDw&#xA;j/8ANOPAV8eHeui1vS5ZFjScF2NFBVhv8yAMeEpGaB2tB+rL/O33nC0cRd6sv87fecV4i71Zf52+&#xA;84rxF3qy/wA7fecV4i2ssvIfG3XxOKiReV/85Wavq2l+TtIm0y9uLGV9RCPJbSvCzL6Eh4koVJFR&#xA;kHMfMH+OvO3/AFMOpf8ASZP/AM14q7/HXnb/AKmHUv8ApMn/AOa8Vd/jrzt/1MOpf9Jk/wDzXirv&#xA;8dedv+ph1L/pMn/5rxV77/ziXr2vapqHmRdU1K6v1ihtTELmaSYKWaWvHmzUrTFX0firiQBU9Biq&#xA;Al1F+f7sDgPHvkqaDl32REd7A5py4nbrtgpsGQFKbvzno1tOqF2kjKlmmjHJQQePGnWtckMZYSzx&#xA;BTj6zB6aScxwkAZD4giuRpsMgFUEEAg1B6HAydirsVdirC9c/wCOrcfMf8RGXx5OtzfWUDhanYq7&#xA;FXYqzTS/+OPD/wAYz/HKZc3ZYvoDC8uda7FXYq7FVS2/3oi/11/XiUx5siypyXYq7FXYq2n2h8xi&#xA;oeRf85ff8oTo3/bSH/JiTIOa+T8VdirsVdir6L/5w6/46Xmj/jDaf8TlxV9O4qg9amaHRr+ZSQ0d&#xA;vK6kdQVQnbEMMh9J9zyTQ/OevsplndprZSFMjICAT2JUd8lOJiXTRzSHNH6jrN9ezyzW7SJDIip6&#xA;asaClK7D3rlsJCm3xLSm6u5Fj4mNiRy5UB/aauGWQBrlkp1t5u1uBUtoJGQRj4IiikAf7IHxykkn&#xA;dh403qnky/uL/wAtWl3cms0hlDmgH2ZXXoKdhgLt9NInGCU6wN7sVdirDNaFdYnHiyj8Bl0eTrc3&#xA;1lPP8L6b4yf8EP6ZDjLlflosM81aSthd3aUneS6EY0j/AHoccwjB0jEBUCXnxPx7cfpy7HKx97rt&#xA;Ti4See/08/0dfeyrTPK0C6baLeNIbxYYxcnkD+8CDnvT+bKpT32c7Hphwi+dJdrmnwWNykcJYqyc&#xA;jyNd6ke2Sibac2MROzI9L/448P8AxjP8crlzczF9AYvpNpFd3yQSkhGBJ47HYVy2RoODigJSop9J&#xA;5W09o2CtIGIIU8hsafLK+MuUdNF5p+i1mn03SrSJV1pHjXUAy3Au1dXPrO8hPpejx4levtmVxcye&#xA;Tp/CsxiB6+vO/Pyp6Z/hjTfGT/gh/TMXjLufy0Ugnt0t9VMKElElAUnrSoywHZxJRqdJ1lbc7FXY&#xA;q7FW0+0PmMVDyL/nL7/lCdG/7aQ/5MSZBzXyfirsVdirsVfRf/OHX/HS80f8YbT/AInLir6dxVTu&#xA;reK5tpbaUcop0aORakVVxQio9jigixTErv8ALPShG0WmTSWNtM0ZurQs8kUqRuHKmriQcqUPxZZ4&#xA;nUuNLSR6bIbSfLmt6ayafq0qXNnL8FtqcCJ6sbjcLMsiMKP0U777dxhkQdw1xwEbHl3quvaLr1vo&#xA;8v6JEN3dqxKtJEizemB+yqj02evsu3auMSL3WeE16d2F+Q/LXmm81uPUiklvbVLT3U6kBx0KqrUL&#xA;16eGWZTGqaMGGUpW9c0XSotK02GwikeVIuZ9SSnIl3Ln7IA6ttmOXZY4CEaCNwM3Yq7FWG6x/wAd&#xA;mb/XX9Qy6PJ12b6yzLKXYuxV2KsY81/72Q/8Y/8AjY5bj5ODqvqCc6X/AMceH/jGf45CXNycX0Bj&#xA;vl3/AI6sXyb/AIicsnycTT/WzDKXYLfTjDmTiPUI4l6b0HauKK6rsUsN1D/juSf8Zh+sZcOTrsn1&#xA;/FNsg2OxV2KuxVtPtD5jFQ8i/wCcvv8AlCdG/wC2kP8AkxJkHNfJ+KuxV2KuxV9F/wDOHX/HS80f&#xA;8YbT/icuKvp3FXYq7FXEbYqxTyt5g17UtY1C3uLSM6ZbOUivVPWRT8QWg4sldgNnX9qvXLJxADj4&#xA;skpSO2zKiH/ZIHzFf4jK3IbFabmp9tsVdirsVdirDdY/47M3+uv6hl0eTrs31lmWUuxUnu7dG4s4&#xA;r9J/VhpgZgKisrAMpqD0IwMwbYz5r/3sh/4x/wDGxy3HycHVfUE50v8A448P/GM/xyEubk4voDHf&#xA;Lv8Ax1Yvk3/ETlk+Th6f62YBgehB+WUuxdirsVYbqH/Hck/4zD9Yy4cnXZPr+KbZBsdirsVdiraf&#xA;aHzGKh5F/wA5ff8AKE6N/wBtIf8AJiTIOa+UCCCQeo2OKuArsOuKtYq7FX0X/wA4df8AHS80f8Yb&#xA;T/icuKvZvzd/Mv8A5V55btta/Rv6U+sXiWX1f1vq/HnFLLz5+nNWno0pTviryL/ocn/v0P8AuY/9&#xA;muKu/wChyf8Av0P+5j/2a4q7/ocn/v0P+5j/ANmuKuH/ADmQAKDyfQeA1H/s1xV3/Q5P/fof9zH/&#xA;ALNcVd/0OT/36H/cx/7NcVZV+WX/ADkj/jfzha+Xf8O/o/6ykr/Wvrnr8fSjaSnD0Iq140+1ir2r&#xA;FXYqw7V99al/11/UMujyddl+sp3qWtLb27yKvwgUBJoan9WY2WfBG3Jll7niv5hS+Y9YvNPvtFu2&#xA;ntppRBHbQ8qxkBj6i0I5V4N8Xy7ZXh1IJImOGg4pHE9Y8oXupRaDarqXx34jAnqQTzG3xEd6Url0&#xA;JxmLBb8cjEbqOvzPNPE7UrxI2+df45fBpzSssg0v/jjw/wDGM/xyuXNzMX0BhiyapHV9LgFxeD7E&#xA;J2DKTRt6j9mvfLJ8nXx4v4ebeled5hdyWl/D9TuI24TJ3UjxB6jKie9MNQQaOzJpfNOmW9sJrieP&#xA;jUgMrA1PgAKnFy/zMQN2OD8xZ729Nnpdo908lQgBCtt1IADbU8Ti435yUjURbcRuzcwm8Qpd1jE6&#xA;mleYABO22/XLRyYi735szhsYkSkgDt3OVW7COMAboaawlDt6a1TtvvhtqliN7JZqF/a2Cv8AWXCy&#xA;IvL0QR6hUmlQpO+SAtqka5rbDU7S/Vmt2J4ceYIII5CoxIpAkCmKWs5UScfh6/RkbbRA83jH/OYd&#xA;wsfkzQ46fG+oll8KLA4P/Esi5T5LWVg1SSR3xVXWVGNK0PQCmKo6PSrp0JoFYNx4Nsela5YMZajl&#xA;AQkgEfIPsVND8+lMg2Avoj/nDiVG1PzOoIr6Noad/ty4Esw/5y6/8ltpv/bZg/6hbnFXyNiqnJOo&#xA;oEG9PiJ3Fa9sVXJLG3EV4mm9elfuxVFpYXUqs6x8aEUQ1B+LpSvbJiBLWcgChIvpj49jUg7jttkG&#xA;YK2qkAg18cUvU/8AnGb/AMm/pX/GG7/6h3xV9q4q7FWGa3UavPQ0PIUP+xGXR5OtzfWWLLqeso0f&#xA;rXLXkANJIHCKSvYhqV5DMWYExRccZJDralpNzoNhpcbeo0M19ezRSsTR1U+qEK8a0oAOnTKp6biG&#xA;x3DkYskRzVLHzlHp2lLH65vr9+jspCItdgx+Es3Hw7/dksOLgJPewyakAUNyjtI1qfVLJXnoXgPp&#xA;c+7UANT775mQa4TMhu9B0v8A448P/GM/xyEubtMX0B5x5j1iTSNHnvI0LsOEYAYoQXcAMGFeh398&#xA;u4bdYZcItivmD809DlmtNQ0+AfXbjib5ZozMrKkaIOfqdwylapvQdTk44TuCuTPEmwN2S6B5tbW9&#xA;Nl1Cy0yyuURWjNo0bRtHKACtG5NzXxFB8/GqWLhKxz/0QwC1/Mm+0TzXLeXFisqMrwXMCt6BMbgf&#xA;3RQfBSgIP8d8vGISjs1wz8Mrp6loeo/pG2sbziymVY6h25tVaKSWoOtK5TVBujKyCkOl/mrr0TRx&#xA;XEqTRii8nQctu5IpXISxSCI6vIObJdW89T3VhbGwcwXKvyn9OjKQBtv4E9sGKjzb5ariArYsdvtX&#xA;kup3nu3aRzG0au253YsNuwHLtl+0Q0zyXuUJY+aJdLuzNbcS/EKVcFlPEjtX2p9OVTnfJpGoMTsm&#xA;1t+auqm5hSb0DCWpIoTj8LGlK8u3bK+E9zbHWzvdhf8AzmSXbR/LEY6G4umPh8KRj/jbA7d8t+mv&#xA;RvhbsexxVkFlaae8EIX02lVCCwpyqep8cyYiJDiTlIEqlzqNtbNJyJdweXFe3wgUJwyyAIjjJSK6&#xA;uFup2mZSC3YVoKCn8MxpGzblRjQp75/zh1Kq+atfhCkepYxvU/5EwH/G+Bkz3/nLr/yW2m/9tmD/&#xA;AKhbnFXyNiqaXHlmQxNJAB8IJ48tzTrxB32ywYyRYaZZ4xNFrTbOx9GNZ1Qz8y1G2bwA3yeMRrdj&#xA;lMr25I2W4htmWNiWYqqqi9fhJ65MyAaowMkun0y7vrlnjjrzNeCnYUFPDKSDI7OTYhHcqFzpc9if&#xA;3opXah8euRlEjmyjISFh6X/zjN/5N/Sv+MN3/wBQ75Fk+1cVdirDdZYLrEzHcBlNPkBl0eTrs31l&#xA;H3eu2VxNbyK91CIG5MkdAHFQaMA4B3XvXavjUARIbZ5okg7imJLpOpqB/wA7jrQIkicnhbkcYyhI&#xA;+It9riwPb4twSK5HgLP81Hzbs9P163v7advOmrT2sNwk8tlJb2hWVFYExM/94FZQw2b9r2WjwFfz&#xA;UfNPtb1KG/mjeJWVUWh50BrWvYnJxjTj5sgkdmR6X/xx4f8AjGf45XLm5mL6AxbSryK0vUnlUsqg&#xA;j4aVFRTatMtkLDg4piMrKtq95HfJdi31G+sXuFjEbw0PpFHRmKgvx+IR8endt99o8Jqm8ZoiRO/u&#xA;Y+NI1QIF/wAY6ztEY68IPtHh8Va16q1Knl8X2qDI8BZ/mo+aZeWjqWlak11qPmXUdatjAYUsrmC1&#xA;jRX5Iwl5RBGLfC3X+bwAx4Cv5qPmiZp47jVDNEpRJJQwU9dyOtPHLANnFlK52+dtJ1uYlbeWOSeX&#xA;YRekvNzTsRXfMuUXBBeh+X/PNnC8T3mk2lzbkUkkjjMM33qeNfEccx5YA5EMkRziGZWer6RLMkt/&#xA;oNu2lzVKXtqxm4ACtXQgMV8TtTwygxbIZoE+qOyU+ZLTRNT8tSatZxx6WscVxdw2ywktJHbMyMsk&#xA;1eKuaVCjxHWoyzHQlSZxhKNjb9nm8a/TV5c39uIyYU9VQqqdzVh9o98zOHZwrel/85XWiz6d5dLg&#xA;GMSXSnehqyxEU/4E5g4gC7vNIgAh80HTb+yVrmD44xsaqTUe/bJcEo7hrOSE/SV8fmUxwhWsonmB&#xA;/vCzqKeHEHrhGfbkwOjs7SNJhb6/pNysEItBFeTyLGS7ExryP2q1FfltlgzRNCt2iWmnGzfpCGvd&#xA;Fge5E6zO0TlgyOvBwyHiR8qjIyxAm7bcWc8NU9w/5xYs1j81avJGgVEsBGxFOrTIR8/snK8oApvw&#xA;yJu2Uf8AOXX/AJLbTf8Atswf9QtzlLkPkbFU0i164HH1ACU5GN1AqCyla71yyOQhqnhjJkEfnpk0&#xA;9kitIJrhCKNOg5cB16faP05LxWr8qO8om1/MK0ktDHNp8MV6TRZgimKniR1B/DD4orkw/Km+eyW6&#xA;hqqRiWSVw0sikcF2O/gFpTIidN8sQIpI9R1SS+Rea8QhFDWpO1NzkZz4mWPGICg9E/5xm/8AJv6V&#xA;/wAYbv8A6h3yDY+1cVdirC9c/wCOrcfMf8RGXx5OtzfWUDhanYq7FXYqzTS/+OPD/wAYz/HKZc3Z&#xA;YvoDC8uda7FXYq7FVS2/3oi/11/XiUx5vIfyk82aX5fn1b6w4t9Qu4EXTrtozKA6Fi0NB09Wq79A&#xA;Rvl2oiSNmvT5RC+/oyX8ydH0PVdNuPOOlX7w30tvazSRxIVt7n1JPR+A7OJOQOzb/D06nIYpkHhL&#xA;bqIxkOIHeh7lbyhrk2g+XbL9KRSVvZqBgpJAYU2AG7DjUrWtKla4DHiJpxoSKWfmHo6XUipZyehH&#xA;chJzGKqtakNVPxp45CM+CTCR3Y5pvlqwguIV3nuXZVRjsA9diFHv4nGWoJRHmzj/AJylC/oLQmP2&#xA;xdSgfIxiv6hgw83d5+TwO31EvcxW3Ktu1uyyQFRXmop8DEgfF/lf7WWJ715OrnioE9bSHX101Las&#xA;S0e4UPGrACQFj3p7b5RlEac3TymTv0Su50uWOzS5LK0UhoD0+RFev6/bKDChbkwzAyIWw65cx2gi&#xA;VOcq1/etv1NfvyQykBBwgl79/wA4gSXlx5g8yTzSFkW1gHH9kF5GOw/2OQMiebZGIHJmX/OXX/kt&#xA;tN/7bMH/AFC3ORZPkbFXYq3UjpiqZajbWMFpBxYfXHAZkRgwVW3Aam1fDv45ZKq82jGZcRvkluVt&#xA;7q7EeO+KvUv+cZv/ACb+lf8AGG7/AOod8VfauKuxVI9S8uyXV288cwUSUJVgdiBTtkxOg4uTT8Ru&#xA;0N/hS4/3+n3HJeIw/Knvd/hS4/3+n3HHxF/Knvd/hS4/3+n3HHxF/Knvd/hS4/3+n3HHxF/KnvT+&#xA;1tlgtEt6lgi8eXSuVkuXGNCkhfypLyPCdeFfhqDWnvTJ+I4p0p72v8KXH+/0+44fER+VPe7/AApc&#xA;f7/T7jj4i/lT3u/wpcf7/T7jj4i/lT3qlv5WkSdHknBRSCQoNTTfvgM2UdMQdy8G0v8AKrU/VSaQ&#xA;sBERJVgsY+E13FXb8MvlmJHJ1AiSzXQvy40vTAvrVnaP94FNeAZtjuevQeGVmRJ3Z+H3pzq6aXHB&#xA;HPfbw29THBU8GalF/d14sR+zUbb4eKlJpgGsatJeXr3Dj4m2ROyqOgyglhzQFqzi7hZTRhIpB9+W&#xA;RZDmyD/nLeaa28uaDcxpzpeSxEHYAvFyH/EMshLhd7OHE+WJtXvnYtyWIgcaIN9/c1wnISxGKIQy&#xA;HlVqlm6FianbK21VvdSurlYoppWkWJRHGvZVApsPHCTbERA5KMcQXc7nAyfRH/OHjH9PeY1r8JtY&#xA;CR7iRv64qzT/AJy6/wDJbab/ANtmD/qFucVfI2KuxV2KuxV2KuxV6n/zjN/5N/Sv+MN3/wBQ74q+&#xA;1cVdirsVdirsVdirsVdirsVdirsVdirsVYmmkagFZXt2KsN6EV/XlpkHUxwTHRKNc/xMiGHTNJml&#xA;egCyMAI196VqTgMu5jLFkPQsLuPJ/n+9l9S4sriV+xd1AHsKsAPoysksfy2TuUf+Veec/wDq2Sf8&#xA;HH/zVgX8tk7laz/L3zeLuAyabIsYkUu3KPYchU/axSNNO+Sc/wDOSnkzzP5r8q6XZ+X7B7+5gvvW&#xA;ljRkUrH6Lry+NlHVhhdy+bJ/yF/NyI/F5bumWtaIYn/4i5xVcv5Hfmxx28sXYHhRB/xtiquv5Bfm&#xA;8QGHlqcA+MluD9xkxVv/AJUD+b//AFLc3/I23/6qYq9q/wCcZvy484+U9U1258xaZJp4uYII7Yu8&#xA;TB6O7P8A3bP02xV6p+Y35c6J5+0SDR9Ynube2t7lbxHs2jSQyJG8YBMiSjjSU9sVec/9Ci/lt/1c&#xA;tZ/5H2v/AGTYq7/oUX8tv+rlrP8AyPtf+ybFXf8AQov5bf8AVy1n/kfa/wDZNirv+hRfy2/6uWs/&#xA;8j7X/smxV3/Qov5bf9XLWf8Akfa/9k2Ku/6FF/Lb/q5az/yPtf8AsmxVkHkb/nHnyX5M8yW/mDS7&#xA;3Upry2WREjupYGiIlQo1QkEbdG2+LFXp+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/docs/notifications/readme.md:25:The mobile app will store read receipts in RNSecureKeyStore keyed by message.id
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/onboarding.e2e.js:20:  howItWorks: {key: 'howItWorks', step: 3, screens: 4},
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/onboarding.e2e.js:67:    await expect(element(by.id(`${howItWorks.key}CTA`))).toBeVisible();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/onboarding.e2e.js:68:    await element(by.id(`${howItWorks.key}CTA`)).tap();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/onboarding.e2e.js:72:      await device.takeScreenshot(`${howItWorks.key}-step-${j}-top`);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/onboarding.e2e.js:73:      await element(by.id(`step-${j}${howItWorks.key}ScrollView`)).scrollTo('bottom');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/onboarding.e2e.js:74:      await device.takeScreenshot(`${howItWorks.key}-step-${j}-bottom`);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/onboarding.e2e.js:75:      await element(by.id(`${howItWorks.key}NextButton`)).tap();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/e2e/oneTimeCode.e2e.js:9:    await element(by.text('Enter your one-time key')).tap();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/Android.Fastfile:1:lane :ensure_keystore_properties do
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/Android.Fastfile:2:  file_exists = File.exist? File.expand_path "../android/keystore.properties"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/Android.Fastfile:4:  UI.user_error!("keystore.properties file is missing!") unless file_exists
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/Android.Fastfile:47:    # Need keystore properties to publish
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/Android.Fastfile:48:    ensure_keystore_properties
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/Android.Fastfile:96:    ensure_keystore_properties
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/Appfile:6:json_key_file ENV["PLAY_STORE_CREDENTIALS"]
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/README.md:18:### ensure_keystore_properties
/mnt/c/Users/conig/Desktop/test/covid-alert-app/fastlane/README.md:20:fastlane ensure_keystore_properties
/mnt/c/Users/conig/Desktop/test/covid-alert-app/Gemfile.lock:85:      ruby2_keywords
/mnt/c/Users/conig/Desktop/test/covid-alert-app/Gemfile.lock:220:    ruby2_keywords (0.0.4)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/heroku.yml:9:    ECDSA_KEY: 30770201010420a6885a310b694b7bb4ba985459de1e79446dddcd1247c62ece925402b362a110a00a06082a8648ce3d030107a1440342000403eb64f714c4b4ed394331c26c31b7ce7156d00fb28982ad2679a87eaa1a3869802fbeb1d7ee28002762921929c3f7603672d535fcac3d24d57afbb4e2d97f5a
/mnt/c/Users/conig/Desktop/test/covid-alert-app/heroku.yml:10:    KEY_CLAIM_TOKEN: thisisaverylongtoken=302
/mnt/c/Users/conig/Desktop/test/covid-alert-app/heroku.yml:12:    RETRIEVE_HMAC_KEY: aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:14:                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:15:                        <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:16:                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:19:                                <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:20:                                <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:23:                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:24:                        <viewLayoutGuide key="safeArea" id="Bcu-3y-fUS"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Base.lproj/Launch_Screen.storyboard:29:            <point key="canvasLocation" x="53" y="375"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/AppDelegate.m:39:options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/AppDelegate.m:100:  // This is needed to tint the keyboard done button.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/AppDelegate.m:105:  [self.window makeKeyAndVisible];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShield.entitlements:5:	<key>aps-environment</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShield.entitlements:7:	<key>com.apple.developer.associated-domains</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShield.entitlements:12:	<key>com.apple.developer.exposure-notification</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShield.m:29:RCT_REMAP_METHOD(downloadDiagnosisKeysFile, downloadDiagnosisKeysFileWithURL:(NSString *)url WithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShieldDebug.entitlements:5:	<key>aps-environment</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShieldDebug.entitlements:7:	<key>com.apple.developer.associated-domains</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShieldDebug.entitlements:12:	<key>com.apple.developer.exposure-notification</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShieldDebug.entitlements:14:	<key>com.apple.developer.exposure-notification-test</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/CovidShieldDebug.entitlements:16:	<key>com.apple.developer.exposure-notification-test-skip-file-verification</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ENActivityHandling.m:13:    [self setValue:activityHandler forKey:@"activityHandler"];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:137:RCT_REMAP_METHOD(getTemporaryExposureKeyHistory, getTemporaryExposureKeyHistoryWithResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:143:  [self.enManager getDiagnosisKeysWithCompletionHandler:^(NSArray<ENTemporaryExposureKey *> * _Nullable keys, NSError * _Nullable error) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:147:      NSMutableArray *serialziedKeys = [NSMutableArray new];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:148:      for (ENTemporaryExposureKey *key in keys) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:149:        [serialziedKeys addObject:@{
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:150:          @"keyData": [key.keyData base64EncodedStringWithOptions:0],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:151:          @"rollingStartIntervalNumber": @(key.rollingStartNumber),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:152:          @"rollingPeriod": @(key.rollingPeriod),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:153:          @"transmissionRiskLevel": @(key.transmissionRiskLevel)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:156:      resolve(serialziedKeys);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:211:RCT_REMAP_METHOD(detectExposure, detectExposureWithConfiguration:(NSDictionary *)configDict diagnosisKeysURLs:(NSArray*)urls withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:270:                                  diagnosisKeyURLs:arr
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:281:      @"matchedKeyCount": @(summary.matchedKeyCount),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:289:RCT_REMAP_METHOD(detectExposureV2, detectExposureWithConfigurationV2:(NSDictionary *)configDict diagnosisKeysURLs:(NSArray*)urls withResolver:(RCTPromiseResolveBlock)resolve rejecter:(RCTPromiseRejectBlock)reject) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/ExposureNotification.m:353:                                  diagnosisKeyURLs:arr
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:5:	<key>BGTaskSchedulerPermittedIdentifiers</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:9:	<key>CFBundleDevelopmentRegion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:11:	<key>CFBundleDisplayName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:13:	<key>CFBundleExecutable</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:15:	<key>CFBundleIdentifier</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:17:	<key>CFBundleInfoDictionaryVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:19:	<key>CFBundleName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:21:	<key>CFBundlePackageType</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:23:	<key>CFBundleShortVersionString</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:25:	<key>CFBundleSignature</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:27:	<key>CFBundleURLTypes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:30:			<key>CFBundleTypeRole</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:32:			<key>CFBundleURLIconFile</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:34:			<key>CFBundleURLName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:36:			<key>CFBundleURLSchemes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:40:			<key>CFBundleURLTypes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:43:					<key>CFBundleURLSchemes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:52:	<key>CFBundleVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:54:	<key>ENAPIVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:56:	<key>ENDeveloperRegion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:58:	<key>LSRequiresIPhoneOS</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:60:	<key>NSAppTransportSecurity</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:62:		<key>NSAllowsArbitraryLoads</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:64:		<key>NSAllowsLocalNetworking</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:67:	<key>NSCameraUsageDescription</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:69:	<key>NSMicrophoneUsageDescription</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:71:	<key>UIAppFonts</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:76:	<key>UIBackgroundModes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:81:	<key>UILaunchStoryboardName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:83:	<key>UIRequiredDeviceCapabilities</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:89:	<key>UISupportedInterfaceOrientations</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info-debug.plist:95:	<key>UIViewControllerBasedStatusBarAppearance</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:5:	<key>NSAppTransportSecurity</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:7:		<key>NSAllowsArbitraryLoads</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:9:		<key>NSExceptionDomains</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:11:			<key>localhost:3000</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:13:				<key>NSExceptionAllowsInsecureHTTPLoads</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:15:				<key>NSIncludesSubdomains</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:20:	<key>BGTaskSchedulerPermittedIdentifiers</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:24:	<key>CFBundleDevelopmentRegion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:26:	<key>CFBundleDisplayName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:28:	<key>CFBundleExecutable</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:30:	<key>CFBundleIdentifier</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:32:	<key>CFBundleInfoDictionaryVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:34:	<key>CFBundleName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:36:	<key>CFBundlePackageType</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:38:	<key>CFBundleShortVersionString</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:40:	<key>CFBundleSignature</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:42:	<key>CFBundleVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:44:	<key>ENAPIVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:46:	<key>ENDeveloperRegion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:48:	<key>ITSAppUsesNonExemptEncryption</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:50:	<key>LSRequiresIPhoneOS</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:52:	<key>UIAppFonts</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:57:	<key>UIBackgroundModes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:62:	<key>UILaunchStoryboardName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:64:	<key>UIRequiredDeviceCapabilities</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:70:	<key>UISupportedInterfaceOrientations</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:76:	<key>UIViewControllerBasedStatusBarAppearance</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:79:	<!-- <key>NSCameraUsageDescription</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:81:	<key>NSMicrophoneUsageDescription</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:83:	<key>CFBundleURLTypes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/Info.plist:86:			<key>CFBundleURLSchemes</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:15:                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:16:                        <rect key="frame" x="0.0" y="0.0" width="375" height="667"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:17:                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:20:                                <rect key="frame" x="0.0" y="647" width="375" height="0.0"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:21:                                <fontDescription key="fontDescription" type="system" pointSize="17"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:22:                                <color key="textColor" red="0.0" green="0.0" blue="0.0" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:23:                                <nil key="highlightedColor"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:26:                                <rect key="frame" x="0.0" y="202" width="375" height="43"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:27:                                <fontDescription key="fontDescription" type="boldSystem" pointSize="36"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:28:                                <color key="textColor" red="0.0" green="0.0" blue="0.0" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:29:                                <nil key="highlightedColor"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:32:                                <rect key="frame" x="0.0" y="626" width="375" height="21"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:33:                                <fontDescription key="fontDescription" type="system" pointSize="17"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:34:                                <color key="textColor" cocoaTouchSystemColor="darkTextColor"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:35:                                <nil key="highlightedColor"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:38:                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:50:                        <viewLayoutGuide key="safeArea" id="Bcu-3y-fUS"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield/LaunchScreen.storyboard:55:            <point key="canvasLocation" x="52.173913043478265" y="375"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShield.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist:5:	<key>IDEDidComputeMac32BitWarning</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:5:	<key>CFBundleDevelopmentRegion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:7:	<key>CFBundleExecutable</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:9:	<key>CFBundleIdentifier</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:11:	<key>CFBundleInfoDictionaryVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:13:	<key>CFBundleName</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:15:	<key>CFBundlePackageType</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:17:	<key>CFBundleShortVersionString</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:19:	<key>CFBundleSignature</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/CovidShieldTests/Info.plist:21:	<key>CFBundleVersion</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:14:                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:15:                        <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:16:                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:19:                                <rect key="frame" x="0.0" y="0.0" width="414" height="896"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:20:                                <autoresizingMask key="autoresizingMask" flexibleMinX="YES" widthSizable="YES" flexibleMaxX="YES" flexibleMinY="YES" heightSizable="YES" flexibleMaxY="YES"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:23:                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:24:                        <viewLayoutGuide key="safeArea" id="Bcu-3y-fUS"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/fr.lproj/Launch_Screen.storyboard:29:            <point key="canvasLocation" x="53" y="375"/>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Podfile.lock:302:  - RNSecureKeyStore (1.0.0):
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Podfile.lock:387:  - RNSecureKeyStore (from `../node_modules/react-native-secure-key-store/ios`)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Podfile.lock:505:  RNSecureKeyStore:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Podfile.lock:506:    :path: "../node_modules/react-native-secure-key-store/ios"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/ios/Podfile.lock:587:  RNSecureKeyStore: f1ad870e53806453039f650720d2845c678d89c8
/mnt/c/Users/conig/Desktop/test/covid-alert-app/package.json:68:    "react-native-secure-key-store": "^2.0.7",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/patches/@react-native-community+async-storage+1.9.0.patch:30:+  success = [fileURL setResourceValue:[NSNumber numberWithBool: YES] forKey: NSURLIsExcludedFromBackupKey error: &error];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/patches/@react-native-community+async-storage+1.9.0.patch:49:     _manifest[key] = value;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/patches/@react-native-community+async-storage+1.9.0.patch:62:+  success = [fileURL setResourceValue:[NSNumber numberWithBool: YES] forKey: NSURLIsExcludedFromBackupKey error: &error];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/patches/@react-native-community+async-storage+1.9.0.patch:77:   [RCTGetCache() setObject:value forKey:key cost:value.length];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/patches/@react-native-community+async-storage+1.9.0.patch:79:     errorOut = RCTMakeError(@"Failed to write value.", error, @{@"key": key});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:123:Please add the following keys to the `info.plist` file. These keys should not be commited to the repo, and used only for local development.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:126:	<key>NSAppTransportSecurity</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:128:		<key>NSAllowsLocalNetworking</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:130:		<key>NSAllowsArbitraryLoads</key>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:171:### [Android] Problem with debug.keystore during run Android version
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:181:   > com.android.ide.common.signing.KeytoolException: Failed to read key AndroidDebugKey from store "/Users/YOUR_USER/.android/debug.keystore": keystore password was incorrect
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:184:Generate a new `debug.keystore`:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:188:keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:191:Copy your debug.keystore to `~/.android/debug.keystore`:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:195:cp debug.keystore ~/.android/debug.keystore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:360:### [Android] Problème avec debug.keystore pendant l’exécution de la version Android
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:370:   > com.android.ide.common.signing.KeytoolException: Failed to read key AndroidDebugKey from store "/Users/YOUR_USER/.android/debug.keystore": keystore password was incorrect
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:373:Créer un nouveau `debug.keystore` :
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:377:keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:380:Copiez votre debug.keystore sur `~/.android/debug.keystore` :
/mnt/c/Users/conig/Desktop/test/covid-alert-app/README.md:384:cp debug.keystore ~/.android/debug.keystore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/App.tsx:17:import {SUBMIT_URL, RETRIEVE_URL, HMAC_KEY} from 'env';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/App.tsx:47:  const backendService = useMemo(() => new BackendService(RETRIEVE_URL, SUBMIT_URL, HMAC_KEY, storageService?.region), [
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/App.tsx:85:            <DevPersistedNavigationContainer persistKey="navigationState">
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-app/src/assets/how-it-works-positive.png matches
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/CovidShield.ts:6:  downloadDiagnosisKeysFile(url: string): Promise<string>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/CovidShield.ts:11:  downloadDiagnosisKeysFile(url: string): Promise<string>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/CovidShield.ts:15:export const downloadDiagnosisKeysFile = CovidShieldBridgeBare.downloadDiagnosisKeysFile;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:10:    detectExposure: async (configuration: ExposureConfiguration, diagnosisKeysURLs: string[]) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:12:      if (diagnosisKeysURLs.length === 0) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:15:      for (const diagnosisKeysURL of diagnosisKeysURLs) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:17:          diagnosisKeysURL,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:40:    getExposureWindowsAndroid: async (diagnosisKeysURLs: string[]) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:42:        await exposureNotificationAPI.provideDiagnosisKeys(diagnosisKeysURLs);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:44:        log.error({category: 'exposure-check', message: 'exposureNotificationAPI.provideDiagnosisKeys failed', error});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:64:    setDiagnosisKeysDataMapping: async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:66:        await exposureNotificationAPI.setDiagnosisKeysDataMapping();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:70:          message: 'exposureNotificationAPI.setDiagnosisKeysDataMapping failed',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.android.ts:75:      log.debug({category: 'exposure-check', message: 'setDiagnosisKeysDataMapping successful'});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:18:    detectExposure: async (configuration: ExposureConfiguration, diagnosisKeysURLs: string[]) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:20:      if (diagnosisKeysURLs.length === 0) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:24:      for (const keysZipUrl of diagnosisKeysURLs) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:25:        const components = keysZipUrl.split('/');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:27:        components.push('keys-export');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:29:        const unzippedLocation = await unzip(keysZipUrl, targetDir);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:49:    getExposureWindowsIos: async (configuration: ExposureConfiguration, diagnosisKeysURLs: string[]) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:50:      if (diagnosisKeysURLs.length === 0) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:54:      const getBinAndSigUrls = async (keysZipUrl: string) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:55:        const components = keysZipUrl.split('/');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:57:        components.push('keys-export');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:59:        const unzippedLocation = await unzip(keysZipUrl, targetDir);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:64:      await asyncForEach(diagnosisKeysURLs, async (keyZipUrl: string) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/ExposureNotificationAdapter.ios.ts:65:        const binAndSigUrls = await getBinAndSigUrls(keyZipUrl);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/index.ts:14:  TemporaryExposureKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:49:export interface TemporaryExposureKey {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:50:  keyData: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:60:  matchedKeyCount: number;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:92:  getTemporaryExposureKeyHistory(): Promise<TemporaryExposureKey[]>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:93:  detectExposure(configuration: ExposureConfiguration, diagnosisKeysURLs: string[]): Promise<ExposureSummary[]>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:94:  getExposureWindowsIos(configuration: ExposureConfiguration, diagnosisKeysURLs: string[]): Promise<ExposureWindow[]>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:96:  provideDiagnosisKeys(diagnosisKeysURLs: string[]): Promise<undefined>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:98:  getExposureWindowsAndroid(diagnosisKeysURLs: string[]): Promise<ExposureWindow[]>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:99:  setDiagnosisKeysDataMapping(): Promise<void>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:103:  detectExposure(configuration: ExposureConfiguration, diagnosisKeysURLs: string[]): Promise<ExposureSummary>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:104:  detectExposureV2(configuration: ExposureConfiguration, diagnosisKeysURLs: string[]): Promise<ExposureWindow[]>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:106:  provideDiagnosisKeys(diagnosisKeysURLs: string[]): Promise<undefined> /* used only by Android */;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/types.ts:108:  setDiagnosisKeysDataMapping(): Promise<void>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/utils.spec.ts:17:  matchedKeyCount: 2,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/utils.spec.ts:25:  matchedKeyCount: 2,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/utils.spec.ts:32:  matchedKeyCount: 0,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/utils.spec.ts:41:    it('returns undefined if summary does not contain a matched key', () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/bridge/ExposureNotification/utils.ts:11:    summary.matchedKeyCount > 0 ? addDays(today, -summary.daysSinceLastExposure).getTime() : 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/BulletPoint.tsx:7:  key: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/BulletPointOrdered.tsx:7:  key: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/Button.tsx:23:  variant: keyof Theme['buttonVariants'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/Button.tsx:24:  color?: keyof Theme['colors'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ButtonMultiline.tsx:24:  variant: keyof Theme['buttonVariants'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ButtonMultiline.tsx:25:  color?: keyof Theme['colors'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ButtonSelect.tsx:12:  variant: keyof Theme['buttonVariants'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ButtonSelect.tsx:13:  color?: keyof Theme['colors'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ButtonSelect.tsx:35:  const borderColorName = (themedStyles.color as keyof Theme['colors']) || 'bodyText';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ButtonSingleLine.tsx:23:  variant: keyof Theme['buttonVariants'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ButtonSingleLine.tsx:24:  color?: keyof Theme['colors'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/CodeInput.tsx:41:            returnKeyType="done"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/Icon.tsx:72:export type IconName = keyof typeof ICONS;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/InfoBlock.tsx:15:  color: keyof Theme['colors'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/InfoBlock.tsx:16:  backgroundColor: keyof Theme['colors'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/InfoButton.tsx:24:  variant: keyof Theme['buttonVariants'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/InfoButton.tsx:25:  color?: keyof Theme['colors'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/ProgressCircles.tsx:16:        <Box key={`step${i}`} marginHorizontal="xs">
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/Text.tsx:9:  Omit<React.ComponentProps<typeof RNText> & {children?: React.ReactNode}, keyof RestyleTextProps<Theme>> & {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/components/TextMultiline.tsx:15:        <Text key={t} {...props}>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/env/index.ts:20:export const HMAC_KEY = Config.HMAC_KEY;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/env/index.ts:44:export const QR_CODE_PUBLIC_KEY = Config.QR_CODE_PUBLIC_KEY || '';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/env/index.ts:48:export const METRICS_API_KEY = Config.METRICS_API_KEY;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/index.ts:7:import RNSecureKeyStore from 'react-native-secure-key-store';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/index.ts:9:import {HMAC_KEY, RETRIEVE_URL, SUBMIT_URL} from 'env';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/index.ts:26:    const backendService = new BackendService(RETRIEVE_URL, SUBMIT_URL, HMAC_KEY, storageService?.region);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/index.ts:32:      RNSecureKeyStore,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/index.ts:40:    const backendService = new BackendService(RETRIEVE_URL, SUBMIT_URL, HMAC_KEY, storageService?.region);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/index.ts:46:      RNSecureKeyStore,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:78:      "Body1": "You entered your one-time key but you have not shared any exposures yet. People who were near you have not been notified yet.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:137:    "EnterCodeCardBody": "To let people know they’ve been exposed, you need a one-time key. We’ll also ask for details to help narrow down when you were likely most contagious.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:138:    "EnterCodeCardAction": "Enter your one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:147:      "Body": "You entered your one-time key but you have not shared any exposures yet.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:174:    "GetCode": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:301:        "1a": "1. Enter the one-time key ",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:311:      "NoCode": "Need a one-time key?"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:347:      "Title": "Enter your one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:348:      "Body": "Enter the key you got when you were diagnosed. To prevent false notifications, you can only get a key if you test positive for COVID-19.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:349:      "Action": "Submit key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:350:      "InputLabel": "COVID Alert key"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:353:      "Title": "You've already entered the key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:389:        "Body": "In some provinces and territories, people cannot yet report a COVID-19 diagnosis through this app.\n\nTo find out if you can get a one-time key, you need to choose your area.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:394:        "Body": "People in your area cannot yet get a one-time key.\n\nYou will not be able to let people know they were exposed. But you can still self-isolate for 14 days, and:",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:414:    "OTKNotSharedBody": "You entered your one-time key but you have not shared any exposures yet. People who were near you have not been notified yet.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:540:      "Body": "You need to enter your key before you can submit."
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:543:      "Title": "Incorrect key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:544:      "Body": "Your one-time key could not be recognized. Please try again."
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:548:      "Body": "You’ve tried to enter a one-time key too many times."
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/en.json:556:      "Body": "Your key was not sent. Make sure your phone is connected to the Internet, through either data or WiFi."
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/index.js:1:export default JSON.parse("{\"en\":{\"Home\":{\"AppName\":\"COVID Alert\",\"UserStopped\":{\"Title\":\"You turned off the app\",\"CTA\":\"Turn back on\"},\"NoExposureDetected\":{\"AllSetTitle\":\"You’re all set\",\"RegionCovered\":{\"Title\":\"No exposure detected\",\"Body\":\"You have not been near anyone who reported a COVID-19 diagnosis through this app.\",\"GuidanceUrl\":\"https://www.canada.ca/en/public-health/services/publications/diseases-conditions/covid-19-how-to-isolate-at-home.html\",\"AllSetBody\":\"Your phone is now running Bluetooth to collect codes from nearby phones.\"},\"NoRegion\":{\"Title\":\"No exposure detected\",\"Body\":\"You have not been near anyone who reported a COVID-19 diagnosis through this app.\\n\\nHowever, in some provinces and territories, people cannot yet report COVID-19 diagnoses through this app.\",\"AllSetBody\":\"We’ll let you know as soon as people outside Ontario can report a diagnosis through COVID Alert.\\n\\nIt’s still helpful to keep COVID Alert on.\\n\\nThat way, when people are able to report a diagnosis, you’ll find out if you were near them.\"},\"RegionNotCovered\":{\"Title\":\"No reporting yet in your area\",\"Body\":\"People in your province or territory are not yet able to report a COVID-19 diagnosis through this app.\\n\\nIt’s still helpful to turn COVID Alert on. That way, when people are able to report a diagnosis, you’ll be notified if you were near them.\",\"GuidanceUrl\":\"https://www.canada.ca/en/public-health/services/publications/diseases-conditions/covid-19-how-to-isolate-at-home.html\",\"AllSetBody\":\"We’ll let you know as soon as people in your area can report a diagnosis through COVID Alert.\\n\\nIt’s still helpful to keep COVID Alert on.\\n\\nThat way, when people are able to report a diagnosis, you’ll find out if you were near them.\"}},\"ExposureDetected\":{\"Title\":\"You’ve been exposed\",\"Body1\":\"You’ve been near at least one person who reported a COVID-19 diagnosis through the app. You were near them for at least 15 minutes.\",\"Title2\":\"What next?\",\"Body2\":\"You’re at risk of being infected.\",\"Notification\":{\"Received\":\"Notification received\"},\"NegativeTest\":{\"CTA\":\"Negative test?\"},\"Dismiss\":{\"Title\":\"Negative test result?\",\"Body\":\"Dismiss this alert to receive any new exposure notifications. Dismissing this alert will not delete the exposure logs on your phone.\",\"Body2\":\"You can also dismiss the alert if you’re following your area’s guidance.\",\"CTA\":\"Dismiss alert\",\"Confirm\":{\"Body\":\"Are you sure you want to dismiss this alert?\",\"Accept\":\"Yes, dismiss\",\"Cancel\":\"Cancel\"}}},\"ChooseRegionCTA\":\"Choose province or territory\",\"How\":\"Diagnosed with COVID-19?\",\"CTA\":\"What to do next\",\"HowUrl\":\"https://www.canada.ca/\",\"ExposedHelpCTA\":\"What to do if you’re exposed\",\"DiagnosedView\":{\"Title\":\"Thanks for helping fight COVID-19\",\"Body1\":{\"One\":\"Tomorrow, you’ll get your last notification asking permission to upload any new random codes your phone sent out.\",\"Other\":\"For the next {number} days, you’ll get a daily notification asking permission to share any new exposures your phone recorded.\"},\"Body2\":\"You do not have to agree, even if you agreed the day before.\",\"Body3\":\"If you’re worried about your symptoms, get medical care as soon as you can. Take care of yourself and your family during this time.\",\"Tip\":{\"Title\":\"TIP: \"}},\"SymptomTrackerUrl\":\"https://ca.thrive.health/covid19app/action/88a5e9a7-db9e-487b-bc87-ce35035f8e5c?from=/home&navigateTo=/tracker/complete\",\"DiagnosedShareView\":{\"Title\":\"Share new exposures\",\"Body1\":\"Thanks for helping slow the spread!\",\"Body2\":\"Reminder: \",\"Body3\":\"To help keep people safe, you need to share your new exposures every day, especially if you have to leave your home.\",\"ButtonCTA\":\"Share new exposures\"},\"DiagnosedShareUploadView\":{\"Title\":\"Not quite done\",\"Body1\":\"You entered your one-time key but you have not shared any exposures yet. People who were near you have not been notified yet.\",\"ButtonCTA\":\"Finish sharing exposures\"},\"BluetoothDisabled\":\"Bluetooth is off\",\"EnableBluetoothCTA\":\"You need to turn on Bluetooth in your phone’s settings so COVID Alert can work.\",\"TurnOnBluetooth\":\"Turn on Bluetooth\",\"EnUnauthorized\":{\"Title\":\"COVID Alert is off\",\"Body1\":\"From the button below, choose Exposure Notifications, then scroll down and turn on \\\"Share Exposure Information\\\".\",\"CTA\":\"Enable COVID Alert\"},\"EnDisabled\":{\"Title\":\"COVID Alert is off\",\"Body1\":\"You did not enable COVID Alert. The app needs your permission to work.\",\"CTA\":\"Enable COVID Alert\",\"AndroidTitle2\":\"Not sure about turning on Location?\",\"AndroidBody1\":\"You need to have Location turned on for COVID Alert to work. To use Bluetooth scanning, Android phones need Location setting on for all apps.\",\"AndroidBody2a\":\"Despite that, COVID Alert has \",\"AndroidBody2b\":\"no way of knowing where you are. \",\"AndroidBody2c\":\"You can check the app’s permissions in your phone’s settings. You’ll see it does not have permission for location services.\"},\"FrameworkUnavailable\":{\"Title\":\"Something went wrong\",\"Body\":\"To use COVID Alert, you need to update your phone’s operating system.\"},\"UnknownProblem\":{\"Title\":\"Something went wrong\",\"Body\":\"It looks like your phone cannot support COVID Alert.\",\"CTA\":\"Get Help\"},\"NoConnectivity\":\"COVID Alert is offline\",\"NoConnectivityDetailed\":\"COVID Alert only checks for exposure if your phone is connected to the Internet.\",\"ExternalLinkHint\":\"Opens in a new window\",\"LastCheckedMinutes\":{\"One\":\"Last checked {number} minute ago\",\"Other\":\"Last checked {number} minutes ago\"},\"LastCheckedHours\":{\"One\":\"Last checked {number} hour ago\",\"Other\":\"Last checked {number} hours ago\"},\"LastCheckedDays\":{\"One\":\"Last checked {number} day ago\",\"Other\":\"Last checked {number} days ago\"}},\"OverlayClosed\":{\"SystemStatus\":\"COVID Alert is \",\"SystemStatusOn\":\"active\",\"SystemStatusOff\":\"off\",\"NotificationStatus\":\"Notifications are \",\"NotificationStatusOff\":\"off\",\"TapPrompt\":\"Tap for menu\"},\"OverlayOpen\":{\"Version\":\"Version\",\"BluetoothCardBody\":\"You need to turn on Bluetooth in your phone’s settings so COVID Alert can work.\",\"BluetoothCardAction\":\"Turn on Bluetooth\",\"EnterCodeCardTitle\":\"Diagnosed with COVID-19?\",\"EnterCodeCardBody\":\"To let people know they’ve been exposed, you need a one-time key. We’ll also ask for details to help narrow down when you were likely most contagious.\",\"EnterCodeCardAction\":\"Enter your one-time key\",\"EnterCodeCardTitleDiagnosed\":\"You’re helping stop COVID-19\",\"EnterCodeCardBodyDiagnosed\":\"Thank you for doing your part to slow the spread. \",\"EnterCodeCardDiagnosedCountdown\":{\"One\":\"{number} day left!\",\"Other\":\"{number} days left!\"},\"CodeNotShared\":{\"Title\":\"Help slow the spread\",\"Body\":\"You entered your one-time key but you have not shared any exposures yet.\",\"CTA\":\"Finish sharing exposures\"},\"TurnAppBackOn\":{\"Title\":\"Turn on COVID Alert\",\"Body\":\"The app is not recording exposures because you turned it off.\",\"CTA\":\"Turn back on\"},\"NotificationCardStatus\":\"Notifications are off\",\"NotificationCardStatusOff\":\"OFF\",\"NotificationCardBody\":\"You will not receive notifications if you’ve been near anyone who has reported a COVID-19 diagnosis. Finding out potential exposures right away is essential to slowing the spread of COVID-19.\",\"NotificationCardAction\":\"Turn on notifications\",\"ExposureNotificationCardStatus\":\"Exposure notifications are \",\"ExposureNotificationCardBody\":\"COVID Alert cannot notify you as soon as it learns of a possible exposure. Finding out right away is essential to slowing the spread of COVID-19.\",\"ExposureNotificationCardAction\":\"Turn on exposure notifications\",\"NoConnectivityCardAction\":\"COVID Alert is offline\",\"NoConnectivityCardBody\":\"Connect to the Internet to notify people or check for exposures.\",\"EnUnauthorizedCardAction\":\"Enable COVID Alert\",\"EnUnauthorizedCardBody\":\"Choose Exposure Notifications, then scroll down and turn on \\\"Share Exposure Information\\\".\"},\"Info\":{\"CheckSymptoms\":\"Check symptoms\",\"SymptomsUrl\":\"https://ca.thrive.health/covid19/en\",\"TellAFriend\":\"Share app\",\"LearnMore\":\"How it works\",\"Help\":\"Help\",\"HelpUrl\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html\",\"GetCode\":\"Get a one-time key\",\"ChangeLanguage\":\"Change language\",\"ToggleCovidAlert\":{\"TurnOff\":\"Turn off COVID Alert\",\"TurnOn\":\"Turn on COVID Alert\",\"Confirm\":{\"Title\":\"Turn off COVID Alert?\",\"Body\":\"Make sure you’re wearing full medical PPE (personal protective equipment) or you’re only with your household.  The app will not be able to record exposures.\",\"Cancel\":\"Keep it on\",\"Accept\":\"Turn it off\"}},\"ChangeRegion\":\"Change province or territory\",\"Privacy\":\"Privacy\",\"PrivacyUrl\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/privacy-policy.html\",\"SettingsTitle\":\"Settings\",\"InformationTitle\":\"About COVID Alert\"},\"Landing\":{\"En\":\"English\",\"Fr\":\"Français\",\"AltText\":\"Illustration of 8 people enjoying a public space. There’s a person with a walking cane, a person in a wheelchair, a person wearing a hijab, several people of colour, and a representation of gender diversity.\",\"CanadaAltText\":\"Symbol of the Government of Canada\"},\"LanguageSelect\":{\"Title\":\"Language\",\"En\":\"English (Canada)\",\"Fr\":\"Français (Canada)\",\"PtBR\":\"Portuguese (Brazil)\",\"EnShort\":\"English\",\"FrShort\":\"Français\",\"PtBRShort\":\"Portuguese (Brazil)\",\"Close\":\"Close\"},\"Tutorial\":{\"step-1Title\":\"How COVID Alert works\",\"step-1AltText\":\"A hand-drawn illustration of a mobile phone in a pocket, sending and receiving signals.\",\"step-1\":\"The app runs in the background and will not interrupt your activities.\\n\\nWhenever you’re near someone else with COVID Alert, both phones exchange random codes every 5 minutes.\\n\\nThe random codes change often and cannot be used to identify you. \",\"step-2Title\":\"What’s an exposure?\",\"step-2AltText\":\"A hand-drawn illustration of 2 mobile phones side-by-side with a timer clock connecting both phones.\",\"step-2\":\"The app estimates how near people are by the strength of Bluetooth signals.\\n\\nThe app will record an exposure if the contact:\\n• Is closer than 2 metres.\\n• Lasts at least 15 minutes.\\n• Happens during the time the person was likely most contagious.\",\"step-3Title\":\"Getting a positive test\",\"step-3AltText\":\"A hand-drawn illustration of a mobile phone uploading a numeric code to a cloud.\",\"step-3\":\"If a person with the app is diagnosed with COVID-19, they can choose to upload the random codes their phone sent.\\n\\nThey can also give details to help narrow down when they were likely most contagious. Those details tell the phone which random codes to upload.\\n\\nThe random codes go into a central server. No other information is sent to the server.\",\"step-4Title\":\"Looking for exposures\",\"step-4AltText\":\"A hand-drawn illustration of a mobile phone uploading a numeric code to a cloud.\",\"step-4\":\"Every day, whenever it has an Internet connection, your phone will get a list of the random codes from people who reported a diagnosis.\\n\\nIf it finds codes that match, the app notifies you that you’ve been exposed and explains what to do next.\",\"ActionBack\":\"Back\",\"ActionNext\":\"Next\",\"ActionEnd\":\"Done\",\"Close\":\"Close\"},\"Onboarding\":{\"Step\":\"Step\",\"Of\":\"of\",\"ActionNext\":\"Next\",\"ActionEndSkip\":\"Skip\",\"ActionEnd\":\"Done\",\"ActionBack\":\"Back\",\"Start\":{\"Title\":\"Together, let’s stop the spread of COVID-19\",\"ImageAltText\":\"A hand-drawn illustration with lots of different people in it. Dotted lines show their paths crossing and leading to a smartphone below.\",\"Body1\":\"COVID Alert helps us break the cycle of infection. The app can let people know of possible exposures before any symptoms appear. \",\"Body2\":\"That way, we can take care of ourselves and protect our communities.\"},\"WhatItsNot\":{\"Title\":\"What COVID Alert does not do\",\"ImageAltText\":\"A hand-drawn illustration with many houses and a high-rise building on a curving street. Small message bubbles appear above each home.\",\"Body1\":\"The app will not tell you in the moment if you’re currently near someone who’s been diagnosed.\",\"Body2\":\"It will not tell you about outbreaks in your community.\"},\"Anonymous\":{\"Title\":\"Your privacy is protected\",\"ImageAltText\":\"A hand-drawn illustration of shaded glasses and hat to go incognito. Above the hat, a location pin icon is crossed out.\",\"Body1\":\"COVID Alert **does not use GPS** or track your location.\",\"Body2\":\"It has **no way of knowing**:\",\"Bullet1\":\"Your location.\",\"Bullet2\":\"Your name or address.\",\"Bullet3\":\"Your phone’s contacts.\",\"Bullet4\":\"Your health information, except what you decide to share.\",\"Bullet5\":\"The health information of anyone you’re near.\"},\"HowItWorks\":{\"Title\":\"How it works\",\"ImageAltText\":\"A hand-drawn illustration of 3 mobile phones sending out random codes via bluetooth.\",\"Body1\":\"The app uses Bluetooth to exchange random codes with nearby phones.\",\"Body2\":\"Every day, it checks a list of random codes from people who tell the app they tested positive.\",\"Body3\":\"If you’ve been near one of those people within the last 14 days, you’ll get a notification.\",\"HowItWorksCTA\":\"Learn more about how it works\"},\"PartOf\":{\"Title\":\"One part of public health\",\"ImageAltText\":\"A hand-drawn illustration of different ways of fighting COVID-19, including hand sanitizer, handwashing, face mask and the COVID Alert app.\",\"Body1\":\"COVID Alert is just one part of the public health effort to stop the spread of COVID-19.\",\"Body2\":\"Follow all public health guidelines in your area.\",\"Body3\":\"COVID Alert does not replace medical advice. If you get sick, contact your doctor or other healthcare provider.\"},\"Permissions\":{\"Title\":\"The app will now ask your permission\",\"ImageAltText\":\"A hand-drawn illustration of a mobile phone displaying a dialogue box with a red X and a green check mark on the screen.\",\"Body1\":\"**Allow the app** to start logging random codes or “random IDs” when you’re near other phones. The app will access the date, duration and signal strength related to the random codes, but they never leave your phone.\",\"Body2\":\"You’ll also need to **let the app send you notifications**.\",\"PrivacyButtonCTA\":\"Learn more about privacy\"}},\"Privacy\":{\"Title\":\"Privacy policy\",\"Close\":\"Close\"},\"ThankYou\":{\"Title\":\"Thank you for helping\",\"Body\":\"Exposure notifications are on. You will receive a message if COVID Alert detects that you’ve been near someone who has reported a COVID-19 diagnosis.\",\"Dismiss\":\"Dismiss\"},\"DataUpload\":{\"Cancel\":\"Cancel\",\"Close\":\"Close\",\"Back\":\"Back\",\"InfoSmall\":\"Your random codes will not be uploaded unless you give permission in the next step.\",\"ShareToast\":\"Random codes uploaded successfully\",\"StepXofY\":\"Step {x} of {y}\",\"Today\":\"Today\",\"Yesterday\":\"Yesterday\",\"Earlier\":\"Even earlier\",\"Step0\":{\"Title\":\"Notify people they’ve been exposed\",\"List\":{\"1a\":\"1. Enter the one-time key \",\"1b\":\"you got when you were diagnosed.\",\"2a\":\"2. Give the app details \",\"2b\":\"to help narrow down when you were likely most contagious. You can choose not to give any details.\",\"3a\":\"3. Allow your phone to share \",\"3b\":\"your random codes. These codes notify people you’ve been near.\"},\"Body1\":\"Exposed people will not get any information about you \",\"Body2\":\"or the time you were near them. They will only get a notification that they were exposed recently.\",\"CTA\":\"Next\",\"NoCode\":\"Need a one-time key?\"},\"IntermediateStep\":{\"Title\":\"Finish sharing exposures\",\"List\":{\"1a\":\"1. \",\"1b\":\"Done.\",\"2a\":\"2. Give the app details \",\"2b\":\"to help narrow down when you were likely most contagious. You can choose not to give any details.\",\"3a\":\"3. Allow your phone to share \",\"3b\":\"your random codes. These codes notify people you’ve been near.\"},\"Body1\":\"Nobody will get any information about you \",\"Body2\":\"or the time you were near them. They will only get a notification that they were exposed recently.\",\"CTA\":\"Next\"},\"Step2\":{\"Title1\":\"Are you feeling sick?\",\"Body1\":\"Symptoms could include:\",\"Symptoms\":{\"1\":\"Cough or breathing problems.\",\"2\":\"Fever or chills.\",\"3\":\"Feeling really tired or weak.\",\"4\":\"Sore muscles or headache.\",\"5\":\"New loss of smell or taste.\",\"6\":\"Stomach problems.\"},\"Option1\":\"Yes, you have or had at least 1 symptom within the last 14 days.\",\"Option2\":\"No, you’ve not had any symptoms.\",\"Option3\":\"You're not sure.\",\"Option4\":\"You prefer not to say.\",\"Title2\":\"Why we’re asking\",\"Body2\":\"This information helps figure out when you were likely most contagious. It tells the app which exposures to share so only people who were near you during that time will be notified. It will never be sent or stored outside your phone.\",\"CTA\":\"Next\"},\"FormView\":{\"Title\":\"Enter your one-time key\",\"Body\":\"Enter the key you got when you were diagnosed. To prevent false notifications, you can only get a key if you test positive for COVID-19.\",\"Action\":\"Submit key\",\"InputLabel\":\"COVID Alert key\"},\"OtkDiagnosedView\":{\"Title\":\"You've already entered the key\",\"Body\":\"You do not need to enter it again.\",\"CTA\":\"Next\"},\"ConsentView\":{\"Title\":\"Now you can upload your codes\",\"Body1\":\"Your phone will ask your permission to upload your most recent random codes or “random IDs”.\",\"Body2a\":\"Nobody will get any information about you \",\"Body2b\":\"or the time you were near them.\",\"Body3\":\"You can help slow the spread of COVID-19 if you agree.\",\"Action\":\"Agree\"},\"TekUploadNoDate\":{\"Title\":\"Notify people you've been near\",\"Body\":\"You did not give a date to help narrow down when you were likely most contagious.\\n\\nShare your exposures now to notify the people you were near in the last 14 days.\",\"CTA\":\"Share exposures\"},\"SymptomOnsetDate\":{\"Title1\":\"Date your symptoms started\",\"Title2\":\"Why we’re asking\",\"Body1\":\"This date helps figure out when you were likely most contagious. It tells the app which exposures to share so only people who were near you during that time will be notified.\\n\\nThe date does not get sent or stored anywhere outside your phone.\",\"CTA\":\"Share exposures\",\"CTA2\":\"Prefer not to say\"},\"TestDate\":{\"Title1\":\"Your test date\",\"Body1\":\"Enter the date you got your COVID-19 test.\",\"Title2\":\"Why we’re asking\",\"Body2\":\"Your test date helps figure out when you were likely most contagious. It tells the app which exposures to share so only people who were near you then will be notified.\\n\\nThe date does not get sent or stored anywhere outside your phone.\",\"CTA\":\"Share exposures\",\"CTA2\":\"Prefer not to say\"},\"NoCode\":{\"NoRegion\":{\"Title\":\"You skipped choosing province or territory\",\"Body\":\"In some provinces and territories, people cannot yet report a COVID-19 diagnosis through this app.\\n\\nTo find out if you can get a one-time key, you need to choose your area.\",\"ChooseRegionCTA\":\"Choose province or territory\"},\"RegionNotCovered\":{\"Title\":\"No reporting yet in your area\",\"Body\":\"People in your area cannot yet get a one-time key.\\n\\nYou will not be able to let people know they were exposed. But you can still self-isolate for 14 days, and:\",\"Body2\":\"Keep your community safe.\",\"Body3\":\"Protect people and pets you live with.\",\"Body4\":\"Take care of yourself.\"}}},\"Notification\":{\"ExposedMessageTitle\":\"You’ve been exposed\",\"ExposedMessageBody\":\"You’ve had close contact with someone who reported a COVID-19 diagnosis through the app. Learn more about what to do next.\",\"OffMessageTitle\":\"COVID Alert is off\",\"OffMessageBody\":\"Turn on COVID Alert to get notified if you’ve been near someone who has reported a COVID-19 diagnosis.\",\"DailyUploadNotificationTitle\":\"Upload new random codes\",\"DailyUploadNotificationBody\":\"Help slow the spread of COVID-19 and upload your new random codes.\",\"ExposureChecksTitle\":\"COVID Alert\",\"ExposureChecksBody\":\"Checking for exposures\",\"ExposureChecksAndroidChannelName\":\"Checking for exposures\",\"PausedMessageTitle\":\"You turned off the app\",\"PausedMessageBody\":\"The app is not recording exposures because you turned it off.\",\"OTKNotSharedTitle\":\"Not quite done\",\"OTKNotSharedBody\":\"You entered your one-time key but you have not shared any exposures yet. People who were near you have not been notified yet.\",\"AndroidChannelName\":\"COVID Alert\",\"OutbreakMessageTitle\":\"You have been exposed to an Outbreak\",\"OutbreakMessageBody\":\"There was an outbreak at one of the locations you scanned\"},\"Partners\":{\"Label\":\"Developed in partnership with\"},\"BottomSheet\":{\"Collapse\":\"Close\",\"OnStatus\":\"COVID Alert is on, Tap for more information\",\"OffStatus\":\"COVID Alert is off, Tap for more information\"},\"RegionLanding\":{\"Title\":\"Choose your province or territory\",\"Body1\":\"Provincial and territorial governments are working to support COVID Alert across Canada.\",\"Body2\":\"In some places, people cannot yet report a COVID-19 diagnosis through this app.\",\"RegionSelectBtn\":\"Choose province or territory\"},\"RegionPicker\":{\"Title\":\"Where do you live? (optional)\",\"SettingsTitle\":\"Province or territory\",\"Close\":\"Close\",\"Body\":\"Choose your region to check if you can report a diagnosis through this app.\",\"Skip\":\"Skip\",\"GetStarted\":\"Get started\",\"Optional\":\"* Optional\",\"AB\":\"Alberta\",\"BC\":\"British Columbia\",\"MB\":\"Manitoba\",\"NB\":\"New Brunswick\",\"NL\":\"Newfoundland and Labrador\",\"NT\":\"Northwest Territories\",\"NS\":\"Nova Scotia\",\"NU\":\"Nunavut\",\"ON\":\"Ontario\",\"PE\":\"Prince Edward Island\",\"QC\":\"Quebec\",\"SK\":\"Saskatchewan\",\"YT\":\"Yukon\",\"None\":\"Prefer not to say\",\"ExposedHelpLinkNote\":{\"AB\":\"\",\"BC\":\"\",\"SK\":\"\"}},\"RegionPickerNoPT\":{\"Exposed\":{\"Title\":\"Find your area’s advice\",\"Body\":\"The steps you need to take when you’re exposed depend on the province or territory you live in.\"}},\"A11yList\":{\"Start\":\"List start\",\"End\":\"List end\",\"Bullet\":\"Bullet\"},\"QRCode\":{\"CTA\":\"Scan a place\",\"Reader\":{\"Title\":\"Point the camera at the QR code\",\"Body\":\"Subscribe to a place to receive notification if other people visit this place at a similar time as you.\",\"Back\":\"Back\",\"Learn\":\"Learn more about QR codes and COVID Alert\"},\"CameraPermissions\":{\"Title\":\"Give access to camera\",\"Body\":\"To scan a place, the app needs to use your camera.\",\"Title2\":\"Not sure about giving access?\",\"Body2\":\"You can also use your phone’s camera directly if you prefer not to let the app access your camera.\",\"CTA\":\"Next\",\"Cancel\":\"Not now\"},\"CameraPermissionDenied\":{\"Title\":\"Access denied\",\"Body\":\"You said no to COVID Alert using your phone’s camera.\\n\\nTo scan a place, you’ll need to update your phone’s settings to let COVID Alert  use the camera.\\n\\nYou can also use your phone’s camera directly or a QR scanning app.\",\"CTA\":\"Allow camera access in settings\",\"CTA2\":\"About scanning a place\"},\"Error\":{\"Title\":\"QR code not recognized\",\"Body\":\"You may not have scanned an official COVID Alert QR code.\\n\\nFind another way to subscribe to notifications. Speak to an employee to ask for help.\",\"CTA\":\"Try Again\",\"CTA2\":\"Back to Home\"},\"CheckInView\":{\"Title\":\"Scanned\",\"CTA1\":\"OK\",\"CTA2\":\"Cancel\",\"MoreInfo\":\"Learn more about QR codes and COVID alert\"},\"Exposed\":{\"Title\":\"You've been Exposed\"},\"CancelCheckIn\":{\"Title\":\"Scan cancelled\"},\"ScanAPlace\":{\"Title\":\"Scan a place\",\"Body\":\"You can get notified if contagious people have visited the same place as you. When you scan COVID Alert QR codes at the places you go, the app saves them to your phone.\\n\\nThe places you visit\",\"Body2\":\" will not be shared with anyone.\",\"CTA\":\"Next\"}},\"Errors\":{\"Action\":\"OK\",\"TekUploadNoDate\":{\"Title\":\"\",\"Body\":\"You need to choose a date before you can share exposures.\"},\"TekUploadOffline\":{\"Title\":\"Lost connection\",\"Body\":\"Your random codes were not uploaded. Make sure your phone is connected to the Internet, through either data or WiFi.\"},\"TekUploadServer\":{\"Title\":\"Try again later\",\"Body\":\"Something went wrong with the system.\"},\"TekUploadPermission\":{\"Title\":\"Random codes could not be uploaded\",\"Body\":\"You did not give permission.\"},\"OtcCodeNotEntered\":{\"Title\":\"\",\"Body\":\"You need to enter your key before you can submit.\"},\"OtcUploadInvalidOneTimeCode\":{\"Title\":\"Incorrect key\",\"Body\":\"Your one-time key could not be recognized. Please try again.\"},\"OtcUploadTemporaryBan\":{\"Title\":\"Wait for 1 hour\",\"Body\":\"You’ve tried to enter a one-time key too many times.\"},\"OtcUploadDefault\":{\"Title\":\"Try again later\",\"Body\":\"Something went wrong with the system.\"},\"OtcUploadOffline\":{\"Title\":\"Lost connection\",\"Body\":\"Your key was not sent. Make sure your phone is connected to the Internet, through either data or WiFi.\"},\"ContentNoConnect\":{\"Title\":\"Cannot connect to information for your province or territory\",\"Body\":\"Try again later for this information.\"},\"DataSharingStep2\":{\"Title\":\"\",\"Body\":\"You need to choose an answer before going to the next step.\"},\"ApiNotConnected\":{\"Title\":\"Something went wrong\",\"Body\":\"Unfortunately, it looks like COVID Alert will not work on this phone. \\n\\nIf you have more than one profile on your phone, try installing the app in the main profile.\"}}},\"fr\":{\"Home\":{\"AppName\":\"Alerte COVID\",\"UserStopped\":{\"Title\":\"Vous avez désactivé l’application\",\"CTA\":\"Réactiver\"},\"NoExposureDetected\":{\"AllSetTitle\":\"Vous voilà prêt!\",\"RegionCovered\":{\"Title\":\"Aucune exposition détectée\",\"Body\":\"Vous n’avez été près d’aucune personne ayant signalé un diagnostic de COVID-19 avec cette application.\",\"GuidanceUrl\":\"https://www.canada.ca/fr/sante-publique/services/publications/maladies-et-affections/covid-19-comment-isoler-chez-soi.html\",\"AllSetBody\":\"Votre téléphone utilise maintenant Bluetooth pour collecter les codes provenant des téléphones voisins.\"},\"NoRegion\":{\"Title\":\"Aucune exposition détectée\",\"Body\":\"Vous n’avez été près d’aucune personne ayant signalé un diagnostic de COVID-19 avec cette application.\\n\\nToutefois, dans certaines provinces et certains territoires, on ne peut pas encore signaler de diagnostics de COVID-19 avec cette application.\",\"AllSetBody\":\"Nous vous informerons dès que les personnes en dehors de l’Ontario peuvent signaler des diagnostics avec Alerte COVID.\\n\\nIl est tout de même utile de garder Alerte COVID activée.\\n\\nDe cette façon, vous pourrez être avisé dès que les personnes dont vous avez été près signalent un diagnostic.\"},\"RegionNotCovered\":{\"Title\":\"Pas encore de signalement dans votre région\",\"Body\":\"Les personnes de votre province ou territoire ne peuvent pas encore signaler de diagnostics de COVID-19 avec cette application.\\n\\nIl est tout de même utile d’activer Alerte COVID. Quand les personnes pourront signaler un diagnostic, vous serez ainsi avisé si jamais vous avez été près d’elles.\",\"GuidanceUrl\":\"https://www.canada.ca/fr/sante-publique/services/publications/maladies-et-affections/covid-19-comment-isoler-chez-soi.html\",\"AllSetBody\":\"Nous vous informerons dès que les personnes de votre région peuvent signaler un diagnostic avec Alerte COVID.\\n\\nIl est tout de même utile de garder Alerte COVID activée.\\n\\nDe cette façon, vous pourrez être avisé dès que les personnes dont vous avez été près signalent un diagnostic.\"}},\"ExposureDetected\":{\"Title\":\"Vous avez été exposé\",\"Body1\":\"Vous avez côtoyé au moins une personne qui a signalé un diagnostic de COVID-19 au moyen de l’application. Le contact a duré 15 minutes ou plus.\",\"Title2\":\"Et ensuite?\",\"Body2\":\"Vous pourriez avoir contracté le virus.\",\"Notification\":{\"Received\":\"Date de la notification\"},\"NegativeTest\":{\"CTA\":\"Résultat de test négatif?\"},\"Dismiss\":{\"Title\":\"Résultat négatif au test de dépistage?\",\"Body\":\"Vous pouvez mettre fin à l’alerte pour continuer à recevoir des notifications d’exposition. Aucune information d’exposition ne sera supprimée de votre téléphone.\",\"Body2\":\"Vous pouvez aussi mettre fin à l’alerte si vous suivez les consignes de votre région.\",\"CTA\":\"Mettre fin à l’alerte\",\"Confirm\":{\"Body\":\"Voulez-vous vraiment mettre fin à l’alerte?\",\"Accept\":\"Oui, mettre fin à l’alerte\",\"Cancel\":\"Annuler\"}}},\"ChooseRegionCTA\":\"Sélectionnez une province ou un territoire\",\"How\":\"Diagnosed with COVID-19?\",\"CTA\":\"Prochaines étapes\",\"HowUrl\":\"https://www.canada.ca/\",\"ExposedHelpCTA\":\"Que faire en cas d’exposition\",\"DiagnosedView\":{\"Title\":\"Merci d’aider à lutter contre la COVID\",\"Body1\":{\"One\":\"Demain, vous recevrez une dernière notification vous demandant l’autorisation de téléverser tout nouveau code aléatoire émis par votre téléphone.\",\"Other\":\"Au cours des {number} prochains jours, vous recevrez une notification quotidienne vous demandant l’autorisation de partager toute nouvelle exposition enregistrée par votre téléphone.\"},\"Body2\":\"Vous n’êtes pas tenu d’accepter, même si vous avez accepté le jour d’avant.\",\"Body3\":\"Si vos symptômes vous inquiètent, vous pouvez consulter un professionnel de la santé. Prenez soin de vous et de votre famille pendant ce temps.\",\"Tip\":{\"Title\":\"CONSEIL : \"}},\"SymptomTrackerUrl\":\"https://ca.thrive.health/covid19app/action/88a5e9a7-db9e-487b-bc87-ce35035f8e5c?from=/home&navigateTo=/tracker/complete\",\"DiagnosedShareView\":{\"Title\":\"Partager les nouvelles expositions\",\"Body1\":\"Merci d’aider à ralentir la propagation de la COVID-19!\",\"Body2\":\"Rappel : \",\"Body3\":\"Pour contribuer à la sécurité des autres, vous devez partager vos nouvelles expositions tous les jours, surtout si vous avez à sortir de la maison.\",\"ButtonCTA\":\"Partager les nouvelles expositions\"},\"DiagnosedShareUploadView\":{\"Title\":\"Pas tout à fait fini\",\"Body1\":\"Vous avez entré votre clé à usage unique, mais vous n’avez pas encore partagé vos expositions. Les personnes que vous avez côtoyées n’ont pas encore été notifiées.\",\"ButtonCTA\":\"Finir le partage d’expositions\"},\"BluetoothDisabled\":\"Bluetooth désactivé\",\"EnableBluetoothCTA\":\"Vous devez activer la fonction Bluetooth dans les paramètres de votre téléphone pour qu’Alerte COVID fonctionne.\",\"TurnOnBluetooth\":\"Activez Bluetooth\",\"EnUnauthorized\":{\"Title\":\"Alerte COVID est désactivée\",\"Body1\":\"Appuyez sur le bouton ci-dessous, puis sélectionnez Notifications d’exposition. Faites défiler l’écran et activez « Partager les informations sur les expositions ».\",\"CTA\":\"Activer Alerte COVID\"},\"EnDisabled\":{\"Title\":\"Alerte COVID est désactivée\",\"Body1\":\"Vous n’avez pas activé Alerte COVID. L’application a besoin de votre autorisation pour fonctionner.\",\"CTA\":\"Activer Alerte COVID\",\"AndroidTitle2\":\"Vous hésitez à activer la localisation?\",\"AndroidBody1\":\"Il faut activer la localisation pour qu’Alerte COVID fonctionne. Avec Android, la recherche Bluetooth n’est possible que si la localisation est activée pour toutes les applications.\",\"AndroidBody2a\":\"Malgré cela, Alerte COVID \",\"AndroidBody2b\":\"ne peut pas savoir où vous êtes. \",\"AndroidBody2c\":\"Vous pouvez vous en assurer en vérifiant les autorisations d’Alerte COVID dans les paramètres de votre téléphone. La localisation n’est pas autorisée.\"},\"FrameworkUnavailable\":{\"Title\":\"Une erreur s’est produite\",\"Body\":\"Pour utiliser Alerte COVID, vous devez mettre à jour le système d’exploitation de votre téléphone.\"},\"UnknownProblem\":{\"Title\":\"Une erreur s’est produite\",\"Body\":\"Il semble que votre téléphone ne puisse pas prendre en charge Alerte COVID.\",\"CTA\":\"Trouver de l’aide\"},\"NoConnectivity\":\"Alerte COVID est hors ligne\",\"NoConnectivityDetailed\":\"Alerte COVID vérifie s’il y a des expositions seulement quand votre téléphone est connecté à Internet.\",\"ExternalLinkHint\":\"Ouvre dans une nouvelle fenêtre\",\"LastCheckedMinutes\":{\"One\":\"Dernière vérification il y a {number} minute\",\"Other\":\"Dernière vérification il y a {number} minutes\"},\"LastCheckedHours\":{\"One\":\"Dernière vérification il y a {number} heure\",\"Other\":\"Dernière vérification il y a {number} heures\"},\"LastCheckedDays\":{\"One\":\"Dernière vérification il y a {number} jour\",\"Other\":\"Dernière vérification il y a {number} jours\"}},\"OverlayClosed\":{\"SystemStatus\":\"Alerte COVID est \",\"SystemStatusOn\":\"activée\",\"SystemStatusOff\":\"désactivée\",\"NotificationStatus\":\"Notifications \",\"NotificationStatusOff\":\"désactivées\",\"TapPrompt\":\"Appuyez pour voir le menu\"},\"OverlayOpen\":{\"Version\":\"Version \",\"BluetoothCardBody\":\"Vous devez l’activer dans les paramètres de votre téléphone pour qu’Alerte COVID fonctionne.\",\"BluetoothCardAction\":\"Activez Bluetooth\",\"EnterCodeCardTitle\":\"Avez-vous reçu un diagnostic de COVID-19?\",\"EnterCodeCardBody\":\"Vous devez avoir une clé à usage unique pour aviser les personnes exposées. Nous vous demanderons aussi quelques précisions pour déterminer la période où vous étiez probablement le plus contagieux.\",\"EnterCodeCardAction\":\"Entrer votre clé\",\"EnterCodeCardTitleDiagnosed\":\"Vous contribuez à freiner la COVID\",\"EnterCodeCardBodyDiagnosed\":\"Merci de faire votre part pour freiner la propagation de la COVID-19. \",\"EnterCodeCardDiagnosedCountdown\":{\"One\":\"Il vous reste {number} jour!\",\"Other\":\"Il vous reste {number} jours!\"},\"CodeNotShared\":{\"Title\":\"Aidez à ralentir la propagation de la COVID-19 \",\"Body\":\"Vous avez entré votre clé à usage unique, mais vous n’avez pas encore partagé vos expositions.\",\"CTA\":\"Finir le partage d’expositions\"},\"TurnAppBackOn\":{\"Title\":\"Réactiver Alerte COVID\",\"Body\":\"L’application ne peut pas enregistrer d’expositions puisque vous l’avez désactivée.\",\"CTA\":\"Réactiver\"},\"NotificationCardStatus\":\"Les notifications sont désactivées\",\"NotificationCardStatusOff\":\"DÉSACTIVÉES\",\"NotificationCardBody\":\"Alerte COVID ne peut pas vous aviser dès qu’il découvre une exposition potentielle. Le fait d’être notifié rapidement est essentiel pour ralentir la propagation de la COVID-19.\",\"NotificationCardAction\":\"Activer les notifications\",\"ExposureNotificationCardStatus\":\"Les notifications d’exposition à la COVID-19 sont \",\"ExposureNotificationCardBody\":\"Alerte COVID ne peut pas vous aviser de la découverte d’une exposition potentielle. Le fait d’être notifié rapidement est essentiel pour ralentir la propagation de la COVID-19.\",\"ExposureNotificationCardAction\":\"Activez les notifications d’exposition\",\"NoConnectivityCardAction\":\"Alerte COVID est hors ligne\",\"NoConnectivityCardBody\":\"Connectez-vous à Internet pour aviser les autres personnes ou pour vérifier si vous avez été exposé.\",\"EnUnauthorizedCardAction\":\"Activer Alerte COVID\",\"EnUnauthorizedCardBody\":\"Sélectionnez Notifications d’exposition. Faites défiler l’écran et activez « Partager les informations sur les expositions ».\"},\"Info\":{\"CheckSymptoms\":\"Vérifier vos symptômes\",\"SymptomsUrl\":\"https://ca.thrive.health/covid19/fr\",\"TellAFriend\":\"Partager l’application\",\"LearnMore\":\"Fonctionnement\",\"Help\":\"Aide\",\"HelpUrl\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html\",\"GetCode\":\"Obtenir une clé à usage unique\",\"ChangeLanguage\":\"Modifier la langue\",\"ToggleCovidAlert\":{\"TurnOff\":\"Désactiver Alerte COVID\",\"TurnOn\":\"Réactiver Alerte COVID\",\"Confirm\":{\"Title\":\"Désactiver Alerte COVID?\",\"Body\":\"Veillez à porter un équipement de protection individuelle (ÉPI) médical ou à ne côtoyer que les membres de votre ménage. Une fois désactivée, l’application ne pourra plus enregistrer d’expositions.\",\"Cancel\":\"Ne pas désactiver\",\"Accept\":\"Désactiver\"}},\"ChangeRegion\":\"Modifier la province ou le territoire\",\"Privacy\":\"Confidentialité\",\"PrivacyUrl\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/politique-confidentialite.html\",\"SettingsTitle\":\"Paramètres\",\"InformationTitle\":\"À propos d’Alerte COVID\"},\"Landing\":{\"En\":\"English\",\"Fr\":\"Français\",\"AltText\":\"Illustration de 8 personnes profitant de l’espace public. Il y a une personne avec une canne blanche, une autre en fauteuil roulant, une autre avec un hijab, plusieurs personnes de couleur, et une représentation de la diversité de genre.\",\"CanadaAltText\":\"Symbole du gouvernement du Canada\"},\"LanguageSelect\":{\"Title\":\"Langue\",\"En\":\"English (Canada)\",\"Fr\":\"Français (Canada)\",\"PtBR\":\"Portugais (Brésil)\",\"EnShort\":\"English\",\"FrShort\":\"Français\",\"PtBRShort\":\"Portugais (Brésil)\",\"Close\":\"Fermer\"},\"Tutorial\":{\"step-1Title\":\"Fonctionnement d’Alerte COVID\",\"step-1AltText\":\"Dessin à la main d’un téléphone mobile dans une poche, qui envoie et reçoit des signaux.\",\"step-1\":\"L’application s’exécute en arrière-plan sans interrompre vos activités.\\n\\nQuand vous serez près d’une personne ayant Alerte COVID, vos téléphones s’échangeront des codes aléatoires toutes les 5 minutes.\\n\\nCes codes changent souvent et ne peuvent pas servir à vous identifier.\",\"step-2Title\":\"Qu’est-ce qu’une exposition?\",\"step-2AltText\":\"Dessin à la main de 2 téléphones mobiles côte à côte avec un chronomètre qui relie les deux téléphones.\",\"step-2\":\"L’application estime la distance entre deux personnes grâce à la puissance des signaux Bluetooth.\\n\\nPour que l’application enregistre une exposition, un contact doit :\\n• Avoir lieu à moins de 2 mètres.\\n• Durer au moins 15 minutes.\\n• Avoir lieu quand l’autre personne est probablement le plus contagieuse.\",\"step-3Title\":\"En cas de test positif\",\"step-3AltText\":\"Dessin à la main d’un téléphone mobile téléversant un code chiffré vers un nuage.\",\"step-3\":\"Si une personne ayant l’application reçoit un diagnostic de COVID-19, elle peut décider de téléverser les codes aléatoires émis par son téléphone.\\n\\nLa personne peut aussi fournir quelques précisions pour déterminer la période où elle était probablement le plus contagieuse. Cette période indique au téléphone les codes aléatoires qu’il faut téléverser.\\n\\nLes codes aléatoires sont envoyés vers un serveur central. Celui-ci ne reçoit aucun autre renseignement.\",\"step-4Title\":\"Découverte des expositions\",\"step-4AltText\":\"Dessin à la main d’un téléphone mobile émettant une liste de codes chiffrés. L’icône de la loupe de recherche met en évidence l’un des codes de la liste.\",\"step-4\":\"Chaque jour, quand votre téléphone a une connexion Internet, il obtient une liste de codes aléatoires émis par les personnes qui ont signalé un diagnostic.\\n\\nSi l’application reconnaît des codes dans cette liste, elle vous dira que vous avez été exposé et vous expliquera quoi faire ensuite.\",\"ActionBack\":\"Précédent\",\"ActionNext\":\"Suivant\",\"ActionEnd\":\"Terminé\",\"Close\":\"Fermer\"},\"Onboarding\":{\"Step\":\"Étape\",\"Of\":\"de\",\"ActionNext\":\"Suivant\",\"ActionEndSkip\":\"Ignorer\",\"ActionEnd\":\"Terminé\",\"ActionBack\":\"Précédent\",\"Start\":{\"Title\":\"Unissons-nous pour freiner la propagation de la COVID-19\",\"ImageAltText\":\"Dessin à la main avec plusieurs personnes différentes dedans. Leurs chemins en lignes pointillées se croisent et mènent à un téléphone intelligent plus bas.\",\"Body1\":\"Alerte COVID nous aide à briser le cycle d’infection. L’application permet d’aviser les personnes en cas d’exposition potentielle avant même que des symptômes apparaissent. \",\"Body2\":\"Nous pouvons ainsi prendre soin de nous et protéger nos communautés.\"},\"WhatItsNot\":{\"Title\":\"Ce qu’Alerte COVID ne fait pas\",\"ImageAltText\":\"Dessin à la main d’une rue sinueuse avec plusieurs maisons et un immeuble en hauteur. De petites infobulles apparaissent au-dessus de chaque bâtiment.\",\"Body1\":\"L’application ne vous dira pas sur-le-champ que vous êtes près d’une personne ayant eu un diagnostic.\",\"Body2\":\"Elle ne vous renseignera pas sur les éclosions de COVID-19 dans votre collectivité.\"},\"Anonymous\":{\"Title\":\"Votre vie privée est protégée\",\"ImageAltText\":\"Dessin à la main d’une paire de lunettes de soleil et d’un chapeau pour passer incognito. Au-dessus du chapeau, une icône de marqueur de géolocalisation est biffée.\",\"Body1\":\"Alerte COVID **n’utilise pas le GPS** et ne suit pas votre emplacement.\",\"Body2\":\"L’application **n’a aucun moyen** de connaître :\",\"Bullet1\":\"Votre emplacement.\",\"Bullet2\":\"Votre nom ou votre adresse.\",\"Bullet3\":\"Les contacts de votre téléphone.\",\"Bullet4\":\"Vos renseignements de santé, sauf ceux que vous acceptez de fournir.\",\"Bullet5\":\"Les renseignements de santé des personnes à proximité.\"},\"HowItWorks\":{\"Title\":\"Fonctionnement\",\"ImageAltText\":\"Dessin à la main de 3 téléphones mobiles émettant des codes aléatoires en utilisant Bluetooth.\",\"Body1\":\"L’application utilise Bluetooth pour échanger des codes aléatoires avec les téléphones à proximité.\",\"Body2\":\"Chaque jour, elle vérifie une liste de codes aléatoires provenant des personnes ayant signalé un test positif à l’application.\",\"Body3\":\"Si vous avez côtoyé l’une de ces personnes au cours des 14 derniers jours, vous recevrez une notification.\",\"HowItWorksCTA\":\"En savoir plus sur le fonctionnement\"},\"PartOf\":{\"Title\":\"L’un des efforts de santé publique\",\"ImageAltText\":\"Dessin à la main de divers moyens de lutter contre la COVID-19, dont un désinfectant pour les mains, un couvre-visage, des mains avec du savon et l’application Alerte COIVID.\",\"Body1\":\"Alerte COVID n’est qu’une partie des efforts de santé publique visant à freiner la propagation de la COVID-19.\",\"Body2\":\"Continuez à suivre les recommandations de santé publique de votre région.\",\"Body3\":\"Alerte COVID ne remplace pas un avis médical. Si vous tombez malade, contactez votre médecin ou un professionnel de la santé.\"},\"Permissions\":{\"Title\":\"L’application demandera votre autorisation\",\"ImageAltText\":\"Dessin à la main d’un téléphone mobile dont l’écran affiche une fenêtre de dialogue avec un X rouge et un crochet vert.\",\"Body1\":\"**Permettez à l’application** de collecter des codes aléatoires quand vous êtes près d’autres téléphones. L’application connaîtra la date, la durée et la puissance de signal associées à ces codes, mais ces données resteront sur votre téléphone. \",\"Body2\":\"Vous devrez aussi **lui permettre de vous envoyer des notifications**.\",\"PrivacyButtonCTA\":\"En savoir plus sur la confidentialité\"}},\"Privacy\":{\"Title\":\"Politique de confidentialité\",\"Close\":\"Fermer\"},\"ThankYou\":{\"Title\":\"Merci d’aider\",\"Body\":\"Les notifications d’exposition sont activées. Si Alerte COVID détecte que vous avez possiblement été exposé(e) à la COVID-19, vous recevrez une notification.\",\"Dismiss\":\"OK\"},\"DataUpload\":{\"Cancel\":\"Annuler\",\"Close\":\"Fermer\",\"Back\":\"Précédent\",\"InfoSmall\":\"Vos identifiants aléatoires ne seront pas partagés, à moins que vous donniez votre permission à l’étape suivante.\",\"ShareToast\":\"Identifiants aléatoires partagés avec succès\",\"StepXofY\":\"Étape {x} de {y}\",\"Today\":\"Aujourd’hui\",\"Yesterday\":\"Hier\",\"Earlier\":\"Il y a plus longtemps\",\"Step0\":{\"Title\":\"Aviser les personnes d’une exposition\",\"List\":{\"1a\":\"1. Vous entrez la clé à usage unique \",\"1b\":\"reçue lors de votre diagnostic.\",\"2a\":\"2. Vous fournissez quelques précisions \",\"2b\":\"qui aideront l’application à déterminer la période où vous étiez probablement le plus contagieux. Vous n’êtes pas obligé de le faire.\",\"3a\":\"3. Vous autorisez votre téléphone \",\"3b\":\"à partager vos codes aléatoires. Ceux-ci permettent d’aviser les personnes que vous avez côtoyées.\"},\"Body1\":\"Les personnes exposées n’obtiendront aucun renseignement sur vous \",\"Body2\":\"ni sur le moment de votre contact. Les personnes recevront uniquement une notification disant qu’elles ont récemment été exposées.\",\"CTA\":\"Suivant\",\"NoCode\":\"Vous n’avez pas de clé à usage unique?\"},\"IntermediateStep\":{\"Title\":\"Finir le partage d’expositions\",\"List\":{\"1a\":\"1. \",\"1b\":\"Fait.\",\"2a\":\"2. Vous fournissez quelques précisions \",\"2b\":\"qui aideront l’application à déterminer la période où vous étiez probablement le plus contagieux. Vous n’êtes pas obligé de le faire.\",\"3a\":\"3. Vous autorisez votre téléphone \",\"3b\":\"à partager vos codes aléatoires. Ceux-ci permettent d’aviser les personnes que vous avez côtoyées.\"},\"Body1\":\"Personne n’obtiendra de renseignements sur vous \",\"Body2\":\"ni sur le moment de votre contact. Les personnes recevront uniquement une notification disant qu’elles ont récemment été exposées.\",\"CTA\":\"Suivant\"},\"Step2\":{\"Title1\":\"Vous sentez-vous malade?\",\"Body1\":\"Symptômes possibles :\",\"Symptoms\":{\"1\":\"Toux ou difficultés respiratoires.\",\"2\":\"Fièvre ou frissons.\",\"3\":\"Fatigue ou faiblesse intense.\",\"4\":\"Courbatures ou mal de tête.\",\"5\":\"Perte soudaine de l’odorat ou du goût.\",\"6\":\"Maux d’estomac.\"},\"Option1\":\"Oui, vous avez eu 1 ou plusieurs symptômes aujourd’hui ou au cours des 14 derniers jours.\",\"Option2\":\"Non, vous n’avez eu aucun symptôme.\",\"Option3\":\"Vous n’êtes pas certain. \",\"Option4\":\"Vous préférez ne pas répondre.\",\"Title2\":\"Pourquoi cette question\",\"Body2\":\"Votre réponse permet de déterminer la période où vous étiez probablement le plus contagieux. L’application sait ainsi quelles expositions il faut partager pour n’aviser que les personnes côtoyées pendant cette période. Votre réponse ne sera jamais échangée ni conservée ailleurs que sur votre téléphone.\",\"CTA\":\"Suivant\"},\"FormView\":{\"Title\":\"Entrez votre clé à usage unique\",\"Body\":\"Entrez la clé reçue lors de votre diagnostic. Afin de prévenir les fausses notifications, vous ne recevrez une clé que si vous avez obtenu un résultat positif au test de dépistage de la COVID-19.\",\"Action\":\"Soumettre la clé\",\"InputLabel\":\"code Alerte COVID\"},\"OtkDiagnosedView\":{\"Title\":\"Vous avez déjà entré votre clé\",\"Body\":\"Il n’est pas nécessaire d’entrer la clé de nouveau.\",\"CTA\":\"Suivant\"},\"ConsentView\":{\"Title\":\"Vous pouvez maintenant téléverser vos codes\",\"Body1\":\"Votre téléphone vous demandera l’autorisation de téléverser vos codes ou « identifiants » aléatoires les plus récents.\",\"Body2a\":\"Personne ne recevra d’information sur vous \",\"Body2b\":\"ou sur le moment de votre proximité.\",\"Body3\":\"Vous pouvez aider à ralentir la propagation de la COVID-19 si vous acceptez.\",\"Action\":\"Accepter\"},\"TekUploadNoDate\":{\"Title\":\"Aviser les personnes côtoyées\",\"Body\":\"Vous n’avez pas fourni de date pour préciser la période où vous étiez probablement le plus contagieux.\\n\\nVous pouvez maintenant partager les expositions enregistrées par l’application pour aviser les personnes côtoyées au cours des 14 derniers jours.\",\"CTA\":\"Partager les expositions\"},\"SymptomOnsetDate\":{\"Title1\":\"Date de vos premiers symptômes\",\"Title2\":\"Pourquoi cette question\",\"Body1\":\"La date des premiers symptômes permet de déterminer la période où vous étiez probablement le plus contagieux. L’application sait ainsi quelles expositions il faut partager pour n’aviser que les personnes côtoyées pendant cette période.\\n\\nCette date ne sera jamais échangée ni conservée ailleurs que sur votre téléphone.\",\"CTA\":\"Partager les expositions\",\"CTA2\":\"Je préfère ne pas répondre\"},\"TestDate\":{\"Title1\":\"Date de votre test\",\"Body1\":\"Entrez la date de votre test de dépistage de la COVID-19.\",\"Title2\":\"Pourquoi cette question\",\"Body2\":\"La date de votre test permet de déterminer la période où vous étiez probablement le plus contagieux. L’application sait ainsi quelles expositions il faut partager pour n’aviser que les personnes côtoyées pendant cette période.\\n\\nCette date ne sera jamais échangée ni conservée ailleurs que sur votre téléphone.\",\"CTA\":\"Partager les expositions\",\"CTA2\":\"Je préfère ne pas répondre\"},\"NoCode\":{\"NoRegion\":{\"Title\":\"Vous n’avez pas choisi de province ou de territoire\",\"Body\":\"Dans certaines provinces et certains territoires, on ne peut pas encore signaler de diagnostics de COVID-19 avec cette application.\\n\\nPour savoir si vous pouvez obtenir une clé à usage unique, vous devez sélectionner votre région.\",\"ChooseRegionCTA\":\"Sélectionner une province ou un territoire\"},\"RegionNotCovered\":{\"Title\":\"Pas encore de signalement dans votre région\",\"Body\":\"Les personnes de votre région ne peuvent pas encore obtenir de clé à usage unique.\\n\\nVous ne pourrez pas aviser les personnes d’une exposition. Mais vous pouvez tout de même vous isoler pendant 14 jours, et ainsi :\",\"Body2\":\"Assurer la sécurité de votre communauté.\",\"Body3\":\"Protéger les personnes et les animaux vivant avec vous.\",\"Body4\":\"Prendre soin de vous.\"}}},\"Notification\":{\"ExposedMessageTitle\":\"Vous avez été exposé\",\"ExposedMessageBody\":\"Vous avez eu un contact étroit avec une personne qui a signalé un diagnostic de COVID-19 au moyen de l’application. Informez-vous sur les étapes à suivre.\",\"OffMessageTitle\":\"Alerte COVID est désactivée\",\"OffMessageBody\":\"Activez Alerte COVID pour être avisé en cas d’exposition potentielle à la COVID-19.\",\"DailyUploadNotificationTitle\":\"Téléversez vos nouveaux codes aléatoires\",\"DailyUploadNotificationBody\":\"Aidez à ralentir la propagation de la COVID-19 en téléversant vos nouveaux codes aléatoires.\",\"ExposureChecksTitle\":\"Alerte COVID\",\"ExposureChecksBody\":\"Vérification d’exposition en cours\",\"ExposureChecksAndroidChannelName\":\"Vérifications d’exposition\",\"PausedMessageTitle\":\"Vous avez désactivé l’application\",\"PausedMessageBody\":\"L’application ne peut pas enregistrer d’expositions puisque vous l’avez désactivée.\",\"OTKNotSharedTitle\":\"Pas tout à fait fini\",\"OTKNotSharedBody\":\"Vous avez entré votre clé à usage unique, mais vous n’avez pas encore partagé vos expositions. Les personnes que vous avez côtoyées n’ont pas encore été notifiées.\",\"AndroidChannelName\":\"Alerte COVID\",\"OutbreakMessageTitle\":\"You have been exposed to an Outbreak\",\"OutbreakMessageBody\":\"There was an outbreak at one of the locations you scanned\"},\"Partners\":{\"Label\":\"Conçu en partenariat avec\"},\"BottomSheet\":{\"Collapse\":\"Fermer\",\"OnStatus\":\"Alerte COVID est ACTIVÉE, Appuyez pour voir le menu\",\"OffStatus\":\"Alerte COVID est DÉSACTIVÉE, Appuyez pour voir le menu\"},\"RegionLanding\":{\"Title\":\"Sélectionnez votre province ou territoire\",\"Body1\":\"Les gouvernements provinciaux et territoriaux s’efforcent de rendre Alerte COVID utilisable partout au Canada.\",\"Body2\":\"Dans certains endroits, on ne peut pas encore signaler de diagnostics de COVID-19 avec cette application.\",\"RegionSelectBtn\":\"Sélectionnez une province ou un territoire\"},\"RegionPicker\":{\"Title\":\"Où habitez-vous? (facultatif)\",\"SettingsTitle\":\"Province ou territoire\",\"Close\":\"Fermer\",\"Body\":\"Sélectionnez votre région pour savoir si vous pouvez signaler un diagnostic à l’aide de l’application.\",\"Skip\":\"Ignorer\",\"GetStarted\":\"Commencer\",\"Optional\":\"* Facultatif\",\"AB\":\"Alberta\",\"BC\":\"Colombie-Britannique\",\"MB\":\"Manitoba\",\"NB\":\"Nouveau-Brunswick\",\"NL\":\"Terre-Neuve-et-Labrador\",\"NT\":\"Territoires du Nord-Ouest\",\"NS\":\"Nouvelle-Écosse\",\"NU\":\"Nunavut\",\"ON\":\"Ontario\",\"PE\":\"Île-du-Prince-Édouard\",\"QC\":\"Québec\",\"SK\":\"Saskatchewan\",\"YT\":\"Yukon\",\"None\":\"Ne rien sélectionner\",\"ExposedHelpLinkNote\":{\"AB\":\"(page en anglais)\",\"BC\":\"(page en anglais)\",\"SK\":\"(page en anglais)\"}},\"RegionPickerNoPT\":{\"Exposed\":{\"Title\":\"Trouvez les consignes de votre région\",\"Body\":\"Les mesures à prendre après une exposition dépendent de votre province ou de votre territoire.\"}},\"A11yList\":{\"Start\":\"Début de liste\",\"End\":\"Fin de liste\",\"Bullet\":\"Puce\"},\"QRCode\":{\"CTA\":\"Scanner un lieu\",\"Reader\":{\"Title\":\"Placez votre appareil photo devant le code QR\",\"Body\":\"\",\"Back\":\"Précédent\",\"Learn\":\"\"},\"CameraPermissions\":{\"Title\":\"Autoriser l’accès à l’appareil photo\",\"Body\":\"Pour scanner un lieu, l’application doit pouvoir utiliser l’appareil photo.\",\"Title2\":\"Vous hésitez à autoriser l’accès?\",\"Body2\":\"You can also use your phone’s camera app if you prefer not to let the app access your camera.\",\"CTA\":\"Suivant\",\"Cancel\":\"Pas maintenant\"},\"CameraPermissionDenied\":{\"Title\":\"Autorisation refusée\",\"Body\":\"Vous avez refusé qu’Alerte COVID utilise votre appareil photo.\\n\\nPour scanner un lieu, vous devez autoriser Alerte COVID à utiliser l’appareil photo dans les paramètres de votre téléphone.\\n\\nVous pouvez aussi utiliser directement votre appareil photo ou une application de lecture de codes QR.\",\"CTA\":\"Autoriser l’accès dans les paramètres\",\"CTA2\":\"En savoir plus sur Scanner un lieu\"},\"Error\":{\"Title\":\"Code QR non reconnu\",\"Body\":\"Vérifiez qu’il s’agit bien d’un code QR officiel d’Alerte COVID. Si vous n’êtes pas certain, demandez l’aide d’un employé.\\n\\nFind another way to subscribe to notifications. Speak to an employee to ask for help.\",\"CTA\":\"Réessayer\",\"CTA2\":\"Retour à l’écran d’accueil\"},\"CheckInView\":{\"Title\":\"Lieu scanné\",\"CTA1\":\"OK\",\"CTA2\":\"Annuler la visite\",\"MoreInfo\":\"Annuler\"},\"Exposed\":{\"Title\":\"You've been Exposed\"},\"CancelCheckIn\":{\"Title\":\"FR Scan cancelled\"},\"ScanAPlace\":{\"Title\":\"Scanner un lieu\",\"Body\":\"Vous pouvez être notifié si des personnes contagieuses ont visité le même lieu que vous. Lorsque vous scannez un code QR Alerte COVID à l’entrée d’un lieu, l’application l’enregistre sur votre téléphone.\\n\\nLes lieux que vous visitez\",\"Body2\":\"ne seront pas communiqués à personne.\",\"CTA\":\"Suivant\"}},\"Errors\":{\"Action\":\"OK\",\"TekUploadNoDate\":{\"Title\":\"\",\"Body\":\"Vous devez sélectionner une date pour pouvoir partager les expositions.\"},\"TekUploadOffline\":{\"Title\":\"Problème de connexion\",\"Body\":\"Vos codes aléatoires n’ont pas été téléversés. Vérifiez que votre téléphone est connecté à Internet au moyen du Wi-Fi ou de vos données.\"},\"TekUploadServer\":{\"Title\":\"Réessayez plus tard\",\"Body\":\"Il y a eu un problème avec le système.\"},\"TekUploadPermission\":{\"Title\":\"Les codes aléatoires n’ont pas pu être téléversés\",\"Body\":\"Vous n’avez pas donné votre autorisation.\"},\"OtcCodeNotEntered\":{\"Title\":\"\",\"Body\":\"Vous devez entrer votre clé pour pouvoir la soumettre.\"},\"OtcUploadInvalidOneTimeCode\":{\"Title\":\"Clé à usage unique non reconnue\",\"Body\":\"Votre clé n’a pas pu être reconnue. Veuillez essayer à nouveau.\"},\"OtcUploadTemporaryBan\":{\"Title\":\"Attendez pendant 1 heure\",\"Body\":\"Vous avez essayé d’entrer une clé à usage unique trop de fois.\"},\"OtcUploadDefault\":{\"Title\":\"Réessayez plus tard\",\"Body\":\"Il y a eu un problème avec le système.\"},\"OtcUploadOffline\":{\"Title\":\"Problème de connexion\",\"Body\":\"Votre clé n’a pas été envoyée. Vérifiez que votre téléphone est connecté à Internet au moyen du Wi-Fi ou de vos données.\"},\"ContentNoConnect\":{\"Title\":\"Impossible d’accéder aux informations de votre province ou de votre territoire\",\"Body\":\"Réessayez d’y accéder plus tard.\"},\"DataSharingStep2\":{\"Title\":\"\",\"Body\":\"Vous devez sélectionner une réponse pour passer à l’étape suivante.\"},\"ApiNotConnected\":{\"Title\":\"Une erreur s'est produite\",\"Body\":\"Malheureusement, il semble qu'Alerte COVID ne fonctionne pas sur votre téléphone. \\n\\nSi vous avez plusieurs profils utilisateur, essayez d'installer l'application dans le profil de base.\"}}}}")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/region.json:1:{"Warning":"THIS IS A GENERATED FILE - DO NOT EDIT","Active":["ON","NL","NB","SK","MB","QC","PE","NS","NT"],"en":{"RegionContent":{"Home":{"ON":{"ExposedHelpLink":"https://covid-19.ontario.ca/exposed"},"QC":{"ExposedHelpLink":"https://www.quebec.ca/en/health/health-issues/a-z/2019-coronavirus/testing-for-covid-19/?utm_source=canada.ca_alertecovid&utm_medium=application_if_you_re_exposed&utm_campaign=cqen_alertecovid_2020&utm_content=anglais"},"SK":{"ExposedHelpLink":"https://www.saskatchewan.ca/covid19-apps"},"NT":{"ExposedHelpLink":"https://www.gov.nt.ca/covid-19/en/services/health-and-well-being/isolation"}},"DiagnosedView":{"Active":{"ON":{"Tip":{"Body":"You can prepare for your call from Public Health through the test results website.","CTA":"Test results website","URL":"https://covid19results.ehealthontario.ca:4443/login"}},"NL":{"Tip":{"Body":"You need to self-isolate and follow advice from public health.","CTA":"How to self-isolate","URL":"https://www.gov.nl.ca/covid-19/individuals-and-households/self-isolation-and-self-monitoring/"}},"NB":{"Tip":{"Body":"","CTA":"","URL":""}},"SK":{"Tip":{"Body":"","CTA":"","URL":""}},"MB":{"Tip":{"Body":"","CTA":"","URL":""}},"QC":{"Tip":{"Body":"","CTA":"","URL":""}},"NS":{"Tip":{"Body":"You need to self-isolate.","CTA":"How to self-isolate","URL":"https://novascotia.ca/coronavirus/symptoms-and-testing/#self-isolate"}},"PE":{"Tip":{"Body":"","CTA":"","URL":""}},"NT":{"Tip":{"Body":"","CTA":"","URL":""}}}},"NoCode":{"Active":{"ON":{"Title":"Get a one-time key","Body":"If you’ve tested positive in Ontario:","Body2":"Go to the COVID-19 Test Results Website and enter your details.","Body3":"Review your test results.","Body4":"Get the one-time key.","Body5":"Come back here and enter the key.","CTA":"Go to COVID-19 Test Results Website","Link":"https://covid19results.ehealthontario.ca:4443/"},"NL":{"Title":"Get a one-time key","Body":"If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.","CTA":"Help","Link":"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4"},"NB":{"Title":"Get a one-time key","Body":"If you test positive for COVID-19, public health gives you a one-time key over the phone when you get your positive test result.\n\nYou will get one key, and it expires in 24 hours or after you submit it.","CTA":"","Link":""},"SK":{"Title":"Get a one-time key","Body":"If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.","CTA":"Help","Link":"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4"},"MB":{"Title":"Get a one-time key","Body":"If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.","CTA":"Help","Link":"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4"},"QC":{"Title":"Have you tested positive?","Body":"You can only ask for a one-time key if you test positive for COVID-19.\n\nAfter getting your call from Public Health, you can ask for a key at 1-855-228-4253.\n\nDo not call unless you’ve gotten a call from Public Health about your positive test result.","CTA":"Have you tested positive?\nCall 1-855-228-4253","Link":"tel:1-855-228-4253"},"NS":{"Title":"Get a one-time key","Body":"If you test positive for COVID-19, public health gives you a one-time key over the phone along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.","CTA":"Help","Link":"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4"},"PE":{"Title":"Get a one-time key","Body":"If you test positive for COVID-19, public health gives you a one-time key.\n\nYou will only get one key, and it expires in 24 hours.","CTA":"Help","Link":"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4"},"NT":{"Title":"Get a one-time key","Body":"If you test positive for COVID-19, public health will give you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.","CTA":"Help","Link":"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4"}}},"ExposureView":{"Active":{"ON":{"Body":"You’re at risk of being infected.","CTA":"Find out what to do next","URL":"https://ontario.ca/covidalert-exposed"},"NL":{"Body":"You’re at risk of being infected.","CTA":"Find out what to do next","URL":"https://www.gov.nl.ca/covid-19/exposed/"},"NB":{"Body":"","CTA":"Find out if you need to get tested","URL":"https://www2.gnb.ca/content/gnb/en/corporate/promo/covid-19/covid_alert.html"},"SK":{"Body":"You’re at risk of being infected.","CTA":"Find out what to do next","URL":"https://www.saskatchewan.ca/covid19-apps?utm_source=goc&utm_medium=link&utm_campaign=alert"},"MB":{"Body":"You’re at risk of being infected.","CTA":"Find out if you need to get tested","URL":"https://sharedhealthmb.ca/covid19/screening-tool/"},"QC":{"Body":"You may have the virus.","CTA":"Find out what to do next","URL":"https://www.quebec.ca/en/health/health-issues/a-z/2019-coronavirus/testing-for-covid-19/?utm_source=canada.ca_alertecovid&utm_medium=application_what_to_do_next&utm_campaign=cqen_alertecovid_2020&utm_content=anglais"},"NS":{"Body":"","CTA":"Find out what to do next","URL":"https://novascotia.ca/coronavirus/exposure"},"PE":{"Body":"You’re at risk of being infected.","CTA":"Find out what to do next","URL":"https://www.princeedwardisland.ca/en/information/health-and-wellness/covid-alert-app#utm_source=inapp&utm_medium=app&utm_campaign=CovidAlertApp"},"NT":{"Body":"You need to isolate for 14 days, and contact your local healthcare provider as soon as possible.","CTA":"How to isolate safely","URL":"https://www.gov.nt.ca/covid-19/en/services/health-and-well-being/isolation"}},"Inactive":{"CA":{"CTA":"Find out if you need to be tested","URL":"https://ca.thrive.health/covid19/en"},"AB":{"CTA":"Find out if you need to be tested","URL":"https://myhealth.alberta.ca/Journey/COVID-19/Pages/PubAsympIsolate.aspx"},"BC":{"CTA":"Find out if you need to be tested","URL":"https://bc.thrive.health/covid19/en"},"MB":{"CTA":"Find out if you need to be tested","URL":"https://sharedhealthmb.ca/covid19/screening-tool/"},"NB":{"CTA":"Find out if you need to be tested","URL":"https://www2.gnb.ca/content/gnb/en/departments/ocmoh/cdc/content/respiratory_diseases/coronavirus/coronavirusexposure.html#/app/symptom-checker/guides/399/what-to-do"},"NL":{"CTA":"Find out if you need to be tested","URL":"https://nl.thrive.health/covid19/en"},"NT":{"CTA":"Find out if you need to be tested","URL":"https://www.gov.nt.ca/covid-19/en/services/nwt-online-covid-19-self-assessment-tool"},"NS":{"CTA":"Find out if you need to be tested","URL":"https://novascotia.ca/coronavirus/when-to-seek-help/#if-exposed"},"NU":{"CTA":"Find out if you need to be tested","URL":"https://nu.thrive.health/covid19/en"},"ON":{"CTA":"Find out what to do next","URL":"https://ontario.ca/covidalert-exposed"},"PE":{"CTA":"Find out if you need to be tested","URL":"https://www.princeedwardisland.ca/en/information/health-and-wellness/covid-19-self-isolation"},"QC":{"CTA":"Find out if you need to be tested","URL":"https://www.quebec.ca/en/health/health-issues/a-z/2019-coronavirus/instructions-for-people-who-have-been-in-contact-with-a-confirmed-case-of-covid-19/"},"SK":{"CTA":"Find out if you need to be tested","URL":"https://www.saskatchewan.ca/government/health-care-administration-and-provider-resources/treatment-procedures-and-guidelines/emerging-public-health-issues/2019-novel-coronavirus/covid-19-self-assessment"},"YT":{"CTA":"Find out if you need to be tested","URL":"https://service.yukon.ca/en/covid-19-self-assessment/"}}}}},"fr":{"RegionContent":{"Home":{"ON":{"ExposedHelpLink":"https://covid-19.ontario.ca/fr/expose"},"QC":{"ExposedHelpLink":"https://www.quebec.ca/sante/problemes-de-sante/a-z/coronavirus-2019/tests-de-depistage/?utm_source=canada.ca_alertecovid&utm_medium=application_Que_faire&utm_campaign=cqen_alertecovid_2020&utm_content=francais"},"SK":{"ExposedHelpLink":"https://www.saskatchewan.ca/covid19-apps"},"NT":{"ExposedHelpLink":"https://www.gov.nt.ca/covid-19/en/services/health-and-well-being/isolation"}},"DiagnosedView":{"Active":{"ON":{"Tip":{"Body":"Vous pouvez vous préparer pour l’appel de la Santé publique sur le site Web des résultats du test.","CTA":"Site des résultats du test","URL":"https://covid19results.ehealthontario.ca:4443/agree?la=fr"}},"NL":{"Tip":{"Body":"Vous devez vous isoler et suivre les recommandations de santé publique.","CTA":"Comment vous isoler","URL":"https://www.gov.nl.ca/covid-19/comment-proceder-a-lauto-isolement/"}},"NB":{"Tip":{"Body":"","CTA":"","URL":""}},"SK":{"Tip":{"Body":"","CTA":"","URL":""}},"MB":{"Tip":{"Body":"","CTA":"","URL":""}},"QC":{"Tip":{"Body":"","CTA":"","URL":""}},"NS":{"Tip":{"Body":"Vous devez vous isoler.","CTA":"Comment vous isoler","URL":"https://novascotia.ca/coronavirus/symptoms-and-testing/fr/#self-isolate"}},"PE":{"Tip":{"Body":"","CTA":"","URL":""}},"NT":{"Tip":{"Body":"","CTA":"","URL":""}}}},"NoCode":{"Active":{"ON":{"Title":"Obtenir une clé à usage unique","Body":"Si vous avez reçu un test positif en Ontario :","Body2":"Allez sur le site Web des Résultats du test de diagnostic de la COVID-19 puis entrez vos informations.","Body3":"Consultez les résultats de votre test.","Body4":"Notez la clé à usage unique.","Body5":"Revenez ici et entrez la clé.","CTA":"Aller sur le site des Résultats du test pour la COVID-19","Link":"https://covid19results.ehealthontario.ca:4443/agree?la=fr"},"NL":{"Title":"Obtenir une clé à usage unique","Body":"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\n\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.","CTA":"Aide","Link":"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4"},"NB":{"Title":"Obtenir une clé à usage unique","Body":"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\n\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.","CTA":"","Link":""},"SK":{"Title":"Obtenir une clé à usage unique","Body":"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\n\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.","CTA":"Aide","Link":"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4"},"MB":{"Title":"Obtenir une clé à usage unique","Body":"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\n\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.","CTA":"Aide","Link":"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4"},"QC":{"Title":"Avez-vous reçu un résultat positif?","Body":"Vous pouvez demander une clé à usage unique seulement si vous recevez un diagnostic de COVID-19.\n\nAprès avoir reçu l’appel de la Santé publique, appelez au 1-855-228-4253 pour demander une clé.\n\nN’appelez que si vous avez reçu un appel de la Santé publique concernant votre test positif.","CTA":"Votre résultat est-il positif?\nAppelez au 1-855-228-4253","Link":"tel:1-855-228-4253"},"PE":{"Title":"Obtenir une clé à usage unique","Body":"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\n\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.","CTA":"Aide","Link":"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4"},"NS":{"Title":"Obtenir une clé à usage unique","Body":"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\n\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.","CTA":"Aide","Link":"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4"},"NT":{"Title":"Obtenir une clé à usage unique","Body":"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\n\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.","CTA":"Aide","Link":"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4"}}},"ExposureView":{"Active":{"ON":{"Body":"Vous êtes à risque d’être infecté.","CTA":"Lisez les étapes à suivre","URL":"https://ontario.ca/covidalerte-expose"},"NL":{"Body":"Vous êtes à risque d’être infecté.","CTA":"Lisez les étapes à suivre","URL":"https://www.gov.nl.ca/covid-19/expose/"},"NB":{"Body":"","CTA":"Découvrez si vous devriez vous faire tester","URL":"https://www2.gnb.ca/content/gnb/fr/corporate/promo/covid-19/alerte_covid.html"},"SK":{"Body":"Vous êtes à risque d’être infecté.","CTA":"Lisez les étapes à suivre (page en anglais)","URL":"https://www.saskatchewan.ca/covid19-apps?utm_source=goc&utm_medium=link&utm_campaign=alert"},"MB":{"Body":"Vous êtes à risque d’être infecté.","CTA":"Découvrez si vous devriez vous faire tester","URL":"https://covid19.soinscommunsmb.ca/covid19/outil-de-depistage/"},"QC":{"Body":"Vous pourriez avoir contracté le virus.","CTA":"Lisez les consignes à suivre","URL":"https://www.quebec.ca/sante/problemes-de-sante/a-z/coronavirus-2019/tests-de-depistage/?utm_source=canada.ca_alertecovid&utm_medium=application_consignes_a_suivre&utm_campaign=cqen_alertecovid_2020&utm_content=francais"},"NS":{"Body":"","CTA":"Lisez les étapes à suivre","URL":"https://novascotia.ca/coronavirus/exposure/fr"},"PE":{"Body":"Vous êtes à risque d’être infecté. ","CTA":"Lisez les étapes à suivre","URL":"https://www.princeedwardisland.ca/fr/information/sante-et-mieux-etre/application-alerte-covid#utm_source=inapp&utm_medium=app&utm_campaign=ApplicationAlerteCovid"},"NT":{"Body":"Vous devez vous isoler pendant 14 jours et contacter votre professionnel de la santé dès que possible.","CTA":"Comment vous isoler","URL":"https://www.gov.nt.ca/covid-19/fr/services/sant%C3%A9-et-bien-%C3%AAtre/isolement-obligatoire"}},"Inactive":{"CA":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://ca.thrive.health/covid19/fr"},"AB":{"CTA":"Découvrez si vous devriez vous faire tester (lien en anglais seulement)","URL":"https://myhealth.alberta.ca/Journey/COVID-19/Pages/PubAsympIsolate.aspx"},"BC":{"CTA":"Découvrez si vous devriez vous faire tester (lien en anglais seulement)","URL":"https://bc.thrive.health/covid19/en"},"MB":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://covid19.soinscommunsmb.ca/covid19/outil-de-depistage/"},"NB":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://www2.gnb.ca/content/gnb/fr/ministeres/bmhc/maladies_transmissibles/content/maladies_respiratoires/coronavirus/expositionaucoronavirus.html#/app/symptom-checker/guides/399/what-to-do"},"NL":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://www.811healthline.ca/fr/autoevaluation-pour-la-covid-19/"},"NT":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://www.gov.nt.ca/covid-19/fr/services/outil-d%E2%80%99auto-%C3%A9valuation-en-ligne-pour-la-covid-19-aux-tno"},"NS":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://novascotia.ca/coronavirus/when-to-seek-help/fr/#if-exposed"},"NU":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://nu.thrive.health/covid19/fr"},"ON":{"CTA":"Lisez les étapes à suivre","URL":"https://ontario.ca/covidalerte-expose"},"PE":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://www.princeedwardisland.ca/fr/information/sante-et-mieux-etre/auto-isolement-pour-lutter-contre-la-covid-19"},"QC":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://www.quebec.ca/sante/problemes-de-sante/a-z/coronavirus-2019/consignes-isolement-personne-en-contact-covid-19/"},"SK":{"CTA":"Découvrez si vous devriez vous faire tester (lien en anglais seulement)","URL":"https://www.saskatchewan.ca/government/health-care-administration-and-provider-resources/treatment-procedures-and-guidelines/emerging-public-health-issues/2019-novel-coronavirus/covid-19-self-assessment"},"YT":{"CTA":"Découvrez si vous devriez vous faire tester","URL":"https://service.yukon.ca/fr/covid-19-auto-evaluation/"}}}}}}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:87:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:91:          "Body4": "Get the one-time key.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:92:          "Body5": "Come back here and enter the key.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:97:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:98:          "Body": "If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:103:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:104:          "Body": "If you test positive for COVID-19, public health gives you a one-time key over the phone when you get your positive test result.\n\nYou will get one key, and it expires in 24 hours or after you submit it.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:109:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:110:          "Body": "If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:115:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:116:          "Body": "If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:122:          "Body": "You can only ask for a one-time key if you test positive for COVID-19.\n\nAfter getting your call from Public Health, you can ask for a key at 1-855-228-4253.\n\nDo not call unless you’ve gotten a call from Public Health about your positive test result.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:127:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:128:          "Body": "If you test positive for COVID-19, public health gives you a one-time key over the phone along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:133:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:134:          "Body": "If you test positive for COVID-19, public health gives you a one-time key.\n\nYou will only get one key, and it expires in 24 hours.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:139:          "Title": "Get a one-time key",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/en.json:140:          "Body": "If you test positive for COVID-19, public health will give you a one-time key along with your positive test result.\n\nYou will only get one key, and it expires in 24 hours.",
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/locale/translations/regional/index.js:1:export default JSON.parse("{\"en\":{\"RegionContent\":{\"Home\":{\"ON\":{\"ExposedHelpLink\":\"https://covid-19.ontario.ca/exposed\"},\"QC\":{\"ExposedHelpLink\":\"https://www.quebec.ca/en/health/health-issues/a-z/2019-coronavirus/testing-for-covid-19/?utm_source=canada.ca_alertecovid&utm_medium=application_if_you_re_exposed&utm_campaign=cqen_alertecovid_2020&utm_content=anglais\"},\"SK\":{\"ExposedHelpLink\":\"https://www.saskatchewan.ca/covid19-apps\"},\"NT\":{\"ExposedHelpLink\":\"https://www.gov.nt.ca/covid-19/en/services/health-and-well-being/isolation\"}},\"DiagnosedView\":{\"Active\":{\"ON\":{\"Tip\":{\"Body\":\"You can prepare for your call from Public Health through the test results website.\",\"CTA\":\"Test results website\",\"URL\":\"https://covid19results.ehealthontario.ca:4443/login\"}},\"NL\":{\"Tip\":{\"Body\":\"You need to self-isolate and follow advice from public health.\",\"CTA\":\"How to self-isolate\",\"URL\":\"https://www.gov.nl.ca/covid-19/individuals-and-households/self-isolation-and-self-monitoring/\"}},\"NB\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"SK\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"MB\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"QC\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"NS\":{\"Tip\":{\"Body\":\"You need to self-isolate.\",\"CTA\":\"How to self-isolate\",\"URL\":\"https://novascotia.ca/coronavirus/symptoms-and-testing/#self-isolate\"}},\"PE\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"NT\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}}}},\"NoCode\":{\"Active\":{\"ON\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you’ve tested positive in Ontario:\",\"Body2\":\"Go to the COVID-19 Test Results Website and enter your details.\",\"Body3\":\"Review your test results.\",\"Body4\":\"Get the one-time key.\",\"Body5\":\"Come back here and enter the key.\",\"CTA\":\"Go to COVID-19 Test Results Website\",\"Link\":\"https://covid19results.ehealthontario.ca:4443/\"},\"NL\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\\n\\nYou will only get one key, and it expires in 24 hours.\",\"CTA\":\"Help\",\"Link\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4\"},\"NB\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you test positive for COVID-19, public health gives you a one-time key over the phone when you get your positive test result.\\n\\nYou will get one key, and it expires in 24 hours or after you submit it.\",\"CTA\":\"\",\"Link\":\"\"},\"SK\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\\n\\nYou will only get one key, and it expires in 24 hours.\",\"CTA\":\"Help\",\"Link\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4\"},\"MB\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you test positive for COVID-19, public health gives you a one-time key along with your positive test result.\\n\\nYou will only get one key, and it expires in 24 hours.\",\"CTA\":\"Help\",\"Link\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4\"},\"QC\":{\"Title\":\"Have you tested positive?\",\"Body\":\"You can only ask for a one-time key if you test positive for COVID-19.\\n\\nAfter getting your call from Public Health, you can ask for a key at 1-855-228-4253.\\n\\nDo not call unless you’ve gotten a call from Public Health about your positive test result.\",\"CTA\":\"Have you tested positive?\\nCall 1-855-228-4253\",\"Link\":\"tel:1-855-228-4253\"},\"NS\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you test positive for COVID-19, public health gives you a one-time key over the phone along with your positive test result.\\n\\nYou will only get one key, and it expires in 24 hours.\",\"CTA\":\"Help\",\"Link\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4\"},\"PE\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you test positive for COVID-19, public health gives you a one-time key.\\n\\nYou will only get one key, and it expires in 24 hours.\",\"CTA\":\"Help\",\"Link\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4\"},\"NT\":{\"Title\":\"Get a one-time key\",\"Body\":\"If you test positive for COVID-19, public health will give you a one-time key along with your positive test result.\\n\\nYou will only get one key, and it expires in 24 hours.\",\"CTA\":\"Help\",\"Link\":\"https://www.canada.ca/en/public-health/services/diseases/coronavirus-disease-covid-19/covid-alert/help.html#4\"}}},\"ExposureView\":{\"Active\":{\"ON\":{\"Body\":\"You’re at risk of being infected.\",\"CTA\":\"Find out what to do next\",\"URL\":\"https://ontario.ca/covidalert-exposed\"},\"NL\":{\"Body\":\"You’re at risk of being infected.\",\"CTA\":\"Find out what to do next\",\"URL\":\"https://www.gov.nl.ca/covid-19/exposed/\"},\"NB\":{\"Body\":\"\",\"CTA\":\"Find out if you need to get tested\",\"URL\":\"https://www2.gnb.ca/content/gnb/en/corporate/promo/covid-19/covid_alert.html\"},\"SK\":{\"Body\":\"You’re at risk of being infected.\",\"CTA\":\"Find out what to do next\",\"URL\":\"https://www.saskatchewan.ca/covid19-apps?utm_source=goc&utm_medium=link&utm_campaign=alert\"},\"MB\":{\"Body\":\"You’re at risk of being infected.\",\"CTA\":\"Find out if you need to get tested\",\"URL\":\"https://sharedhealthmb.ca/covid19/screening-tool/\"},\"QC\":{\"Body\":\"You may have the virus.\",\"CTA\":\"Find out what to do next\",\"URL\":\"https://www.quebec.ca/en/health/health-issues/a-z/2019-coronavirus/testing-for-covid-19/?utm_source=canada.ca_alertecovid&utm_medium=application_what_to_do_next&utm_campaign=cqen_alertecovid_2020&utm_content=anglais\"},\"NS\":{\"Body\":\"\",\"CTA\":\"Find out what to do next\",\"URL\":\"https://novascotia.ca/coronavirus/exposure\"},\"PE\":{\"Body\":\"You’re at risk of being infected.\",\"CTA\":\"Find out what to do next\",\"URL\":\"https://www.princeedwardisland.ca/en/information/health-and-wellness/covid-alert-app#utm_source=inapp&utm_medium=app&utm_campaign=CovidAlertApp\"},\"NT\":{\"Body\":\"You need to isolate for 14 days, and contact your local healthcare provider as soon as possible.\",\"CTA\":\"How to isolate safely\",\"URL\":\"https://www.gov.nt.ca/covid-19/en/services/health-and-well-being/isolation\"}},\"Inactive\":{\"CA\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://ca.thrive.health/covid19/en\"},\"AB\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://myhealth.alberta.ca/Journey/COVID-19/Pages/PubAsympIsolate.aspx\"},\"BC\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://bc.thrive.health/covid19/en\"},\"MB\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://sharedhealthmb.ca/covid19/screening-tool/\"},\"NB\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://www2.gnb.ca/content/gnb/en/departments/ocmoh/cdc/content/respiratory_diseases/coronavirus/coronavirusexposure.html#/app/symptom-checker/guides/399/what-to-do\"},\"NL\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://nl.thrive.health/covid19/en\"},\"NT\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://www.gov.nt.ca/covid-19/en/services/nwt-online-covid-19-self-assessment-tool\"},\"NS\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://novascotia.ca/coronavirus/when-to-seek-help/#if-exposed\"},\"NU\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://nu.thrive.health/covid19/en\"},\"ON\":{\"CTA\":\"Find out what to do next\",\"URL\":\"https://ontario.ca/covidalert-exposed\"},\"PE\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://www.princeedwardisland.ca/en/information/health-and-wellness/covid-19-self-isolation\"},\"QC\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://www.quebec.ca/en/health/health-issues/a-z/2019-coronavirus/instructions-for-people-who-have-been-in-contact-with-a-confirmed-case-of-covid-19/\"},\"SK\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://www.saskatchewan.ca/government/health-care-administration-and-provider-resources/treatment-procedures-and-guidelines/emerging-public-health-issues/2019-novel-coronavirus/covid-19-self-assessment\"},\"YT\":{\"CTA\":\"Find out if you need to be tested\",\"URL\":\"https://service.yukon.ca/en/covid-19-self-assessment/\"}}}}},\"fr\":{\"RegionContent\":{\"Home\":{\"ON\":{\"ExposedHelpLink\":\"https://covid-19.ontario.ca/fr/expose\"},\"QC\":{\"ExposedHelpLink\":\"https://www.quebec.ca/sante/problemes-de-sante/a-z/coronavirus-2019/tests-de-depistage/?utm_source=canada.ca_alertecovid&utm_medium=application_Que_faire&utm_campaign=cqen_alertecovid_2020&utm_content=francais\"},\"SK\":{\"ExposedHelpLink\":\"https://www.saskatchewan.ca/covid19-apps\"},\"NT\":{\"ExposedHelpLink\":\"https://www.gov.nt.ca/covid-19/en/services/health-and-well-being/isolation\"}},\"DiagnosedView\":{\"Active\":{\"ON\":{\"Tip\":{\"Body\":\"Vous pouvez vous préparer pour l’appel de la Santé publique sur le site Web des résultats du test.\",\"CTA\":\"Site des résultats du test\",\"URL\":\"https://covid19results.ehealthontario.ca:4443/agree?la=fr\"}},\"NL\":{\"Tip\":{\"Body\":\"Vous devez vous isoler et suivre les recommandations de santé publique.\",\"CTA\":\"Comment vous isoler\",\"URL\":\"https://www.gov.nl.ca/covid-19/comment-proceder-a-lauto-isolement/\"}},\"NB\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"SK\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"MB\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"QC\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"NS\":{\"Tip\":{\"Body\":\"Vous devez vous isoler.\",\"CTA\":\"Comment vous isoler\",\"URL\":\"https://novascotia.ca/coronavirus/symptoms-and-testing/fr/#self-isolate\"}},\"PE\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}},\"NT\":{\"Tip\":{\"Body\":\"\",\"CTA\":\"\",\"URL\":\"\"}}}},\"NoCode\":{\"Active\":{\"ON\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Si vous avez reçu un test positif en Ontario :\",\"Body2\":\"Allez sur le site Web des Résultats du test de diagnostic de la COVID-19 puis entrez vos informations.\",\"Body3\":\"Consultez les résultats de votre test.\",\"Body4\":\"Notez la clé à usage unique.\",\"Body5\":\"Revenez ici et entrez la clé.\",\"CTA\":\"Aller sur le site des Résultats du test pour la COVID-19\",\"Link\":\"https://covid19results.ehealthontario.ca:4443/agree?la=fr\"},\"NL\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\\n\\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.\",\"CTA\":\"Aide\",\"Link\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4\"},\"NB\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\\n\\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.\",\"CTA\":\"\",\"Link\":\"\"},\"SK\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\\n\\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.\",\"CTA\":\"Aide\",\"Link\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4\"},\"MB\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\\n\\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.\",\"CTA\":\"Aide\",\"Link\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4\"},\"QC\":{\"Title\":\"Avez-vous reçu un résultat positif?\",\"Body\":\"Vous pouvez demander une clé à usage unique seulement si vous recevez un diagnostic de COVID-19.\\n\\nAprès avoir reçu l’appel de la Santé publique, appelez au 1-855-228-4253 pour demander une clé.\\n\\nN’appelez que si vous avez reçu un appel de la Santé publique concernant votre test positif.\",\"CTA\":\"Votre résultat est-il positif?\\nAppelez au 1-855-228-4253\",\"Link\":\"tel:1-855-228-4253\"},\"NS\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\\n\\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.\",\"CTA\":\"Aide\",\"Link\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4\"},\"PE\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\\n\\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.\",\"CTA\":\"Aide\",\"Link\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4\"},\"NT\":{\"Title\":\"Obtenir une clé à usage unique\",\"Body\":\"Quand vous recevez un résultat de test positif pour la COVID-19, la Santé publique vous fournit aussi une clé à usage unique.\\n\\nVous recevrez une seule clé, et elle expirera au bout de 24 heures.\",\"CTA\":\"Aide\",\"Link\":\"https://www.canada.ca/fr/sante-publique/services/maladies/maladie-coronavirus-covid-19/alerte-covid/aide.html#4\"}}},\"ExposureView\":{\"Active\":{\"ON\":{\"Body\":\"Vous êtes à risque d’être infecté.\",\"CTA\":\"Lisez les étapes à suivre\",\"URL\":\"https://ontario.ca/covidalerte-expose\"},\"NL\":{\"Body\":\"Vous êtes à risque d’être infecté.\",\"CTA\":\"Lisez les étapes à suivre\",\"URL\":\"https://www.gov.nl.ca/covid-19/expose/\"},\"NB\":{\"Body\":\"\",\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://www2.gnb.ca/content/gnb/fr/corporate/promo/covid-19/alerte_covid.html\"},\"SK\":{\"Body\":\"Vous êtes à risque d’être infecté.\",\"CTA\":\"Lisez les étapes à suivre (page en anglais)\",\"URL\":\"https://www.saskatchewan.ca/covid19-apps?utm_source=goc&utm_medium=link&utm_campaign=alert\"},\"MB\":{\"Body\":\"Vous êtes à risque d’être infecté.\",\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://covid19.soinscommunsmb.ca/covid19/outil-de-depistage/\"},\"QC\":{\"Body\":\"Vous pourriez avoir contracté le virus.\",\"CTA\":\"Lisez les consignes à suivre\",\"URL\":\"https://www.quebec.ca/sante/problemes-de-sante/a-z/coronavirus-2019/tests-de-depistage/?utm_source=canada.ca_alertecovid&utm_medium=application_consignes_a_suivre&utm_campaign=cqen_alertecovid_2020&utm_content=francais\"},\"NS\":{\"Body\":\"\",\"CTA\":\"Lisez les étapes à suivre\",\"URL\":\"https://novascotia.ca/coronavirus/exposure/fr\"},\"PE\":{\"Body\":\"Vous êtes à risque d’être infecté. \",\"CTA\":\"Lisez les étapes à suivre\",\"URL\":\"https://www.princeedwardisland.ca/fr/information/sante-et-mieux-etre/application-alerte-covid#utm_source=inapp&utm_medium=app&utm_campaign=ApplicationAlerteCovid\"},\"NT\":{\"Body\":\"Vous devez vous isoler pendant 14 jours et contacter votre professionnel de la santé dès que possible.\",\"CTA\":\"Comment vous isoler\",\"URL\":\"https://www.gov.nt.ca/covid-19/fr/services/sant%C3%A9-et-bien-%C3%AAtre/isolement-obligatoire\"}},\"Inactive\":{\"CA\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://ca.thrive.health/covid19/fr\"},\"AB\":{\"CTA\":\"Découvrez si vous devriez vous faire tester (lien en anglais seulement)\",\"URL\":\"https://myhealth.alberta.ca/Journey/COVID-19/Pages/PubAsympIsolate.aspx\"},\"BC\":{\"CTA\":\"Découvrez si vous devriez vous faire tester (lien en anglais seulement)\",\"URL\":\"https://bc.thrive.health/covid19/en\"},\"MB\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://covid19.soinscommunsmb.ca/covid19/outil-de-depistage/\"},\"NB\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://www2.gnb.ca/content/gnb/fr/ministeres/bmhc/maladies_transmissibles/content/maladies_respiratoires/coronavirus/expositionaucoronavirus.html#/app/symptom-checker/guides/399/what-to-do\"},\"NL\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://www.811healthline.ca/fr/autoevaluation-pour-la-covid-19/\"},\"NT\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://www.gov.nt.ca/covid-19/fr/services/outil-d%E2%80%99auto-%C3%A9valuation-en-ligne-pour-la-covid-19-aux-tno\"},\"NS\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://novascotia.ca/coronavirus/when-to-seek-help/fr/#if-exposed\"},\"NU\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://nu.thrive.health/covid19/fr\"},\"ON\":{\"CTA\":\"Lisez les étapes à suivre\",\"URL\":\"https://ontario.ca/covidalerte-expose\"},\"PE\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://www.princeedwardisland.ca/fr/information/sante-et-mieux-etre/auto-isolement-pour-lutter-contre-la-covid-19\"},\"QC\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://www.quebec.ca/sante/problemes-de-sante/a-z/coronavirus-2019/consignes-isolement-personne-en-contact-covid-19/\"},\"SK\":{\"CTA\":\"Découvrez si vous devriez vous faire tester (lien en anglais seulement)\",\"URL\":\"https://www.saskatchewan.ca/government/health-care-administration-and-provider-resources/treatment-procedures-and-guidelines/emerging-public-health-issues/2019-novel-coronavirus/covid-19-self-assessment\"},\"YT\":{\"CTA\":\"Découvrez si vous devriez vous faire tester\",\"URL\":\"https://service.yukon.ca/fr/covid-19-auto-evaluation/\"}}}}}}")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/navigation/DevPersistedNavigationContainer.tsx:8:  persistKey: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/navigation/DevPersistedNavigationContainer.tsx:12:  {persistKey, onStateChange, ...others}: DevPersistedNavigationContainerProps,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/navigation/DevPersistedNavigationContainer.tsx:23:          await AsyncStorage.setItem(persistKey, JSON.stringify(state));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/navigation/DevPersistedNavigationContainer.tsx:41:    [onStateChange, persistKey],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/navigation/DevPersistedNavigationContainer.tsx:47:        const jsonString = await AsyncStorage.getItem(persistKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/navigation/DevPersistedNavigationContainer.tsx:58:  }, [persistKey]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/navigation/DevPersistedNavigationContainer.tsx:67:      key={persistKey}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseDataSharingView.tsx:3:import {KeyboardAvoidingView, Platform, StyleSheet, ScrollView} from 'react-native';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseDataSharingView.tsx:29:    <KeyboardAvoidingView style={styles.flex} behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseDataSharingView.tsx:40:          <ScrollView style={styles.flex} keyboardShouldPersistTaps="handled">
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseDataSharingView.tsx:45:    </KeyboardAvoidingView>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseTekUploadView.tsx:35:  const {fetchAndSubmitKeys, setIsUploading} = useReportDiagnosis();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseTekUploadView.tsx:42:  // TEK = Temporary Exposure Key
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseTekUploadView.tsx:43:  const getTranslationKey = (error: any) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseTekUploadView.tsx:58:      const translationKey = getTranslationKey(error);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseTekUploadView.tsx:59:      Alert.alert(i18n.translate(`Errors.${translationKey}.Title`), i18n.translate(`Errors.${translationKey}.Body`), [
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseTekUploadView.tsx:79:      await fetchAndSubmitKeys(contagiousDateInfo);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/BaseTekUploadView.tsx:95:  }, [contagiousDateInfo, exposureHistory, fetchAndSubmitKeys, onError, onSuccess, setIsUploading]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/DatePicker.tsx:65:        <Picker.Item key={x.value} label={x.label} value={x.value} />
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/components/DatePicker.tsx:102:  const labelDict: {[key: string]: string} = {'': ''};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/FormScreen.tsx:28:  const getTranslationKey = (error: any) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/FormScreen.tsx:31:      case covidshield.KeyClaimResponse.ErrorCode.INVALID_ONE_TIME_CODE:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/FormScreen.tsx:33:      case covidshield.KeyClaimResponse.ErrorCode.TEMPORARY_BAN:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/FormScreen.tsx:43:      const translationKey = getTranslationKey(error);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/FormScreen.tsx:44:      Alert.alert(i18n.translate(`Errors.${translationKey}.Title`), i18n.translate(`Errors.${translationKey}.Body`), [
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/Step2Screen.tsx:35:            key={i18n.translate('DataUpload.Step2.Symptoms.1')}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/Step2Screen.tsx:40:            key={i18n.translate('DataUpload.Step2.Symptoms.2')}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/Step2Screen.tsx:45:            key={i18n.translate('DataUpload.Step2.Symptoms.3')}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/Step2Screen.tsx:50:            key={i18n.translate('DataUpload.Step2.Symptoms.4')}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/Step2Screen.tsx:55:            key={i18n.translate('DataUpload.Step2.Symptoms.5')}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/datasharing/Step2Screen.tsx:60:            key={i18n.translate('DataUpload.Step2.Symptoms.6')}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/home/views/DiagnosedView.tsx:6:import {pluralizeKey} from 'shared/pluralization';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/home/views/DiagnosedView.tsx:48:              {i18n.translate(pluralizeKey('Home.DiagnosedView.Body1', daysLeft), {number: daysLeft})}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/home/views/ExposureDateView.tsx:37:          <Text fontWeight={index === 0 ? 'bold' : 'normal'} key={date}>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/home/views/OverlayView.tsx:15:import {pluralizeKey} from 'shared/pluralization';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/home/views/OverlayView.tsx:154:      bodyText += i18n.translate(pluralizeKey('OverlayOpen.EnterCodeCardDiagnosedCountdown', daysLeft), {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/nocode/views/ActiveListView.tsx:55:          key={item.text}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/nocode/views/RegionNotCoveredView.tsx:28:        <BulletPoint key={item.text} listAccessibile={item.listAccessibile} text={item.text} />
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/Onboarding.tsx:14:import {OnboardingContent, onboardingData, OnboardingKey} from './OnboardingContent';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/Onboarding.tsx:19:  const carouselRef = useRef<Carousel<OnboardingKey>>(null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/Onboarding.tsx:29:  const renderItem: ListRenderItem<OnboardingKey> = useCallback(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/Onboarding.tsx:33:          <OnboardingContent key={item} item={item} isActive={index === currentStepForRenderItem} />
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/OnboardingContent.tsx:15:export type OnboardingKey = 'step-1' | 'step-2' | 'step-3' | 'step-4' | 'step-5' | 'step-6';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/OnboardingContent.tsx:17:export const onboardingData: OnboardingKey[] = ['step-1', 'step-2', 'step-3', 'step-4', 'step-5', 'step-6'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/OnboardingContent.tsx:19:const viewComponents: {[key in OnboardingKey]: React.ComponentType<Pick<ItemViewProps, 'isActive'>>} = {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/OnboardingContent.tsx:29:  item: OnboardingKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/views/ItemView.tsx:7:import {onboardingData, OnboardingKey} from '../OnboardingContent';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/views/ItemView.tsx:10:  item: OnboardingKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/onboarding/views/Region.tsx:32:                key={item.code}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/qr/CheckInHistoryScreen.tsx:16:          <Box marginBottom="l" key={checkIn.id.concat(index.toString())}>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/qr/utils.ts:10:import {QR_HOST, QR_CODE_PUBLIC_KEY} from 'env';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/qr/utils.ts:31:    const data = nacl.sign.open(base64ToUint8Array(base64Str), base64ToUint8Array(QR_CODE_PUBLIC_KEY));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/regionPicker/RegionPickerExposedNoPT.tsx:85:                    key={item.code}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/regionPicker/RegionPickerSettings.tsx:58:                    key={item.code}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockBackend.ts:1:import {TemporaryExposureKey} from 'bridge/ExposureNotification';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockBackend.ts:2:import {BackendInterface, SubmissionKeySet} from 'services/BackendService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockBackend.ts:28:      clientPrivateKey: 'clientPrivateKey',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockBackend.ts:29:      clientPublicKey: 'clientPublicKey',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockBackend.ts:30:      serverPublicKey: 'serverPublicKey',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockBackend.ts:34:  reportDiagnosisKeys = async (_submissionKeyPair: SubmissionKeySet, _keys: TemporaryExposureKey[]) => {};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockBackend.ts:36:  retrieveDiagnosisKeys = async (_period: number) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockExposureNotification.ts:8:    matchedKeyCount: 0,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockExposureNotification.ts:19:  getTemporaryExposureKeyHistory = async () => [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockExposureNotification.ts:34:  provideDiagnosisKeys = async () => undefined;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/MockExposureNotification.ts:36:  setDiagnosisKeysDataMapping = async () => {};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/TestScreen.tsx:58:            key={x.displayName}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/TestScreen.tsx:89:            key={x.displayName}
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/TestScreen.tsx:142:  const {fetchAndSubmitKeys} = useReportDiagnosis();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/TestScreen.tsx:219:          text="Force upload keys"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/TestScreen.tsx:222:            captureMessage('Force upload keys');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/testScreen/TestScreen.tsx:223:            fetchAndSubmitKeys({dateType: ContagiousDateType.None, date: null});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/Tutorial.tsx:10:import {TutorialContent, tutorialData, TutorialKey} from './TutorialContent';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/Tutorial.tsx:15:  const carouselRef = useRef<Carousel<TutorialKey>>(null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/Tutorial.tsx:26:  const renderItem: ListRenderItem<TutorialKey> = useCallback(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/Tutorial.tsx:30:          <TutorialContent key={item} item={item} isActive={index === currentStepForRenderItem} />
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/TutorialContent.tsx:12:export type TutorialKey = 'step-1' | 'step-2' | 'step-3' | 'step-4';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/TutorialContent.tsx:14:export const tutorialData: TutorialKey[] = ['step-1', 'step-2', 'step-3', 'step-4'];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/TutorialContent.tsx:16:const viewComponents: {[key in TutorialKey]: React.ComponentType<Pick<ItemViewProps, 'isActive'>>} = {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/TutorialContent.tsx:24:  item: TutorialKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/views/ItemView.tsx:7:import {TutorialKey} from '../TutorialContent';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/screens/tutorial/views/ItemView.tsx:10:  item: TutorialKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:13:import {getRandomBytes, downloadDiagnosisKeysFile} from '../../bridge/CovidShield';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:14:import {TemporaryExposureKey} from '../../bridge/ExposureNotification';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:35:    TemporaryExposureKey: {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:46:    KeyClaimRequest: {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:53:    KeyClaimResponse: {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:61:  downloadDiagnosisKeysFile: jest.fn(),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:100:function generateRandomKeys(numberOfKeys: number) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:101:  const keys: TemporaryExposureKey[] = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:104:  for (let i = 0; i < numberOfKeys; i++) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:105:    keys.push({
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:106:      keyData: crypto.randomBytes(16).toString('hex'),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:112:  return keys;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:123:  describe('reportDiagnosisKeys', () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:124:    it('returns last 28 keys if there is more than 28', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:126:      const keys = generateRandomKeys(30);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:127:      await backendService.reportDiagnosisKeys(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:129:          clientPrivateKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:130:          clientPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:131:          serverPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:133:        keys,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:139:          keys: expect.toHaveLength(28),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:142:      keys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:147:          expect(covidshield.TemporaryExposureKey.create).toHaveBeenCalledWith(expect.objectContaining(value));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:153:      const keys = generateRandomKeys(20);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:154:      const submissionKeys = {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:155:        clientPrivateKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:156:        clientPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:157:        serverPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:162:        backendService.reportDiagnosisKeys(submissionKeys, keys, {dateType: ContagiousDateType.None, date: null}),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:168:      const keys = generateRandomKeys(20);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:180:        backendService.reportDiagnosisKeys(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:182:            clientPrivateKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:183:            clientPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:184:            serverPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:186:          keys,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:194:      const keys = generateRandomKeys(20);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:204:        backendService.reportDiagnosisKeys(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:206:            clientPrivateKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:207:            clientPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:208:            serverPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:210:          keys,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:216:    it('returns last 3 keys if symptom onset is today, saves last  uploaded TEK start time', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:218:      const keys = generateRandomKeys(30);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:219:      await backendService.reportDiagnosisKeys(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:221:          clientPrivateKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:222:          clientPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:223:          serverPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:225:        keys,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:231:          keys: expect.toHaveLength(3),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:234:      const sortedKeys = keys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:238:      sortedKeys.forEach(value => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:239:        expect(covidshield.TemporaryExposureKey.create).toHaveBeenCalledWith(expect.objectContaining(value));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:244:        sortedKeys[0].rollingStartIntervalNumber.toString(),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:250:      const keys = generateRandomKeys(10);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:251:      AsyncStorage.getItem.mockReturnValueOnce(keys[1].rollingStartIntervalNumber.toString());
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:253:      await backendService.reportDiagnosisKeys(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:255:          clientPrivateKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:256:          clientPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:257:          serverPublicKey: 'mock',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:259:        keys,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:264:          keys: expect.toHaveLength(1),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:270:        keys[0].rollingStartIntervalNumber.toString(),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:275:  describe('retrieveDiagnosisKeys', () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:286:    it('returns keys file for set period', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:289:      await backendService.retrieveDiagnosisKeys(18457);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:291:      expect(downloadDiagnosisKeysFile).toHaveBeenCalledWith(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:296:    it('returns keys file for 14 days if period is 0', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:299:      await backendService.retrieveDiagnosisKeys(0);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:301:      expect(downloadDiagnosisKeysFile).toHaveBeenCalledWith(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:313:      nacl.box.keyPair = () => ({publicKey: bytes, secretKey: bytes});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:314:      covidshield.KeyClaimResponse.decode.mockImplementation(() => ({
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:315:        serverPublicKey: Uint8Array.from('QUJD'),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:319:    it('returns a valid submission key set if called with valid one time code', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:320:      const keys = await backendService.claimOneTimeCode('MYSECRETCODE');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:321:      expect(keys).not.toBeNull();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:322:      expect(keys.serverPublicKey).toBeDefined();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:336:      covidshield.KeyClaimResponse.decode.mockImplementation(() => ({error: new Error('1')}));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:346:      covidshield.KeyClaimResponse.decode.mockImplementation(() => ({}));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:435:      const key = 'http://localhost/exposure-configuration/region.json';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:439:      expect(AsyncStorage.getItem).toHaveBeenCalledWith(key);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:501:      const exposureKeys = generateRandomKeys(10);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:502:      const filteredKeys = exposureKeys.filter(backendService.filterNonContagiousTEKs(contagiousDateInfo));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:503:      expect(filteredKeys).toStrictEqual(exposureKeys);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:513:      const exposureKeys = generateRandomKeys(10);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:514:      const filteredKeys = exposureKeys.filter(backendService.filterNonContagiousTEKs(contagiousDateInfo));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:515:      expect(filteredKeys).toHaveLength(5);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:525:      const exposureKeys = generateRandomKeys(14);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:526:      const filteredKeys = exposureKeys.filter(backendService.filterNonContagiousTEKs(contagiousDateInfo));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.spec.ts:528:      expect(filteredKeys).toHaveLength(4);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:5:import {ExposureConfiguration, TemporaryExposureKey} from 'bridge/ExposureNotification';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:7:import {getRandomBytes, downloadDiagnosisKeysFile} from 'bridge/CovidShield';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:22:import {BackendInterface, SubmissionKeySet} from './types';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:24:const MAX_UPLOAD_KEYS = 28;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:39:  hmacKey: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:45:    hmacKey: string,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:50:    this.hmacKey = hmacKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:54:  async retrieveDiagnosisKeys(period: number) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:57:    const hmac = hmac256(message, encHex.parse(this.hmacKey)).toString(encHex);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:59:    return downloadDiagnosisKeysFile(url);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:112:  async claimOneTimeCode(oneTimeCode: string): Promise<SubmissionKeySet> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:123:    const keyPair = nacl.box.keyPair();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:125:    const keyClaimResponse = await this.keyClaim(oneTimeCode, keyPair);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:127:    const serverPublicKey = Buffer.from(keyClaimResponse.serverPublicKey).toString('base64');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:128:    const clientPrivateKey = Buffer.from(keyPair.secretKey).toString('base64');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:129:    const clientPublicKey = Buffer.from(keyPair.publicKey).toString('base64');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:132:      serverPublicKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:133:      clientPrivateKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:134:      clientPublicKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:139:    return (key: TemporaryExposureKey) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:141:      // rollingStartIntervalNumber = A number describing when a key starts. It is equal to
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:142:      // startTimeOfKeySinceEpochInSecs / (60 * 10).
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:143:      // rollingPeriod = A number describing how long a key is valid. It is expressed in
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:145:      // source: https://developers.google.com/android/reference/com/google/android/gms/nearby/exposurenotification/TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:157:      const rollingEndIntervalNumber = key.rollingStartIntervalNumber + key.rollingPeriod;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:167:  saveLastUploadedTekStartTime = async (uploadedTEKs: TemporaryExposureKey[]) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:177:    return (key: TemporaryExposureKey) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:181:      if (key.rollingStartIntervalNumber > lastUploadedTekStartTime) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:188:  async reportDiagnosisKeys(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:189:    keyPair: SubmissionKeySet,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:190:    _exposureKeys: TemporaryExposureKey[],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:194:    const filteredExposureKeys = Object.values(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:195:      _exposureKeys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:200:    const exposureKeys = filteredExposureKeys.slice(0, MAX_UPLOAD_KEYS);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:201:    captureMessage('keyPair', {keyPair});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:202:    captureMessage('unfiltered exposureKeys', {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:203:      unfilteredExposureKeys: _exposureKeys.map(x => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:209:    captureMessage('filtered exposureKeys', {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:210:      filteredExposureKeys: exposureKeys.map(x => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:219:      keys: exposureKeys.map(key =>
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:220:        covidshield.TemporaryExposureKey.create({
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:221:          keyData: Buffer.from(key.keyData, 'base64'),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:223:          rollingStartIntervalNumber: key.rollingStartIntervalNumber,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:224:          rollingPeriod: key.rollingPeriod,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:231:    const clientPrivate = Buffer.from(keyPair.clientPrivateKey, 'base64');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:232:    const serverPublicKey = Buffer.from(keyPair.serverPublicKey, 'base64');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:233:    const clientPublicKey = Buffer.from(keyPair.clientPublicKey, 'base64');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:242:    const encryptedPayload = nacl.box(serializedUpload, nonce, serverPublicKey, clientPrivate);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:244:    await this.upload(encryptedPayload, nonce, serverPublicKey, clientPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:245:    await this.saveLastUploadedTekStartTime(exposureKeys);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:248:  private async keyClaim(code: string, keyPair: nacl.BoxKeyPair): Promise<covidshield.KeyClaimResponse> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:249:    const uploadPayload = covidshield.KeyClaimRequest.create({
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:251:      appPublicKey: keyPair.publicKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:254:    const body = covidshield.KeyClaimRequest.encode(uploadPayload).finish();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:255:    const response = await blobFetch(`${this.submitUrl}/claim-key`, 'POST', body);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:256:    const keyClaimResponse = covidshield.KeyClaimResponse.decode(Buffer.from(response.buffer));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:258:      if (keyClaimResponse && keyClaimResponse.error) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:259:        throw keyClaimResponse.error;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:263:    return keyClaimResponse;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:269:    serverPublicKey: Uint8Array,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:270:    appPublicKey: Uint8Array,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:273:      serverPublicKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/BackendService.ts:274:      appPublicKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:5:    /** Properties of a KeyClaimRequest. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:6:    interface IKeyClaimRequest {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:8:        /** KeyClaimRequest oneTimeCode */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:11:        /** KeyClaimRequest appPublicKey */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:12:        appPublicKey?: (Uint8Array|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:15:    /** Represents a KeyClaimRequest. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:16:    class KeyClaimRequest implements IKeyClaimRequest {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:19:         * Constructs a new KeyClaimRequest.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:22:        constructor(properties?: covidshield.IKeyClaimRequest);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:24:        /** KeyClaimRequest oneTimeCode. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:27:        /** KeyClaimRequest appPublicKey. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:28:        public appPublicKey: Uint8Array;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:31:         * Creates a new KeyClaimRequest instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:33:         * @returns KeyClaimRequest instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:35:        public static create(properties?: covidshield.IKeyClaimRequest): covidshield.KeyClaimRequest;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:38:         * Encodes the specified KeyClaimRequest message. Does not implicitly {@link covidshield.KeyClaimRequest.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:39:         * @param message KeyClaimRequest message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:43:        public static encode(message: covidshield.IKeyClaimRequest, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:46:         * Encodes the specified KeyClaimRequest message, length delimited. Does not implicitly {@link covidshield.KeyClaimRequest.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:47:         * @param message KeyClaimRequest message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:51:        public static encodeDelimited(message: covidshield.IKeyClaimRequest, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:54:         * Decodes a KeyClaimRequest message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:57:         * @returns KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:61:        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): covidshield.KeyClaimRequest;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:64:         * Decodes a KeyClaimRequest message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:66:         * @returns KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:70:        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): covidshield.KeyClaimRequest;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:73:         * Verifies a KeyClaimRequest message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:80:         * Creates a KeyClaimRequest message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:82:         * @returns KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:84:        public static fromObject(object: { [k: string]: any }): covidshield.KeyClaimRequest;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:87:         * Creates a plain object from a KeyClaimRequest message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:88:         * @param message KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:92:        public static toObject(message: covidshield.KeyClaimRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:95:         * Converts this KeyClaimRequest to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:101:    /** Properties of a KeyClaimResponse. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:102:    interface IKeyClaimResponse {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:104:        /** KeyClaimResponse error */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:105:        error?: (covidshield.KeyClaimResponse.ErrorCode|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:107:        /** KeyClaimResponse serverPublicKey */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:108:        serverPublicKey?: (Uint8Array|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:110:        /** KeyClaimResponse triesRemaining */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:113:        /** KeyClaimResponse remainingBanDuration */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:117:    /** Represents a KeyClaimResponse. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:118:    class KeyClaimResponse implements IKeyClaimResponse {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:121:         * Constructs a new KeyClaimResponse.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:124:        constructor(properties?: covidshield.IKeyClaimResponse);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:126:        /** KeyClaimResponse error. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:127:        public error: covidshield.KeyClaimResponse.ErrorCode;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:129:        /** KeyClaimResponse serverPublicKey. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:130:        public serverPublicKey: Uint8Array;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:132:        /** KeyClaimResponse triesRemaining. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:135:        /** KeyClaimResponse remainingBanDuration. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:139:         * Creates a new KeyClaimResponse instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:141:         * @returns KeyClaimResponse instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:143:        public static create(properties?: covidshield.IKeyClaimResponse): covidshield.KeyClaimResponse;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:146:         * Encodes the specified KeyClaimResponse message. Does not implicitly {@link covidshield.KeyClaimResponse.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:147:         * @param message KeyClaimResponse message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:151:        public static encode(message: covidshield.IKeyClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:154:         * Encodes the specified KeyClaimResponse message, length delimited. Does not implicitly {@link covidshield.KeyClaimResponse.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:155:         * @param message KeyClaimResponse message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:159:        public static encodeDelimited(message: covidshield.IKeyClaimResponse, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:162:         * Decodes a KeyClaimResponse message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:165:         * @returns KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:169:        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): covidshield.KeyClaimResponse;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:172:         * Decodes a KeyClaimResponse message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:174:         * @returns KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:178:        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): covidshield.KeyClaimResponse;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:181:         * Verifies a KeyClaimResponse message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:188:         * Creates a KeyClaimResponse message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:190:         * @returns KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:192:        public static fromObject(object: { [k: string]: any }): covidshield.KeyClaimResponse;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:195:         * Creates a plain object from a KeyClaimResponse message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:196:         * @param message KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:200:        public static toObject(message: covidshield.KeyClaimResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:203:         * Converts this KeyClaimResponse to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:209:    namespace KeyClaimResponse {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:217:            INVALID_KEY = 4,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:225:        /** EncryptedUploadRequest serverPublicKey */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:226:        serverPublicKey?: (Uint8Array|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:228:        /** EncryptedUploadRequest appPublicKey */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:229:        appPublicKey?: (Uint8Array|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:247:        /** EncryptedUploadRequest serverPublicKey. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:248:        public serverPublicKey: Uint8Array;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:250:        /** EncryptedUploadRequest appPublicKey. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:251:        public appPublicKey: Uint8Array;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:426:            INVALID_KEYPAIR = 2,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:431:            TOO_MANY_KEYS = 7,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:434:            INVALID_KEY_DATA = 11,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:437:            NO_KEYS_IN_PAYLOAD = 14
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:447:        /** Upload keys */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:448:        keys?: (covidshield.ITemporaryExposureKey[]|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:463:        /** Upload keys. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:464:        public keys: covidshield.ITemporaryExposureKey[];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:537:    /** Properties of a TemporaryExposureKeyExport. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:538:    interface ITemporaryExposureKeyExport {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:540:        /** TemporaryExposureKeyExport startTimestamp */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:543:        /** TemporaryExposureKeyExport endTimestamp */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:546:        /** TemporaryExposureKeyExport region */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:549:        /** TemporaryExposureKeyExport batchNum */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:552:        /** TemporaryExposureKeyExport batchSize */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:555:        /** TemporaryExposureKeyExport signatureInfos */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:558:        /** TemporaryExposureKeyExport keys */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:559:        keys?: (covidshield.ITemporaryExposureKey[]|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:561:        /** TemporaryExposureKeyExport revisedKeys */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:562:        revisedKeys?: (covidshield.ITemporaryExposureKey[]|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:565:    /** Represents a TemporaryExposureKeyExport. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:566:    class TemporaryExposureKeyExport implements ITemporaryExposureKeyExport {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:569:         * Constructs a new TemporaryExposureKeyExport.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:572:        constructor(properties?: covidshield.ITemporaryExposureKeyExport);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:574:        /** TemporaryExposureKeyExport startTimestamp. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:577:        /** TemporaryExposureKeyExport endTimestamp. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:580:        /** TemporaryExposureKeyExport region. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:583:        /** TemporaryExposureKeyExport batchNum. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:586:        /** TemporaryExposureKeyExport batchSize. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:589:        /** TemporaryExposureKeyExport signatureInfos. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:592:        /** TemporaryExposureKeyExport keys. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:593:        public keys: covidshield.ITemporaryExposureKey[];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:595:        /** TemporaryExposureKeyExport revisedKeys. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:596:        public revisedKeys: covidshield.ITemporaryExposureKey[];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:599:         * Creates a new TemporaryExposureKeyExport instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:601:         * @returns TemporaryExposureKeyExport instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:603:        public static create(properties?: covidshield.ITemporaryExposureKeyExport): covidshield.TemporaryExposureKeyExport;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:606:         * Encodes the specified TemporaryExposureKeyExport message. Does not implicitly {@link covidshield.TemporaryExposureKeyExport.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:607:         * @param message TemporaryExposureKeyExport message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:611:        public static encode(message: covidshield.ITemporaryExposureKeyExport, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:614:         * Encodes the specified TemporaryExposureKeyExport message, length delimited. Does not implicitly {@link covidshield.TemporaryExposureKeyExport.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:615:         * @param message TemporaryExposureKeyExport message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:619:        public static encodeDelimited(message: covidshield.ITemporaryExposureKeyExport, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:622:         * Decodes a TemporaryExposureKeyExport message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:625:         * @returns TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:629:        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): covidshield.TemporaryExposureKeyExport;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:632:         * Decodes a TemporaryExposureKeyExport message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:634:         * @returns TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:638:        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): covidshield.TemporaryExposureKeyExport;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:641:         * Verifies a TemporaryExposureKeyExport message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:648:         * Creates a TemporaryExposureKeyExport message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:650:         * @returns TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:652:        public static fromObject(object: { [k: string]: any }): covidshield.TemporaryExposureKeyExport;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:655:         * Creates a plain object from a TemporaryExposureKeyExport message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:656:         * @param message TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:660:        public static toObject(message: covidshield.TemporaryExposureKeyExport, options?: $protobuf.IConversionOptions): { [k: string]: any };
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:663:         * Converts this TemporaryExposureKeyExport to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:672:        /** SignatureInfo verificationKeyVersion */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:673:        verificationKeyVersion?: (string|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:675:        /** SignatureInfo verificationKeyId */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:676:        verificationKeyId?: (string|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:691:        /** SignatureInfo verificationKeyVersion. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:692:        public verificationKeyVersion: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:694:        /** SignatureInfo verificationKeyId. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:695:        public verificationKeyId: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:771:    /** Properties of a TemporaryExposureKey. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:772:    interface ITemporaryExposureKey {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:774:        /** TemporaryExposureKey keyData */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:775:        keyData?: (Uint8Array|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:777:        /** TemporaryExposureKey transmissionRiskLevel */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:780:        /** TemporaryExposureKey rollingStartIntervalNumber */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:783:        /** TemporaryExposureKey rollingPeriod */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:786:        /** TemporaryExposureKey reportType */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:787:        reportType?: (covidshield.TemporaryExposureKey.ReportType|null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:789:        /** TemporaryExposureKey daysSinceOnsetOfSymptoms */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:793:    /** Represents a TemporaryExposureKey. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:794:    class TemporaryExposureKey implements ITemporaryExposureKey {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:797:         * Constructs a new TemporaryExposureKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:800:        constructor(properties?: covidshield.ITemporaryExposureKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:802:        /** TemporaryExposureKey keyData. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:803:        public keyData: Uint8Array;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:805:        /** TemporaryExposureKey transmissionRiskLevel. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:808:        /** TemporaryExposureKey rollingStartIntervalNumber. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:811:        /** TemporaryExposureKey rollingPeriod. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:814:        /** TemporaryExposureKey reportType. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:815:        public reportType: covidshield.TemporaryExposureKey.ReportType;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:817:        /** TemporaryExposureKey daysSinceOnsetOfSymptoms. */
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:821:         * Creates a new TemporaryExposureKey instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:823:         * @returns TemporaryExposureKey instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:825:        public static create(properties?: covidshield.ITemporaryExposureKey): covidshield.TemporaryExposureKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:828:         * Encodes the specified TemporaryExposureKey message. Does not implicitly {@link covidshield.TemporaryExposureKey.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:829:         * @param message TemporaryExposureKey message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:833:        public static encode(message: covidshield.ITemporaryExposureKey, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:836:         * Encodes the specified TemporaryExposureKey message, length delimited. Does not implicitly {@link covidshield.TemporaryExposureKey.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:837:         * @param message TemporaryExposureKey message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:841:        public static encodeDelimited(message: covidshield.ITemporaryExposureKey, writer?: $protobuf.Writer): $protobuf.Writer;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:844:         * Decodes a TemporaryExposureKey message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:847:         * @returns TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:851:        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): covidshield.TemporaryExposureKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:854:         * Decodes a TemporaryExposureKey message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:856:         * @returns TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:860:        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): covidshield.TemporaryExposureKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:863:         * Verifies a TemporaryExposureKey message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:870:         * Creates a TemporaryExposureKey message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:872:         * @returns TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:874:        public static fromObject(object: { [k: string]: any }): covidshield.TemporaryExposureKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:877:         * Creates a plain object from a TemporaryExposureKey message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:878:         * @param message TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:882:        public static toObject(message: covidshield.TemporaryExposureKey, options?: $protobuf.IConversionOptions): { [k: string]: any };
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:885:         * Converts this TemporaryExposureKey to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.d.ts:891:    namespace TemporaryExposureKey {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:28:        covidshield.KeyClaimRequest = (function() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:31:             * Properties of a KeyClaimRequest.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:33:             * @interface IKeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:34:             * @property {string|null} [oneTimeCode] KeyClaimRequest oneTimeCode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:35:             * @property {Uint8Array|null} [appPublicKey] KeyClaimRequest appPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:39:             * Constructs a new KeyClaimRequest.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:41:             * @classdesc Represents a KeyClaimRequest.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:42:             * @implements IKeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:44:             * @param {covidshield.IKeyClaimRequest=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:46:            function KeyClaimRequest(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:48:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:49:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:50:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:54:             * KeyClaimRequest oneTimeCode.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:56:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:59:            KeyClaimRequest.prototype.oneTimeCode = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:62:             * KeyClaimRequest appPublicKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:63:             * @member {Uint8Array} appPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:64:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:67:            KeyClaimRequest.prototype.appPublicKey = $util.newBuffer([]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:70:             * Creates a new KeyClaimRequest instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:72:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:74:             * @param {covidshield.IKeyClaimRequest=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:75:             * @returns {covidshield.KeyClaimRequest} KeyClaimRequest instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:77:            KeyClaimRequest.create = function create(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:78:                return new KeyClaimRequest(properties);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:82:             * Encodes the specified KeyClaimRequest message. Does not implicitly {@link covidshield.KeyClaimRequest.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:84:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:86:             * @param {covidshield.IKeyClaimRequest} message KeyClaimRequest message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:90:            KeyClaimRequest.encode = function encode(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:95:                if (message.appPublicKey != null && Object.hasOwnProperty.call(message, "appPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:96:                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.appPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:101:             * Encodes the specified KeyClaimRequest message, length delimited. Does not implicitly {@link covidshield.KeyClaimRequest.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:103:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:105:             * @param {covidshield.IKeyClaimRequest} message KeyClaimRequest message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:109:            KeyClaimRequest.encodeDelimited = function encodeDelimited(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:114:             * Decodes a KeyClaimRequest message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:116:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:120:             * @returns {covidshield.KeyClaimRequest} KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:124:            KeyClaimRequest.decode = function decode(reader, length) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:127:                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.covidshield.KeyClaimRequest();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:135:                        message.appPublicKey = reader.bytes();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:146:             * Decodes a KeyClaimRequest message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:148:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:151:             * @returns {covidshield.KeyClaimRequest} KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:155:            KeyClaimRequest.decodeDelimited = function decodeDelimited(reader) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:162:             * Verifies a KeyClaimRequest message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:164:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:169:            KeyClaimRequest.verify = function verify(message) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:175:                if (message.appPublicKey != null && message.hasOwnProperty("appPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:176:                    if (!(message.appPublicKey && typeof message.appPublicKey.length === "number" || $util.isString(message.appPublicKey)))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:177:                        return "appPublicKey: buffer expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:182:             * Creates a KeyClaimRequest message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:184:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:187:             * @returns {covidshield.KeyClaimRequest} KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:189:            KeyClaimRequest.fromObject = function fromObject(object) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:190:                if (object instanceof $root.covidshield.KeyClaimRequest)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:192:                var message = new $root.covidshield.KeyClaimRequest();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:195:                if (object.appPublicKey != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:196:                    if (typeof object.appPublicKey === "string")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:197:                        $util.base64.decode(object.appPublicKey, message.appPublicKey = $util.newBuffer($util.base64.length(object.appPublicKey)), 0);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:198:                    else if (object.appPublicKey.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:199:                        message.appPublicKey = object.appPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:204:             * Creates a plain object from a KeyClaimRequest message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:206:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:208:             * @param {covidshield.KeyClaimRequest} message KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:212:            KeyClaimRequest.toObject = function toObject(message, options) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:219:                        object.appPublicKey = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:221:                        object.appPublicKey = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:223:                            object.appPublicKey = $util.newBuffer(object.appPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:228:                if (message.appPublicKey != null && message.hasOwnProperty("appPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:229:                    object.appPublicKey = options.bytes === String ? $util.base64.encode(message.appPublicKey, 0, message.appPublicKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.appPublicKey) : message.appPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:234:             * Converts this KeyClaimRequest to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:236:             * @memberof covidshield.KeyClaimRequest
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:240:            KeyClaimRequest.prototype.toJSON = function toJSON() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:244:            return KeyClaimRequest;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:247:        covidshield.KeyClaimResponse = (function() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:250:             * Properties of a KeyClaimResponse.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:252:             * @interface IKeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:253:             * @property {covidshield.KeyClaimResponse.ErrorCode|null} [error] KeyClaimResponse error
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:254:             * @property {Uint8Array|null} [serverPublicKey] KeyClaimResponse serverPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:255:             * @property {number|null} [triesRemaining] KeyClaimResponse triesRemaining
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:256:             * @property {google.protobuf.IDuration|null} [remainingBanDuration] KeyClaimResponse remainingBanDuration
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:260:             * Constructs a new KeyClaimResponse.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:262:             * @classdesc Represents a KeyClaimResponse.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:263:             * @implements IKeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:265:             * @param {covidshield.IKeyClaimResponse=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:267:            function KeyClaimResponse(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:269:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:270:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:271:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:275:             * KeyClaimResponse error.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:276:             * @member {covidshield.KeyClaimResponse.ErrorCode} error
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:277:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:280:            KeyClaimResponse.prototype.error = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:283:             * KeyClaimResponse serverPublicKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:284:             * @member {Uint8Array} serverPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:285:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:288:            KeyClaimResponse.prototype.serverPublicKey = $util.newBuffer([]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:291:             * KeyClaimResponse triesRemaining.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:293:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:296:            KeyClaimResponse.prototype.triesRemaining = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:299:             * KeyClaimResponse remainingBanDuration.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:301:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:304:            KeyClaimResponse.prototype.remainingBanDuration = null;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:307:             * Creates a new KeyClaimResponse instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:309:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:311:             * @param {covidshield.IKeyClaimResponse=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:312:             * @returns {covidshield.KeyClaimResponse} KeyClaimResponse instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:314:            KeyClaimResponse.create = function create(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:315:                return new KeyClaimResponse(properties);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:319:             * Encodes the specified KeyClaimResponse message. Does not implicitly {@link covidshield.KeyClaimResponse.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:321:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:323:             * @param {covidshield.IKeyClaimResponse} message KeyClaimResponse message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:327:            KeyClaimResponse.encode = function encode(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:332:                if (message.serverPublicKey != null && Object.hasOwnProperty.call(message, "serverPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:333:                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.serverPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:342:             * Encodes the specified KeyClaimResponse message, length delimited. Does not implicitly {@link covidshield.KeyClaimResponse.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:344:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:346:             * @param {covidshield.IKeyClaimResponse} message KeyClaimResponse message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:350:            KeyClaimResponse.encodeDelimited = function encodeDelimited(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:355:             * Decodes a KeyClaimResponse message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:357:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:361:             * @returns {covidshield.KeyClaimResponse} KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:365:            KeyClaimResponse.decode = function decode(reader, length) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:368:                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.covidshield.KeyClaimResponse();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:376:                        message.serverPublicKey = reader.bytes();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:393:             * Decodes a KeyClaimResponse message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:395:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:398:             * @returns {covidshield.KeyClaimResponse} KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:402:            KeyClaimResponse.decodeDelimited = function decodeDelimited(reader) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:409:             * Verifies a KeyClaimResponse message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:411:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:416:            KeyClaimResponse.verify = function verify(message) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:431:                if (message.serverPublicKey != null && message.hasOwnProperty("serverPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:432:                    if (!(message.serverPublicKey && typeof message.serverPublicKey.length === "number" || $util.isString(message.serverPublicKey)))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:433:                        return "serverPublicKey: buffer expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:446:             * Creates a KeyClaimResponse message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:448:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:451:             * @returns {covidshield.KeyClaimResponse} KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:453:            KeyClaimResponse.fromObject = function fromObject(object) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:454:                if (object instanceof $root.covidshield.KeyClaimResponse)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:456:                var message = new $root.covidshield.KeyClaimResponse();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:474:                case "INVALID_KEY":
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:483:                if (object.serverPublicKey != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:484:                    if (typeof object.serverPublicKey === "string")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:485:                        $util.base64.decode(object.serverPublicKey, message.serverPublicKey = $util.newBuffer($util.base64.length(object.serverPublicKey)), 0);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:486:                    else if (object.serverPublicKey.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:487:                        message.serverPublicKey = object.serverPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:492:                        throw TypeError(".covidshield.KeyClaimResponse.remainingBanDuration: object expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:499:             * Creates a plain object from a KeyClaimResponse message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:501:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:503:             * @param {covidshield.KeyClaimResponse} message KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:507:            KeyClaimResponse.toObject = function toObject(message, options) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:514:                        object.serverPublicKey = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:516:                        object.serverPublicKey = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:518:                            object.serverPublicKey = $util.newBuffer(object.serverPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:524:                    object.error = options.enums === String ? $root.covidshield.KeyClaimResponse.ErrorCode[message.error] : message.error;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:525:                if (message.serverPublicKey != null && message.hasOwnProperty("serverPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:526:                    object.serverPublicKey = options.bytes === String ? $util.base64.encode(message.serverPublicKey, 0, message.serverPublicKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.serverPublicKey) : message.serverPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:535:             * Converts this KeyClaimResponse to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:537:             * @memberof covidshield.KeyClaimResponse
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:541:            KeyClaimResponse.prototype.toJSON = function toJSON() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:547:             * @name covidshield.KeyClaimResponse.ErrorCode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:553:             * @property {number} INVALID_KEY=4 INVALID_KEY value
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:556:            KeyClaimResponse.ErrorCode = (function() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:562:                values[valuesById[4] = "INVALID_KEY"] = 4;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:567:            return KeyClaimResponse;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:576:             * @property {Uint8Array|null} [serverPublicKey] EncryptedUploadRequest serverPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:577:             * @property {Uint8Array|null} [appPublicKey] EncryptedUploadRequest appPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:592:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:593:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:594:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:598:             * EncryptedUploadRequest serverPublicKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:599:             * @member {Uint8Array} serverPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:603:            EncryptedUploadRequest.prototype.serverPublicKey = $util.newBuffer([]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:606:             * EncryptedUploadRequest appPublicKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:607:             * @member {Uint8Array} appPublicKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:611:            EncryptedUploadRequest.prototype.appPublicKey = $util.newBuffer([]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:653:                if (message.serverPublicKey != null && Object.hasOwnProperty.call(message, "serverPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:654:                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.serverPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:655:                if (message.appPublicKey != null && Object.hasOwnProperty.call(message, "appPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:656:                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.appPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:696:                        message.serverPublicKey = reader.bytes();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:699:                        message.appPublicKey = reader.bytes();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:742:                if (message.serverPublicKey != null && message.hasOwnProperty("serverPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:743:                    if (!(message.serverPublicKey && typeof message.serverPublicKey.length === "number" || $util.isString(message.serverPublicKey)))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:744:                        return "serverPublicKey: buffer expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:745:                if (message.appPublicKey != null && message.hasOwnProperty("appPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:746:                    if (!(message.appPublicKey && typeof message.appPublicKey.length === "number" || $util.isString(message.appPublicKey)))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:747:                        return "appPublicKey: buffer expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:769:                if (object.serverPublicKey != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:770:                    if (typeof object.serverPublicKey === "string")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:771:                        $util.base64.decode(object.serverPublicKey, message.serverPublicKey = $util.newBuffer($util.base64.length(object.serverPublicKey)), 0);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:772:                    else if (object.serverPublicKey.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:773:                        message.serverPublicKey = object.serverPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:774:                if (object.appPublicKey != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:775:                    if (typeof object.appPublicKey === "string")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:776:                        $util.base64.decode(object.appPublicKey, message.appPublicKey = $util.newBuffer($util.base64.length(object.appPublicKey)), 0);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:777:                    else if (object.appPublicKey.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:778:                        message.appPublicKey = object.appPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:807:                        object.serverPublicKey = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:809:                        object.serverPublicKey = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:811:                            object.serverPublicKey = $util.newBuffer(object.serverPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:814:                        object.appPublicKey = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:816:                        object.appPublicKey = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:818:                            object.appPublicKey = $util.newBuffer(object.appPublicKey);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:835:                if (message.serverPublicKey != null && message.hasOwnProperty("serverPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:836:                    object.serverPublicKey = options.bytes === String ? $util.base64.encode(message.serverPublicKey, 0, message.serverPublicKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.serverPublicKey) : message.serverPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:837:                if (message.appPublicKey != null && message.hasOwnProperty("appPublicKey"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:838:                    object.appPublicKey = options.bytes === String ? $util.base64.encode(message.appPublicKey, 0, message.appPublicKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.appPublicKey) : message.appPublicKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:879:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:880:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:881:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1034:                case "INVALID_KEYPAIR":
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1054:                case "TOO_MANY_KEYS":
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1066:                case "INVALID_KEY_DATA":
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1078:                case "NO_KEYS_IN_PAYLOAD":
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1123:             * @property {number} INVALID_KEYPAIR=2 INVALID_KEYPAIR value
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1128:             * @property {number} TOO_MANY_KEYS=7 TOO_MANY_KEYS value
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1131:             * @property {number} INVALID_KEY_DATA=11 INVALID_KEY_DATA value
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1134:             * @property {number} NO_KEYS_IN_PAYLOAD=14 NO_KEYS_IN_PAYLOAD value
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1140:                values[valuesById[2] = "INVALID_KEYPAIR"] = 2;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1145:                values[valuesById[7] = "TOO_MANY_KEYS"] = 7;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1148:                values[valuesById[11] = "INVALID_KEY_DATA"] = 11;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1151:                values[valuesById[14] = "NO_KEYS_IN_PAYLOAD"] = 14;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1165:             * @property {Array.<covidshield.ITemporaryExposureKey>|null} [keys] Upload keys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1177:                this.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1179:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1180:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1181:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1193:             * Upload keys.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1194:             * @member {Array.<covidshield.ITemporaryExposureKey>} keys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1198:            Upload.prototype.keys = $util.emptyArray;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1226:                if (message.keys != null && message.keys.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1227:                    for (var i = 0; i < message.keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1228:                        $root.covidshield.TemporaryExposureKey.encode(message.keys[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1267:                        if (!(message.keys && message.keys.length))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1268:                            message.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1269:                        message.keys.push($root.covidshield.TemporaryExposureKey.decode(reader, reader.uint32()));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1311:                if (message.keys != null && message.hasOwnProperty("keys")) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1312:                    if (!Array.isArray(message.keys))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1313:                        return "keys: array expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1314:                    for (var i = 0; i < message.keys.length; ++i) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1315:                        var error = $root.covidshield.TemporaryExposureKey.verify(message.keys[i]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1317:                            return "keys." + error;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1340:                if (object.keys) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1341:                    if (!Array.isArray(object.keys))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1342:                        throw TypeError(".covidshield.Upload.keys: array expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1343:                    message.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1344:                    for (var i = 0; i < object.keys.length; ++i) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1345:                        if (typeof object.keys[i] !== "object")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1346:                            throw TypeError(".covidshield.Upload.keys: object expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1347:                        message.keys[i] = $root.covidshield.TemporaryExposureKey.fromObject(object.keys[i]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1367:                    object.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1372:                if (message.keys && message.keys.length) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1373:                    object.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1374:                    for (var j = 0; j < message.keys.length; ++j)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1375:                        object.keys[j] = $root.covidshield.TemporaryExposureKey.toObject(message.keys[j], options);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1394:        covidshield.TemporaryExposureKeyExport = (function() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1397:             * Properties of a TemporaryExposureKeyExport.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1399:             * @interface ITemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1400:             * @property {number|Long|null} [startTimestamp] TemporaryExposureKeyExport startTimestamp
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1401:             * @property {number|Long|null} [endTimestamp] TemporaryExposureKeyExport endTimestamp
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1402:             * @property {string|null} [region] TemporaryExposureKeyExport region
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1403:             * @property {number|null} [batchNum] TemporaryExposureKeyExport batchNum
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1404:             * @property {number|null} [batchSize] TemporaryExposureKeyExport batchSize
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1405:             * @property {Array.<covidshield.ISignatureInfo>|null} [signatureInfos] TemporaryExposureKeyExport signatureInfos
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1406:             * @property {Array.<covidshield.ITemporaryExposureKey>|null} [keys] TemporaryExposureKeyExport keys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1407:             * @property {Array.<covidshield.ITemporaryExposureKey>|null} [revisedKeys] TemporaryExposureKeyExport revisedKeys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1411:             * Constructs a new TemporaryExposureKeyExport.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1413:             * @classdesc Represents a TemporaryExposureKeyExport.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1414:             * @implements ITemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1416:             * @param {covidshield.ITemporaryExposureKeyExport=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1418:            function TemporaryExposureKeyExport(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1420:                this.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1421:                this.revisedKeys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1423:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1424:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1425:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1429:             * TemporaryExposureKeyExport startTimestamp.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1431:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1434:            TemporaryExposureKeyExport.prototype.startTimestamp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1437:             * TemporaryExposureKeyExport endTimestamp.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1439:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1442:            TemporaryExposureKeyExport.prototype.endTimestamp = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1445:             * TemporaryExposureKeyExport region.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1447:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1450:            TemporaryExposureKeyExport.prototype.region = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1453:             * TemporaryExposureKeyExport batchNum.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1455:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1458:            TemporaryExposureKeyExport.prototype.batchNum = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1461:             * TemporaryExposureKeyExport batchSize.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1463:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1466:            TemporaryExposureKeyExport.prototype.batchSize = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1469:             * TemporaryExposureKeyExport signatureInfos.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1471:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1474:            TemporaryExposureKeyExport.prototype.signatureInfos = $util.emptyArray;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1477:             * TemporaryExposureKeyExport keys.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1478:             * @member {Array.<covidshield.ITemporaryExposureKey>} keys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1479:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1482:            TemporaryExposureKeyExport.prototype.keys = $util.emptyArray;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1485:             * TemporaryExposureKeyExport revisedKeys.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1486:             * @member {Array.<covidshield.ITemporaryExposureKey>} revisedKeys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1487:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1490:            TemporaryExposureKeyExport.prototype.revisedKeys = $util.emptyArray;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1493:             * Creates a new TemporaryExposureKeyExport instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1495:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1497:             * @param {covidshield.ITemporaryExposureKeyExport=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1498:             * @returns {covidshield.TemporaryExposureKeyExport} TemporaryExposureKeyExport instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1500:            TemporaryExposureKeyExport.create = function create(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1501:                return new TemporaryExposureKeyExport(properties);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1505:             * Encodes the specified TemporaryExposureKeyExport message. Does not implicitly {@link covidshield.TemporaryExposureKeyExport.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1507:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1509:             * @param {covidshield.ITemporaryExposureKeyExport} message TemporaryExposureKeyExport message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1513:            TemporaryExposureKeyExport.encode = function encode(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1529:                if (message.keys != null && message.keys.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1530:                    for (var i = 0; i < message.keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1531:                        $root.covidshield.TemporaryExposureKey.encode(message.keys[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1532:                if (message.revisedKeys != null && message.revisedKeys.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1533:                    for (var i = 0; i < message.revisedKeys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1534:                        $root.covidshield.TemporaryExposureKey.encode(message.revisedKeys[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1539:             * Encodes the specified TemporaryExposureKeyExport message, length delimited. Does not implicitly {@link covidshield.TemporaryExposureKeyExport.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1541:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1543:             * @param {covidshield.ITemporaryExposureKeyExport} message TemporaryExposureKeyExport message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1547:            TemporaryExposureKeyExport.encodeDelimited = function encodeDelimited(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1552:             * Decodes a TemporaryExposureKeyExport message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1554:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1558:             * @returns {covidshield.TemporaryExposureKeyExport} TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1562:            TemporaryExposureKeyExport.decode = function decode(reader, length) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1565:                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.covidshield.TemporaryExposureKeyExport();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1590:                        if (!(message.keys && message.keys.length))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1591:                            message.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1592:                        message.keys.push($root.covidshield.TemporaryExposureKey.decode(reader, reader.uint32()));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1595:                        if (!(message.revisedKeys && message.revisedKeys.length))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1596:                            message.revisedKeys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1597:                        message.revisedKeys.push($root.covidshield.TemporaryExposureKey.decode(reader, reader.uint32()));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1608:             * Decodes a TemporaryExposureKeyExport message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1610:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1613:             * @returns {covidshield.TemporaryExposureKeyExport} TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1617:            TemporaryExposureKeyExport.decodeDelimited = function decodeDelimited(reader) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1624:             * Verifies a TemporaryExposureKeyExport message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1626:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1631:            TemporaryExposureKeyExport.verify = function verify(message) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1658:                if (message.keys != null && message.hasOwnProperty("keys")) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1659:                    if (!Array.isArray(message.keys))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1660:                        return "keys: array expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1661:                    for (var i = 0; i < message.keys.length; ++i) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1662:                        var error = $root.covidshield.TemporaryExposureKey.verify(message.keys[i]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1664:                            return "keys." + error;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1667:                if (message.revisedKeys != null && message.hasOwnProperty("revisedKeys")) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1668:                    if (!Array.isArray(message.revisedKeys))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1669:                        return "revisedKeys: array expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1670:                    for (var i = 0; i < message.revisedKeys.length; ++i) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1671:                        var error = $root.covidshield.TemporaryExposureKey.verify(message.revisedKeys[i]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1673:                            return "revisedKeys." + error;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1680:             * Creates a TemporaryExposureKeyExport message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1682:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1685:             * @returns {covidshield.TemporaryExposureKeyExport} TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1687:            TemporaryExposureKeyExport.fromObject = function fromObject(object) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1688:                if (object instanceof $root.covidshield.TemporaryExposureKeyExport)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1690:                var message = new $root.covidshield.TemporaryExposureKeyExport();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1717:                        throw TypeError(".covidshield.TemporaryExposureKeyExport.signatureInfos: array expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1721:                            throw TypeError(".covidshield.TemporaryExposureKeyExport.signatureInfos: object expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1725:                if (object.keys) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1726:                    if (!Array.isArray(object.keys))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1727:                        throw TypeError(".covidshield.TemporaryExposureKeyExport.keys: array expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1728:                    message.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1729:                    for (var i = 0; i < object.keys.length; ++i) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1730:                        if (typeof object.keys[i] !== "object")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1731:                            throw TypeError(".covidshield.TemporaryExposureKeyExport.keys: object expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1732:                        message.keys[i] = $root.covidshield.TemporaryExposureKey.fromObject(object.keys[i]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1735:                if (object.revisedKeys) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1736:                    if (!Array.isArray(object.revisedKeys))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1737:                        throw TypeError(".covidshield.TemporaryExposureKeyExport.revisedKeys: array expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1738:                    message.revisedKeys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1739:                    for (var i = 0; i < object.revisedKeys.length; ++i) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1740:                        if (typeof object.revisedKeys[i] !== "object")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1741:                            throw TypeError(".covidshield.TemporaryExposureKeyExport.revisedKeys: object expected");
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1742:                        message.revisedKeys[i] = $root.covidshield.TemporaryExposureKey.fromObject(object.revisedKeys[i]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1749:             * Creates a plain object from a TemporaryExposureKeyExport message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1751:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1753:             * @param {covidshield.TemporaryExposureKeyExport} message TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1757:            TemporaryExposureKeyExport.toObject = function toObject(message, options) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1763:                    object.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1764:                    object.revisedKeys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1802:                if (message.keys && message.keys.length) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1803:                    object.keys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1804:                    for (var j = 0; j < message.keys.length; ++j)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1805:                        object.keys[j] = $root.covidshield.TemporaryExposureKey.toObject(message.keys[j], options);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1807:                if (message.revisedKeys && message.revisedKeys.length) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1808:                    object.revisedKeys = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1809:                    for (var j = 0; j < message.revisedKeys.length; ++j)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1810:                        object.revisedKeys[j] = $root.covidshield.TemporaryExposureKey.toObject(message.revisedKeys[j], options);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1816:             * Converts this TemporaryExposureKeyExport to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1818:             * @memberof covidshield.TemporaryExposureKeyExport
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1822:            TemporaryExposureKeyExport.prototype.toJSON = function toJSON() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1826:            return TemporaryExposureKeyExport;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1835:             * @property {string|null} [verificationKeyVersion] SignatureInfo verificationKeyVersion
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1836:             * @property {string|null} [verificationKeyId] SignatureInfo verificationKeyId
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1850:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1851:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1852:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1856:             * SignatureInfo verificationKeyVersion.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1857:             * @member {string} verificationKeyVersion
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1861:            SignatureInfo.prototype.verificationKeyVersion = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1864:             * SignatureInfo verificationKeyId.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1865:             * @member {string} verificationKeyId
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1869:            SignatureInfo.prototype.verificationKeyId = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1903:                if (message.verificationKeyVersion != null && Object.hasOwnProperty.call(message, "verificationKeyVersion"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1904:                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.verificationKeyVersion);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1905:                if (message.verificationKeyId != null && Object.hasOwnProperty.call(message, "verificationKeyId"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1906:                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.verificationKeyId);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1944:                        message.verificationKeyVersion = reader.string();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1947:                        message.verificationKeyId = reader.string();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1987:                if (message.verificationKeyVersion != null && message.hasOwnProperty("verificationKeyVersion"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1988:                    if (!$util.isString(message.verificationKeyVersion))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1989:                        return "verificationKeyVersion: string expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1990:                if (message.verificationKeyId != null && message.hasOwnProperty("verificationKeyId"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1991:                    if (!$util.isString(message.verificationKeyId))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:1992:                        return "verificationKeyId: string expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2011:                if (object.verificationKeyVersion != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2012:                    message.verificationKeyVersion = String(object.verificationKeyVersion);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2013:                if (object.verificationKeyId != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2014:                    message.verificationKeyId = String(object.verificationKeyId);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2034:                    object.verificationKeyVersion = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2035:                    object.verificationKeyId = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2038:                if (message.verificationKeyVersion != null && message.hasOwnProperty("verificationKeyVersion"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2039:                    object.verificationKeyVersion = message.verificationKeyVersion;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2040:                if (message.verificationKeyId != null && message.hasOwnProperty("verificationKeyId"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2041:                    object.verificationKeyId = message.verificationKeyId;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2061:        covidshield.TemporaryExposureKey = (function() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2064:             * Properties of a TemporaryExposureKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2066:             * @interface ITemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2067:             * @property {Uint8Array|null} [keyData] TemporaryExposureKey keyData
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2068:             * @property {number|null} [transmissionRiskLevel] TemporaryExposureKey transmissionRiskLevel
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2069:             * @property {number|null} [rollingStartIntervalNumber] TemporaryExposureKey rollingStartIntervalNumber
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2070:             * @property {number|null} [rollingPeriod] TemporaryExposureKey rollingPeriod
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2071:             * @property {covidshield.TemporaryExposureKey.ReportType|null} [reportType] TemporaryExposureKey reportType
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2072:             * @property {number|null} [daysSinceOnsetOfSymptoms] TemporaryExposureKey daysSinceOnsetOfSymptoms
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2076:             * Constructs a new TemporaryExposureKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2078:             * @classdesc Represents a TemporaryExposureKey.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2079:             * @implements ITemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2081:             * @param {covidshield.ITemporaryExposureKey=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2083:            function TemporaryExposureKey(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2085:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2086:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2087:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2091:             * TemporaryExposureKey keyData.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2092:             * @member {Uint8Array} keyData
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2093:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2096:            TemporaryExposureKey.prototype.keyData = $util.newBuffer([]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2099:             * TemporaryExposureKey transmissionRiskLevel.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2101:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2104:            TemporaryExposureKey.prototype.transmissionRiskLevel = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2107:             * TemporaryExposureKey rollingStartIntervalNumber.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2109:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2112:            TemporaryExposureKey.prototype.rollingStartIntervalNumber = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2115:             * TemporaryExposureKey rollingPeriod.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2117:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2120:            TemporaryExposureKey.prototype.rollingPeriod = 144;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2123:             * TemporaryExposureKey reportType.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2124:             * @member {covidshield.TemporaryExposureKey.ReportType} reportType
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2125:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2128:            TemporaryExposureKey.prototype.reportType = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2131:             * TemporaryExposureKey daysSinceOnsetOfSymptoms.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2133:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2136:            TemporaryExposureKey.prototype.daysSinceOnsetOfSymptoms = 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2139:             * Creates a new TemporaryExposureKey instance using the specified properties.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2141:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2143:             * @param {covidshield.ITemporaryExposureKey=} [properties] Properties to set
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2144:             * @returns {covidshield.TemporaryExposureKey} TemporaryExposureKey instance
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2146:            TemporaryExposureKey.create = function create(properties) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2147:                return new TemporaryExposureKey(properties);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2151:             * Encodes the specified TemporaryExposureKey message. Does not implicitly {@link covidshield.TemporaryExposureKey.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2153:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2155:             * @param {covidshield.ITemporaryExposureKey} message TemporaryExposureKey message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2159:            TemporaryExposureKey.encode = function encode(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2162:                if (message.keyData != null && Object.hasOwnProperty.call(message, "keyData"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2163:                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.keyData);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2178:             * Encodes the specified TemporaryExposureKey message, length delimited. Does not implicitly {@link covidshield.TemporaryExposureKey.verify|verify} messages.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2180:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2182:             * @param {covidshield.ITemporaryExposureKey} message TemporaryExposureKey message or plain object to encode
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2186:            TemporaryExposureKey.encodeDelimited = function encodeDelimited(message, writer) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2191:             * Decodes a TemporaryExposureKey message from the specified reader or buffer.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2193:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2197:             * @returns {covidshield.TemporaryExposureKey} TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2201:            TemporaryExposureKey.decode = function decode(reader, length) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2204:                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.covidshield.TemporaryExposureKey();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2209:                        message.keyData = reader.bytes();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2235:             * Decodes a TemporaryExposureKey message from the specified reader or buffer, length delimited.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2237:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2240:             * @returns {covidshield.TemporaryExposureKey} TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2244:            TemporaryExposureKey.decodeDelimited = function decodeDelimited(reader) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2251:             * Verifies a TemporaryExposureKey message.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2253:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2258:            TemporaryExposureKey.verify = function verify(message) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2261:                if (message.keyData != null && message.hasOwnProperty("keyData"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2262:                    if (!(message.keyData && typeof message.keyData.length === "number" || $util.isString(message.keyData)))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2263:                        return "keyData: buffer expected";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2292:             * Creates a TemporaryExposureKey message from a plain object. Also converts values to their respective internal types.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2294:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2297:             * @returns {covidshield.TemporaryExposureKey} TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2299:            TemporaryExposureKey.fromObject = function fromObject(object) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2300:                if (object instanceof $root.covidshield.TemporaryExposureKey)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2302:                var message = new $root.covidshield.TemporaryExposureKey();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2303:                if (object.keyData != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2304:                    if (typeof object.keyData === "string")
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2305:                        $util.base64.decode(object.keyData, message.keyData = $util.newBuffer($util.base64.length(object.keyData)), 0);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2306:                    else if (object.keyData.length)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2307:                        message.keyData = object.keyData;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2346:             * Creates a plain object from a TemporaryExposureKey message. Also converts values to other types if specified.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2348:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2350:             * @param {covidshield.TemporaryExposureKey} message TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2354:            TemporaryExposureKey.toObject = function toObject(message, options) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2360:                        object.keyData = "";
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2362:                        object.keyData = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2364:                            object.keyData = $util.newBuffer(object.keyData);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2372:                if (message.keyData != null && message.hasOwnProperty("keyData"))
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2373:                    object.keyData = options.bytes === String ? $util.base64.encode(message.keyData, 0, message.keyData.length) : options.bytes === Array ? Array.prototype.slice.call(message.keyData) : message.keyData;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2381:                    object.reportType = options.enums === String ? $root.covidshield.TemporaryExposureKey.ReportType[message.reportType] : message.reportType;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2388:             * Converts this TemporaryExposureKey to JSON.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2390:             * @memberof covidshield.TemporaryExposureKey
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2394:            TemporaryExposureKey.prototype.toJSON = function toJSON() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2400:             * @name covidshield.TemporaryExposureKey.ReportType
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2409:            TemporaryExposureKey.ReportType = (function() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2420:            return TemporaryExposureKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2443:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2444:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2445:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2653:                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2654:                        if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2655:                            this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2940:                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2941:                            if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:2942:                                this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:3164:                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:3165:                            if (properties[keys[i]] != null)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.js:3166:                                this[keys[i]] = properties[keys[i]];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:9:// verbal). Then, upon issuing THIS request, they will generate a new keypair.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:10:// If the response comes back successful, the app_public_key (and the
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:11:// corresponding private key) and the returned server_public_key will be kept in
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:14:// app_public_keys must not be re-used for new KeyClaimRequests, or the requests
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:16:message KeyClaimRequest {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:19:  // app_public_key is generated locally and saved upon successful request
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:21:  optional bytes app_public_key = 2; // 32 bytes
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:24:// KeyClaimResponse is received from the server in response to a
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:25:// KeyClaimRequest. If the request was successful, error will be NONE and
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:26:// server_public_key will be set.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:27:message KeyClaimResponse {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:33:    // Indicates the key is invalid, or already registered.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:34:    INVALID_KEY = 4;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:38:  optional bytes server_public_key = 2; // 32 bytes
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:54:  // server_public_key is provided by the Diagnosis Server to the App, and is
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:55:  // used to encrypt the payload. This key should be stored locally for 14
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:56:  // days, and used to submit the follow-up Diagnosis Key.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:57:  optional bytes server_public_key = 1; // 32 bytes
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:58:  // app_public_key is the public side of a keypair generated once by the
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:59:  // application and linked to the server_public_key. These are linked in the
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:60:  // Diagnosis Server, so that only one app_public_key is authorized to upload
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:61:  // for a given server_public_key. If a new server_public_key is issued to an App
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:62:  // (e.g. months later), a new app_public_key should be generated.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:63:  optional bytes app_public_key = 2; // 32 bytes
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:65:  // subsequent submissions of Diagnosis Keys. This nonce is passed to the
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:80:    INVALID_KEYPAIR = 2;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:85:    TOO_MANY_KEYS = 7;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:90:    INVALID_KEY_DATA = 11;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:93:    NO_KEYS_IN_PAYLOAD = 14;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:102:  // keys returns from the ExposureNotification API.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:103:  repeated TemporaryExposureKey keys = 2;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:110:// https://developers.google.com/android/exposure-notifications/exposure-key-file-format
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:112:// The format of the /keys endpoints is a stream of serialized File
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:117:// Note, as a special case, that if there are no keys at all in the requested
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:124:message TemporaryExposureKeyExport {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:125:  // Time window of keys in the file, based on arrival
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:130:  // Region from which these keys came (for example, MCC, however, some schemes
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:143:  // The temporary exposure keys themselves.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:144:  repeated TemporaryExposureKey keys = 7;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:146:  // Keys that have changed status from previous key archives,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:147:  // including keys that are being revoked.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:148:  repeated TemporaryExposureKey revised_keys = 8;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:157:  // Key version in case the EN server signing key is rotated.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:158:  optional string verification_key_version = 3;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:160:  // Additional information to uniquely identify the public key associated with
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:161:  // the EN server's signing key (for example, the EN server might serve the
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:162:  // app from different countries with different keys).
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:164:  // Three-digit mobile country code (MCC) for validating the key file.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:168:  optional string verification_key_id = 4;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:170:  // All keys must be signed using the SHA-256 with ECDSA algorithm.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:175:message TemporaryExposureKey {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:176:  // Temporary exposure key.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:177:  optional bytes key_data = 1;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:179:  // Varying risk associated with a key depending on the diagnosis method.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:183:  // key validity (ENIntervalNumber).
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:189:  // Data type that represents why this key was published.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:196:    REVOKED = 5;  // Used to revoke a key, never returned by client API.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:199:  // Type of diagnosis associated with a key.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:214:  // Information to uniquely identify the public key associated
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/covidshield/covidshield.proto:215:  // with the EN server's signing key.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:1:import {TemporaryExposureKey, ExposureConfiguration} from 'bridge/ExposureNotification';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:6:export interface SubmissionKeySet {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:7:  serverPublicKey: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:8:  clientPrivateKey: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:9:  clientPublicKey: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:13:  claimOneTimeCode(code: string): Promise<SubmissionKeySet>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:14:  reportDiagnosisKeys(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:15:    submissionKeyPair: SubmissionKeySet,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:16:    keys: TemporaryExposureKey[],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackendService/types.ts:19:  retrieveDiagnosisKeys(period: number): Promise<string>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackgroundSchedulerService/BackgroundSchedulerService.ts:3:import {HMAC_KEY, RETRIEVE_URL, SUBMIT_URL, TEST_MODE} from 'env';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackgroundSchedulerService/BackgroundSchedulerService.ts:5:import RNSecureKeyStore from 'react-native-secure-key-store';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackgroundSchedulerService/BackgroundSchedulerService.ts:125:      const backendService = new BackendService(RETRIEVE_URL, SUBMIT_URL, HMAC_KEY, storageService?.region);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/BackgroundSchedulerService/BackgroundSchedulerService.ts:131:        RNSecureKeyStore,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:8:import {Key} from '../StorageService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:32:  downloadDiagnosisKeysFile: jest.fn(x => ''),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:60:  retrieveDiagnosisKeys: jest.fn().mockResolvedValue(null),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:63:  reportDiagnosisKeys: jest.fn(),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:77:  detectExposure: jest.fn().mockResolvedValue({matchedKeyCount: 0}),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:80:  getTemporaryExposureKeyHistory: jest.fn().mockResolvedValue({}),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:87:  hasMatchedKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:93:  hasMatchedKey: boolean;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:98:  if (!hasMatchedKey) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:102:      matchedKeyCount: 0,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:112:    matchedKeyCount: 1,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:137:      Object.keys(partial).filter(key => JSON.stringify(partial[key]) !== JSON.stringify(json[key])).length === 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:172:      .calledWith(Key.OnboardedDatetime)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:190:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:197:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:204:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:239:        hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:268:      // and then they get a new summary with a matched key
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:277:        hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:290:        hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:302:  it('filters out summaries with 0 matched keys', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:314:        hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:323:        hasMatchedKey: false,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:331:  it('backfills keys when last timestamp not available', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:339:    expect(server.retrieveDiagnosisKeys).toHaveBeenCalledTimes(2);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:344:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:352:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:360:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:368:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:384:  it('backfills the right amount of keys for current day', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:399:    expect(server.retrieveDiagnosisKeys).toHaveBeenCalledTimes(1);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:401:    server.retrieveDiagnosisKeys.mockClear();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:410:    expect(server.retrieveDiagnosisKeys).toHaveBeenCalledTimes(2);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:412:    server.retrieveDiagnosisKeys.mockClear();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:421:    expect(server.retrieveDiagnosisKeys).toHaveBeenCalledTimes(3);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:446:    when(server.retrieveDiagnosisKeys)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:463:  it('enters Diagnosed flow when start keys submission process', async () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:467:        serverPublicKey: 'serverPublicKey',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:468:        clientPrivateKey: 'clientPrivateKey',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:469:        clientPublicKey: 'clientPublicKey',
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:472:    await service.startKeysSubmission('12345678');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:524:      .calledWith('submissionAuthKeys')
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:526:    await service.fetchAndSubmitKeys({dateType: 'noDate', date: null});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:646:          hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:677:          matchedKeyCount: 1,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:694:            matchedKeyCount: 1,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:706:        matchedKeyCount: 1,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:734:        hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:740:        hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:799:        matchedKeyCount: 4,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:859:        hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:935:        .calledWith(Key.OnboardedDatetime)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:978:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:984:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:1052:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:1058:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.spec.ts:1099:      hasMatchedKey: true,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:6:  TemporaryExposureKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:32:import {BackendInterface, SubmissionKeySet} from '../BackendService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:34:import {Key} from '../StorageService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:42:const SUBMISSION_AUTH_KEYS = 'submissionAuthKeys';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:98:  setItem(key: string, value: string): Promise<void>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:99:  getItem(key: string): Promise<string | null>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:103:  set(key: string, value: string, options: SecureStorageOptions): Promise<null>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:104:  get(key: string): Promise<string | null>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:297:        return summary.matchedKeyCount > 0;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:388:  async startKeysSubmission(oneTimeCode: string): Promise<void> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:389:    const keys = await this.backendInterface.claimOneTimeCode(oneTimeCode);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:390:    const serialized = JSON.stringify(keys);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:392:      await this.secureStorage.set(SUBMISSION_AUTH_KEYS, serialized, {});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:394:      captureException('Unable to store SUBMISSION_AUTH_KEYS', error);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:406:  async fetchAndSubmitKeys(contagiousDateInfo: ContagiousDateInfo): Promise<void> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:407:    const submissionKeysStr = await this.secureStorage.get(SUBMISSION_AUTH_KEYS);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:408:    if (!submissionKeysStr) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:409:      throw new Error('Submission keys: bad certificate');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:411:    const auth = JSON.parse(submissionKeysStr) as SubmissionKeySet;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:413:    let temporaryExposureKeys: TemporaryExposureKey[];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:416:      temporaryExposureKeys = await this.exposureNotification.getTemporaryExposureKeyHistory();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:418:      captureException('getTemporaryExposureKeyHistory', error);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:421:    if (temporaryExposureKeys.length > 0) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:422:      captureMessage('getTemporaryExposureKeyHistory', temporaryExposureKeys);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:423:      await this.backendInterface.reportDiagnosisKeys(auth, temporaryExposureKeys, contagiousDateInfo);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:425:      captureMessage('getTemporaryExposureKeyHistory', {message: 'No TEKs available to upload'});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:428:    await this.recordKeySubmission();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:443:      // We're done submitting keys
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:542:    const dailySummariesObj: {[key: string]: {attenuationDurations: number[]; matchedKeyCount: number}} = {};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:548:        dailySummariesObj[window.day.toString()] = {attenuationDurations: [0, 0, 0], matchedKeyCount: 0};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:559:        dailySummariesObj[dayString].matchedKeyCount += 1;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:602:    const {keysFileUrls, lastCheckedPeriod} = await this.getKeysFileUrls();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:607:        await this.exposureNotification.setDiagnosisKeysDataMapping();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:608:        exposureWindows = await this.exposureNotification.getExposureWindowsAndroid(keysFileUrls);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:610:        exposureWindows = await this.exposureNotification.getExposureWindowsIos(exposureConfiguration, keysFileUrls);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:637:    const onboardedDatetime = await this.storage.getItem(Key.OnboardedDatetime);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:776:    const {keysFileUrls, lastCheckedPeriod} = await this.getKeysFileUrls();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:779:      const summaries = await this.exposureNotification.detectExposure(exposureConfiguration, keysFileUrls);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:940:  private async recordKeySubmission() {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:988:  private async getKeysFileUrls(): Promise<any> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:990:    const keysFileUrls: string[] = [];
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:995:        const keysFileUrl = await this.backendInterface.retrieveDiagnosisKeys(period);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:996:        keysFileUrls.push(keysFileUrl);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:1000:      captureException('Error while downloading key file', error);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationService.ts:1002:    return {keysFileUrls, lastCheckedPeriod};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceProvider.tsx:6:import RNSecureKeyStore from 'react-native-secure-key-store';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceProvider.tsx:50:        secureStorage || RNSecureKeyStore,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceProvider.tsx:196:      return exposureNotificationService.startKeysSubmission(oneTimeCode);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceProvider.tsx:200:  const fetchAndSubmitKeys = useCallback(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceProvider.tsx:202:      return exposureNotificationService.fetchAndSubmitKeys(contagiousDateInfo);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceProvider.tsx:216:    fetchAndSubmitKeys,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:37:  downloadDiagnosisKeysFile: jest.fn(),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:46:  retrieveDiagnosisKeys: jest.fn().mockResolvedValue(null),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:49:  reportDiagnosisKeys: jest.fn(),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:83:  detectExposure: jest.fn().mockResolvedValue({matchedKeyCount: 0}),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:85:  getTemporaryExposureKeyHistory: jest.fn().mockResolvedValue({}),
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:118:      expect(summary.matchedKeyCount).toStrictEqual(1);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:136:      expect(summary.matchedKeyCount).toStrictEqual(1);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:177:      expect(summary.matchedKeyCount).toStrictEqual(2);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/ExposureNotificationService/ExposureNotificationServiceV2.spec.ts:203:      expect(summary.matchedKeyCount).toStrictEqual(1);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsService.ts:7:import {Key} from 'services/StorageService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsService.ts:15:import {DefaultSecureKeyValueStore} from './SecureKeyValueStorage';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsService.ts:81:    this.stateStorage = new DefaultFilteredMetricsStateStorage(new DefaultSecureKeyValueStore());
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsService.ts:215:    const regionOpt = await AsyncStorage.getItem(Key.Region);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:1:import {SecureKeyValueStore} from './SecureKeyValueStorage';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:3:const InstalledEventMarkerKeyValueUniqueIdentifier = 'A607DDBD-D592-4927-8861-DD1CCEDA8E76';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:4:const OnboardedEventMarkerKeyValueUniqueIdentifier = '0429518A-9D4D-4EB2-A5A8-AEA985DEB1D7';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:5:const BackgroundCheckEventMarkerKeyValueUniqueIdentifier = 'AB398409-D8A9-4BC2-91F0-63E4CEFCD89A';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:20:  private keyValueStore: SecureKeyValueStore;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:22:  constructor(secureKeyValueStore: SecureKeyValueStore) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:23:    this.keyValueStore = secureKeyValueStore;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:27:    return this.keyValueStore.save(InstalledEventMarkerKeyValueUniqueIdentifier, 'exists');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:31:    return this.keyValueStore.retrieve(InstalledEventMarkerKeyValueUniqueIdentifier).then(result => Boolean(result));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:35:    return this.keyValueStore.save(OnboardedEventMarkerKeyValueUniqueIdentifier, JSON.stringify(true));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:39:    return this.keyValueStore.retrieve(OnboardedEventMarkerKeyValueUniqueIdentifier).then(result => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:49:    return this.keyValueStore.save(OnboardedEventMarkerKeyValueUniqueIdentifier, JSON.stringify(false));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:53:    return this.keyValueStore.retrieve(BackgroundCheckEventMarkerKeyValueUniqueIdentifier).then(result => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:64:    return this.keyValueStore.save(
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/FilteredMetricsStateStorage.ts:65:      BackgroundCheckEventMarkerKeyValueUniqueIdentifier,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsJsonSerializer.ts:18:      return Array.from(map).reduce((acc, [key, value]) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsJsonSerializer.ts:20:        acc[key] = value;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsPusher.ts:14:  private apiEndpointKey: string;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsPusher.ts:16:  constructor(apiEndpointUrl: string, apiEndpointKey: string) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsPusher.ts:18:    this.apiEndpointKey = apiEndpointKey;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsPusher.ts:32:        'x-api-key': this.apiEndpointKey,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:1:import {METRICS_API_KEY, METRICS_URL, TEST_MODE} from 'env';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:12:import {DefaultSecureKeyValueStore, SecureKeyValueStore} from './SecureKeyValueStorage';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:36:      const secureKeyValueStore = new DefaultSecureKeyValueStore();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:37:      const metricsStorage = new DefaultMetricsStorage(secureKeyValueStore);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:40:      const metricsPusher = new DefaultMetricsPusher(METRICS_URL, METRICS_API_KEY);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:42:        secureKeyValueStore,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:54:  private secureKeyValueStore: SecureKeyValueStore;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:64:    secureKeyValueStore: SecureKeyValueStore,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:71:    this.secureKeyValueStore = secureKeyValueStore;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:169:    return this.secureKeyValueStore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:175:    return this.secureKeyValueStore.save(LastMetricTimestampSentToTheServerUniqueIdentifier, `${timestamp}`);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:179:    return this.secureKeyValueStore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsService.ts:185:    return this.secureKeyValueStore.save(MetricsLastUploadedDateTime, `${date.getTime()}`);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:5:import {SecureKeyValueStore} from './SecureKeyValueStorage';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:7:const MetricsStorageKeyValueUniqueIdentifier = 'AE6AE306-523B-4D92-871E-9D13D5CA9B23';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:22:  private keyValueStore: SecureKeyValueStore;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:25:  constructor(secureKeyValueStore: SecureKeyValueStore) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:26:    this.keyValueStore = secureKeyValueStore;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:37:      return this.keyValueStore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:38:        .retrieve(MetricsStorageKeyValueUniqueIdentifier)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:40:        .then(serializedMetrics => this.keyValueStore.save(MetricsStorageKeyValueUniqueIdentifier, serializedMetrics));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:46:      return this.keyValueStore.retrieve(MetricsStorageKeyValueUniqueIdentifier).then(serializedMetrics => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:60:      return this.keyValueStore
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:61:        .retrieve(MetricsStorageKeyValueUniqueIdentifier)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/MetricsStorage.ts:65:        .then(filteredMetrics => this.keyValueStore.save(MetricsStorageKeyValueUniqueIdentifier, filteredMetrics));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:1:import RNSecureKeyStore, {ACCESSIBLE} from 'react-native-secure-key-store';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:3:export interface SecureKeyValueStore {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:4:  save(key: string, value: string): Promise<void>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:5:  retrieve(key: string): Promise<string | null>;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:8:export class DefaultSecureKeyValueStore implements SecureKeyValueStore {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:9:  save(key: string, value: string): Promise<void> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:10:    return RNSecureKeyStore.set(key, value, {accessible: ACCESSIBLE.ALWAYS_THIS_DEVICE_ONLY});
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:13:  retrieve(key: string): Promise<string | null> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/SecureKeyValueStorage.ts:14:    return RNSecureKeyStore.get(key).catch(() => null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricFactory.ts:10:    return new Metric(timestamp, 'MyCustomMetric', 'MyCustomRegion', [['MyPayloadKey', 'MyPayloadValue']]);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsJsonSerializer.spec.ts:15:      ['MyPayloadKey1', 'MyPayloadValue1'],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsJsonSerializer.spec.ts:19:      ['MyPayloadKey1', 'MyPayloadValue1'],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsJsonSerializer.spec.ts:20:      ['MyPayloadKey2', 'MyPayloadValue2'],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsJsonSerializer.spec.ts:21:      ['MyPayloadKey3', 'MyPayloadValue3'],
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsJsonSerializer.spec.ts:27:      `{"metricstimestamp":1611324024314,"appversion":"0.0.7","appos":"iOS","payload":[{"identifier":"MyCustomMetric1","region":"MyCustomRegion1","timestamp":1611324021314,"MyPayloadKey1":"MyPayloadValue1"},{"identifier":"MyCustomMetric2","region":"MyCustomRegion2","timestamp":1611324022314},{"identifier":"MyCustomMetric3","region":"MyCustomRegion3","timestamp":1611324023314,"MyPayloadKey1":"MyPayloadValue1","MyPayloadKey2":"MyPayloadValue2","MyPayloadKey3":"MyPayloadValue3"}]}`,
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsProvider.spec.ts:5:import {RNSecureKeyStoreMock} from './RNSecureKeyStoreMock';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsProvider.spec.ts:13:    const metricsStorage = new DefaultMetricsStorage(new RNSecureKeyStoreMock());
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsStorage.spec.ts:3:import {RNSecureKeyStoreMock} from './RNSecureKeyStoreMock';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/MetricsStorage.spec.ts:10:    sut = new DefaultMetricsStorage(new RNSecureKeyStoreMock());
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/RNSecureKeyStoreMock.ts:1:import {SecureKeyValueStore} from '../SecureKeyValueStorage';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/RNSecureKeyStoreMock.ts:3:export class RNSecureKeyStoreMock implements SecureKeyValueStore {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/RNSecureKeyStoreMock.ts:10:  retrieve(key: string): Promise<string | null> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/RNSecureKeyStoreMock.ts:11:    const result = this.store.get(key);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/RNSecureKeyStoreMock.ts:19:  save(key: string, value: string): Promise<void> {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/MetricsService/tests/RNSecureKeyStoreMock.ts:20:    this.store.set(key, value);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:6:import RNSecureKeyStore, {ACCESSIBLE} from 'react-native-secure-key-store';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:12:const READ_RECEIPTS_KEY = 'NotificationReadReceipts';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:13:const ETAG_STORAGE_KEY = 'NotificationsEtag';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:14:const LastPollNotificationDateTime = 'LastPollNotificationDateTimeKey';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:54:  const readReceipts = await AsyncStorage.getItem(READ_RECEIPTS_KEY);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:64:  await AsyncStorage.setItem(READ_RECEIPTS_KEY, JSON.stringify(receipts));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:68:  await AsyncStorage.removeItem(READ_RECEIPTS_KEY);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:116:  const etag = await AsyncStorage.getItem(ETAG_STORAGE_KEY);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:166:      await AsyncStorage.setItem(ETAG_STORAGE_KEY, newEtag);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:201:  return RNSecureKeyStore.get(LastPollNotificationDateTime).catch(() => null);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/PollNotificationService/PollNotificationService.ts:205:  return RNSecureKeyStore.set(LastPollNotificationDateTime, `${date.getTime()}`, {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:3:import {StorageService, Key, createStorageService} from './StorageService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:20:      expect(AsyncStorage.getItem).toHaveBeenCalledWith(Key.IsOnboarded);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:24:      expect(AsyncStorage.getItem).toHaveBeenCalledWith(Key.Locale);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:28:      expect(AsyncStorage.getItem).toHaveBeenCalledWith(Key.Region);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:32:      expect(AsyncStorage.getItem).toHaveBeenCalledWith(Key.OnboardedDatetime);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:36:      expect(AsyncStorage.getItem).toHaveBeenCalledWith(Key.ForceScreen);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:40:      expect(AsyncStorage.getItem).toHaveBeenCalledWith(Key.SkipAllSet);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:47:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.IsOnboarded, '1');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:50:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.IsOnboarded, '0');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:65:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.Locale, 'en');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:68:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.Locale, 'fr_CA');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:83:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.Region, 'ABC');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:86:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.Region, 'asd');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:102:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.OnboardedDatetime, d1.toISOString());
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:106:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.OnboardedDatetime, d2.toISOString());
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:123:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.ForceScreen, 'testing');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:126:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.ForceScreen, 'xaz');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:141:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.SkipAllSet, '1');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.spec.ts:144:      expect(AsyncStorage.setItem).toHaveBeenCalledWith(Key.SkipAllSet, '0');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:7:export enum Key {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:41:    await AsyncStorage.setItem(Key.IsOnboarded, value ? '1' : '0');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:46:    await AsyncStorage.setItem(Key.Locale, value);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:51:    await AsyncStorage.setItem(Key.Region, value ? value : '');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:56:    await AsyncStorage.setItem(Key.OnboardedDatetime, value ? value.toISOString() : '');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:61:    await AsyncStorage.setItem(Key.ForceScreen, value ? value : '');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:66:    await AsyncStorage.setItem(Key.SkipAllSet, value ? '1' : '0');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:71:    await AsyncStorage.setItem(Key.UserStopped, value ? '1' : '0');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:76:    await AsyncStorage.setItem(Key.HasViewedQrInstructions, value ? '1' : '0');
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:81:    const isOnboarded = (await AsyncStorage.getItem(Key.IsOnboarded)) === '1';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:84:    const locale = (await AsyncStorage.getItem(Key.Locale)) || this.locale.get();
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:87:    const region = ((await AsyncStorage.getItem(Key.Region)) as Region | undefined) || undefined;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:91:      ((await AsyncStorage.getItem(Key.OnboardedDatetime)) as string | undefined) || undefined;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:95:    const forceScreen = ((await AsyncStorage.getItem(Key.ForceScreen)) as ForceScreen | undefined) || undefined;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:98:    const skipAllSet = (await AsyncStorage.getItem(Key.SkipAllSet)) === '1';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:101:    const userStopped = (await AsyncStorage.getItem(Key.UserStopped)) === '1';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/services/StorageService/StorageService.ts:104:    const hasViewedQrInstructions = (await AsyncStorage.getItem(Key.HasViewedQrInstructions)) === '1';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/BottomSheet.tsx:127:  propsToNewIndices: {[key: string]: number};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/BottomSheet.tsx:653:    const propsToNewIndices: {[key: string]: number} = {};
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/date-fns.spec.ts:281:  // it('returns 1 missing day for keys upload', () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/date-fns.spec.ts:290:  // it('returns 0 missing day for keys upload', () => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/log.ts:5:export const captureMessage = async (message: string, params: {[key in string]: any} = {}) => {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/logging/uuid.ts:3:const UUID_KEY = 'UUID_KEY';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/logging/uuid.ts:12:const cachedUUID = AsyncStorage.getItem(UUID_KEY)
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/logging/uuid.ts:15:    AsyncStorage.setItem(UUID_KEY, uuid);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/logging/uuid.ts:22:  AsyncStorage.setItem(UUID_KEY, uuid);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:3:import {Key} from 'services/StorageService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:23:    await AsyncStorage.setItem(Key.OutbreakStatus, JSON.stringify(value));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:28:    const _checkInHistory = (await AsyncStorage.getItem(Key.CheckInHistory)) || '[]';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:31:    await AsyncStorage.setItem(Key.CheckInHistory, JSON.stringify(checkInHistory));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:37:    const _checkInHistory = (await AsyncStorage.getItem(Key.CheckInHistory)) || '[]';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:40:    await AsyncStorage.setItem(Key.CheckInHistory, JSON.stringify(newCheckInHistory));
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:45:    const outbreakStatus = (await AsyncStorage.getItem(Key.OutbreakStatus)) || JSON.stringify(initialOutbreakStatus);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/OutbreakProvider.tsx:48:    const checkInHistory = (await AsyncStorage.getItem(Key.CheckInHistory)) || '[]';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/pluralization.ts:1:export function pluralizeKey(baseKey: string, number: number) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/pluralization.ts:2:  if (number === 1) return `${baseKey}.One`;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/pluralization.ts:3:  return `${baseKey}.Other`;
/mnt/c/Users/conig/Desktop/test/covid-alert-app/src/shared/qr.ts:3:// import {Key} from 'services/StorageService';
/mnt/c/Users/conig/Desktop/test/covid-alert-app/TEST_PLAN.md:32:Note: Because the server doesn't return Temporary Exposure Keys (TEKs) for current date (https://github.com/CovidShield/server/blob/master/pkg/server/retrieve.go#L83), for this test to work, the server needs to remove that restriction. This is possible if you run server locally or modify production server.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/TEST_PLAN.md:120:- If you don't, you have to use app with APP_ID / Package Name that has been whitelisted with correct signed key.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/TEST_PLAN.md:124:On devices that haven't been using any apps supporting Google / Apple Exposure Notifications before, the device hasn't been generating / collecting Temporary Exposure Keys (TEKs) yet. So, there is no key to submit to server after you enter OneTimeCode. In this case, the only option is to come back the next date and test again. Make sure you EN and bluetooth are enabled properly.
/mnt/c/Users/conig/Desktop/test/covid-alert-app/translations-regional.js:34:  // add keys for each language
/mnt/c/Users/conig/Desktop/test/covid-alert-app/translations-regional.js:35:  for (const [key, value] of Object.entries(regionContent)) {
/mnt/c/Users/conig/Desktop/test/covid-alert-app/translations-regional.js:36:    json[key] = JSON.parse(value);
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:986:"@babel/plugin-transform-duplicate-keys@^7.12.1":
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:988:  resolved "https://registry.yarnpkg.com/@babel/plugin-transform-duplicate-keys/-/plugin-transform-duplicate-keys-7.12.1.tgz#745661baba295ac06e686822797a69fbaa2ca228"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:1381:    "@babel/plugin-transform-duplicate-keys" "^7.12.1"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:2739:"@types/eslint-visitor-keys@^1.0.0":
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:2741:  resolved "https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:2925:    "@types/eslint-visitor-keys" "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:2928:    eslint-visitor-keys "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:2934:    "@types/eslint-visitor-keys" "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:2937:    eslint-visitor-keys "^1.1.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:2951:    eslint-visitor-keys "^1.1.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:3302:    eslint-visitor-keys "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:3313:    eslint-visitor-keys "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4159:    path-key "^2.0.1"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4168:    path-key "^3.1.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4181:css-color-keywords@^1.0.0:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4183:  resolved "https://registry.yarnpkg.com/css-color-keywords/-/css-color-keywords-1.0.0.tgz#fea2616dc676b2962686b3af8dbdbe180b244e05"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4203:    css-color-keywords "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4333:    object-keys "^1.1.1"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4363:    object-keys "^1.0.12"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4597:    object-keys "^1.1.1"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4617:    object-keys "^1.1.1"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4909:    eslint-visitor-keys "^1.1.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4915:    eslint-visitor-keys "^1.1.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4917:eslint-visitor-keys@^1.0.0, eslint-visitor-keys@^1.1.0:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4919:  resolved "https://registry.yarnpkg.com/eslint-visitor-keys/-/eslint-visitor-keys-1.1.0.tgz#e2a82cea84ff246ad6fb57f9bde5b46621459ec2"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4933:    eslint-visitor-keys "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:4974:    eslint-visitor-keys "^1.1.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:5017:    eslint-visitor-keys "^1.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:5025:    eslint-visitor-keys "^1.1.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:7901:    path-key "^2.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:7907:    path-key "^3.0.0"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:7965:object-keys@^1.0.11, object-keys@^1.0.12, object-keys@^1.1.1:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:7967:  resolved "https://registry.yarnpkg.com/object-keys/-/object-keys-1.1.1.tgz#1c47f272df277f3b1daf061677d9c82e2322c60e"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:7982:    object-keys "^1.0.11"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:7992:    object-keys "^1.1.1"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:8339:path-key@^2.0.0, path-key@^2.0.1:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:8341:  resolved "https://registry.yarnpkg.com/path-key/-/path-key-2.0.1.tgz#411cadb574c5a140d3a4b1910d40d80cc9f40b40"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:8343:path-key@^3.0.0, path-key@^3.1.0:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:8345:  resolved "https://registry.yarnpkg.com/path-key/-/path-key-3.1.1.tgz#581f6ade658cbba65a0d3380de7753295054f375"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:8775:react-native-secure-key-store@^2.0.7:
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:8777:  resolved "https://registry.yarnpkg.com/react-native-secure-key-store/-/react-native-secure-key-store-2.0.7.tgz#70b24afae0f75fd90e46aabd8fc9ce6484727850"
/mnt/c/Users/conig/Desktop/test/covid-alert-app/yarn.lock:10407:    eslint-visitor-keys "^1.0.0"
