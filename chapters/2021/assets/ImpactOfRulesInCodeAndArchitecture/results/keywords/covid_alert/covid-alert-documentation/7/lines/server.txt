./covid-alert-documentation/.git/hooks/post-update.sample:8:exec git update-server-info
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:25:This assessment will examine the privacy implications of the app, specifically in relation to the information/data that will be under the control of the Government of Canada, including the data that will be transmitted to the Government of Canada Server (key server). It will not examine any information under the control of the Provinces/Territories (PTs), such as the mechanism through which one-time keys are distributed to individuals for PTs who distribute one-time keys themselves.<sup id="f1">[[1]](#otp-portal)</sup> 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:51:CDS is responsible for providing internal support services (information technology services) to Health Canada. It is responsible for developing the technological components of the exposure notification app. In addition to developing the app itself, CDS operates the Government of Canada key server (located within Canada) that stores encrypted diagnosis keys that reflect positive COVID-19 cases. The key server operates on a cloud solution procured via Shared Services Canada cloud brokering service. CDS also provides support to PT partners as they integrate one-time key distribution into their result notification processes. This includes providing PTs access to one-time keys that users will enter into the app if they receive a positive diagnosis, through an API or a federally-run portal for authorized healthcare professionals.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:80:2. The key server (at the Federal level); and
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:85:Downloading and installing the app does not initiate the exposure notification process. When a user first opens the app, they are presented a walkthrough of how exposure notifications work and what data is shared. They are then asked if they wish to enable exposure notifications. A consent dialog from their device’s operating system appears. If they enable exposure notifications, the Google/Apple API exposure notification “layer” (GAOS layer) of the device is activated. This also initiates activation of the device’s Bluetooth function so that the device begins sending signals to and receiving signals from the devices of other users who have downloaded the app. This Bluetooth communication between participating users is short-range device-to-device communication; nothing is being transmitted to any server. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:93:The daily TEK generation and frequent RPI generation are design features with the purpose of minimizing the risk of re-identification of users. (In addition to this, they are designed to minimize data transfer to conserve bandwidth.) The RPIs are not identifiable and are not accessible to the app or transmitted to the key server. By design, the RPIs are meant to be public (they are shared to other devices via Bluetooth), and as such do not provide any form of identifying information in the absence of other information. Even if an RPI were intercepted by a device operated by a malicious actor, it would be an entirely meaningless number, and would not be linkable to a device without significant effort. TEKs are stored on the device, but may only be released to the key server in the case of a positive test result and explicit user consent.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:95:When a user receives a positive COVID-19 test result, PT health authorities who have adopted the app will provide them a one-time key<sup id="f2">[[2]](#otp-api-tokens)</sup> and instructions on how to enter it into the app.<sup id="f3">[[3]](#otp-pt-variation)</sup> Some PTs have the capacity to retrieve one-time keys from the key server using their existing IT infrastructure (e.g. some PTs have a platform to provide COVID-19 test results to individuals online, and the same platform can be used to issue one-time keys), while other PTs do not have this capacity (e.g. some provide test results over the phone). For the PTs that don’t have the capacity to retrieve the one-time keys, CDS developed the COVID Alert Portal (the portal) that PTs can use to retrieve the keys and provide them to app users who have tested positive for COVID-19. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:97:Although the portal will rely on retrieving one-time keys from the key server, it is not connected to the app in any way nor will it connect to any PT IT system. Only personal information about PT administrators and healthcare providers will be collected so they can create portal accounts and retrieve the one-time keys - no patient information will be collected or retained by the portal. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:99:When a one-time key is entered into the app, it will validate the key and ask the user if they would like their TEKs to be sent to the key server.<sup id="f4">[[4]](#dk-upload-process)</sup> If the individual says yes, the app communicates with the GAOS layer. The GAOS layer asks a second time whether the individual consents to sending their TEKs to the key server. If the individual consents, the TEKs are sent to the key server, allowing other users they have come in contact with in the past 14 days to be notified, once their app has downloaded these keys. App users also have the option of uploading their diagnosis keys for the 14 days _following_ receipt of a positive diagnosis, in the unfortunate scenario where an individual who has COVID-19 cannot self-quarantine (e.g. doesn’t have sick leave; lives alone and has to buy groceries, etc.). 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:105:If a user enters the date of symptom onset or test, the app uses this information to determine what dates they were likely to have been the most infectious (two days before symptom onset or test) and only uploads their TEKs<sup id="f5">[[5]](#dk-tek-generation)</sup> from the relevant dates to the national server. If the user does not enter their date of symptom onset or test, the app will upload the TEKs from the last 14 days. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:107:The purpose is to be more precise by sending exposure notifications to users who the COVID-19-positive user was in contact with when they were likely to have been the most infectious. When a user enters a date of symptom onset or test, it is not sent to the key server. The date is stored on the phone until the user closes the screen, or completes the first upload of their TEKs, at which point the date is no longer stored anywhere. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:109:TEKs are generated once a day and expire after 14 days on the device. A TEK becomes a “diagnosis key” once released for upload to the key server. If the user consents to upload and transmit the diagnosis key, other users with whom they were in contact may receive a notification.<sup id="f6">[[6]](#dk-upload-next-steps)</sup> We note that if an individual has had contact with a very limited number of individuals in the past 14 days, it’s possible that the user who receives the notification may be able to associate it with an individual.<sup id="f7">[[7]](#limited-contact-scenario)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:113:On a pre-defined schedule (once every 4 to 24 hours depending on battery level, and when the app is opened), the app downloads new diagnosis keys from the key server. The app passes those diagnosis keys to the GAOS layer and the GAOS layer re-generates the RPIs from each of the provided diagnosis keys. The GAOS compares those regenerated RPIs to the list of locally-stored RPIs it has encountered in the last 14 days. If the GAOS layer finds that any of the re-generated and locally-stored RPIs match, and the exposure notification risk criteria are met (length of exposure, strength of signal, etc.), the GAOS layer sends a positive signal to the app. If the app receives a positive signal, it sends an exposure notification to the end-user. The matching happens on the device. The key server has no way of knowing if two devices interacted.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:125:The data elements (see [Appendix A](#appendix-a-list-of-covid-alert-app-data)) that will be under the control of the Government of Canada and stored in the Government of Canada key server (located in Canada) do not contain any direct identifiers (e.g. name, identifying numbers, etc.). 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:133:As described in section 5, the RPIs and TEKs generated by the app are a design feature whose purpose is to reduce the risk of re-identification to near zero. They are not directly identifiable, and of these elements, only the TEKs are stored on the key server and only when an individual has tested positive and chooses to upload this information. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:143:When a PT requests a one-time key so that it can be provided to the user, the PT system to obtain the key needs to prove to the key server that it is legitimate – i.e. that the PT system is run by a PT healthcare provider. To manage this authentication, the key server uses API tokens. Each API token is a random alphanumeric string of at least 20 characters, generated by CDS. CDS generates an API token for each PT system integrating with the key server to obtain one-time keys. The PT system provides that API token to the key server when requesting a one-time key. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:145:PTs can also generate one-time keys using a healthcare portal operated by the Government of Canada. In this case, healthcare workers who have been authorized by the PT can log in to a secure portal, managed by CDS. This healthcare portal does not contain any patient data and is only used to generate one-time keys, which it retrieves via API from the key server. PTs are responsible for designating officials in their healthcare organizations who can serve as administrators of the portal and manage user accounts for their PT.<sup id="f8">[[8]](#healthcare-portal-privacy)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:147:As described in section 5, the one-time key exists for the purpose of allowing users (who are provided the key by their province) to upload their diagnosis keys to the server, acting as an anti-spam measure to ensure fake diagnosis keys are not accidentally or maliciously uploaded. The diagnosis keys are not associated with the one-time key or uploaded to the server along with the key. Once the key is entered in the app by the user, it is sent directly from the app to the key server, and it’s not retained in the app. The key server then checks to see if that one-time key is valid or not. If it’s valid, the key server erases its record of the one-time key and allows the app to upload the device’s diagnosis keys, with the user’s consent, by exchanging an encryption keypair with the app to ensure the diagnosis keys are encrypted in transit. Thus, as noted, the one-time key is not associated with the uploaded diagnosis keys. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:149:Users have the option to enter the date of symptom onset or test date in order to refine the exposure notifications to users who were in close contact with a positive case during the period they were the most infectious. Although this data is not uploaded to the server, it’s theoretically possible to calculate the number of TEKs uploaded per event based on the size of the upload, and reverse-engineer a probable date of symptom onset or test based on that information and the log timestamp. Even if a probable date were reverse-engineered, the risk of re-identification remains low, as this would require effort and access equal to what would be needed to link a positive diagnosis to a specific IP address (more on IP addresses to follow). As well, even if this could be done, it is impossible to know which date it is – date of symptom onset or test date.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:151:For the 14 days after a diagnosis key is inputted, the app does “know” that a person successfully inputted a valid one-time key. This is so they have the option of uploading their diagnosis keys for the 14 days following receipt of a positive diagnosis (as well as the days before their positive diagnosis – number of days will depend on whether they entered the date of symptom onset or date tested). In the unfortunate scenario where an individual who has COVID-19 cannot self-quarantine, this individual uploads their temporary exposure keys to the key server, which then makes them available to be downloaded by other users’ phones, and the app on those phones and the API layer then do the match up to determine, with respect to each of those phones, whether the phone, and thus its owner, has been in contact with the phone of the individual who has tested positive for COVID-19.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:155:The IP address accompanies any request made to the key server (e.g., when a user chooses to upload their random codes, or enters their one-time key). However, the IP address is not intentionally “sent” by the app. It accompanies the request naturally: IP addresses are metadata required as part of the underlying internet protocol that powers data transmission over the Internet; without this, the app and the server would not be able to communicate. In other words, IP addresses accompany _all_ requests made to the server (one-time key generation, one-time key verification, diagnosis key upload, etc.). In most cases, the IP is not of the phone in particular, but of a wireless router or is dynamically assigned by a cellular network carrier. Few people have static IPs that are permanently associable to them, due to the limited number of IPv4 IP addresses. In sending that information, the IP accompanies the request, as with any request sent over the internet. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:157:In the event the one-time key is not valid, the user’s IP address is retained at the key server level for [a rolling window of sixty minutes](https://github.com/cds-snc/covid-shield-server/blob/d2f9cf605f73437d271a801db7acb87a6ce53db4/pkg/persistence/queries.go#L12-L15). After fifty consecutive invalid attempts from the same IP, the IP is blocked for sixty minutes. The associated IP address is deleted from the system sixty minutes after the last invalid attempt to verify a one-time key. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:159:IP addresses are stored in access logs on the AWS server, which is separate from the key server, for 3 months for all logs, and up to 24 months for those implicated in a security investigation, for cyber security systems to adequately understand, monitor, and respond to attacks against a system and for the secure and reliable operation of the service. Furthermore, IP addresses are not used by CDS to identify the source in any way, and they are not associated with any other data element in the server. The IP addresses are collected for security purposes. They are not used by the CDS-operated system to try to identify the source. IP addresses may be disclosed to law enforcement in the event a malicious actor attempted to gain, or gained, access to the server where they are stored. They would be deleted along with other data once the exposure notification system is shut down (i.e., once the pandemic is declared over), unless they are being retained for a security investigation.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:161:CDS does not have the technical means to connect an IP address or API token to an individual smartphone and/or individual. API tokens are only associated with PT systems integrating with the key server to obtain one-time keys. Regarding IP addresses, technically, this would require either sophisticated analysis (beyond CDS’s capabilities), or access to the subscriber lists of Internet service providers (not within CDS’s ability to access or compel).
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:167:When the test results system of a PT using this feature reaches out to the Government of Canada key server to obtain a one-time key, it passes along a cryptographically-generated HashID, generated using a series of one-way hashing algorithms. The HashID is generated by the PT based on unique data elements under their control, but hashed in such a way that when it is given to the Government of Canada, it is meaningless.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:169:While the HashID is stored on the Government of Canada key server, the information used to generate it is not. The HashID is associated with a one-time key when the key is generated.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:175:Data is collected from COVID Alert to enable HC to better measure and encourage app uptake, and monitor its performance and effectiveness in limiting the spread of COVID-19. The data used to develop metrics are collected by creating event logs of user experiences and/or actions. These event logs are transmitted to the key server and will be accompanied by the IP address; however, the event logs and the IP address will not be linkable and will never be stored together. The data will be encrypted in transit and stored in two ways on the key server: 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:184:In terms of security risk, someone with direct, server/database-level access to PT healthcare systems (healthcare worker, an IT person, or a malicious actor who’d broken into those systems) could determine whether or not a specific person who received a positive diagnosis had then decided to upload diagnosis keys. They could not track which diagnosis keys a patient subsequently uploaded.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:194:The context of the Government of Canada key server is at the lowest risk end of the spectrum: it is characterized by restricted access, strong IT security measures, and agreements in place.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:207:Here, the IP addresses on their own do not reveal individual identities; they’re stored on a secure server that only limited Government of Canada employees have access to, and they’re bound by security obligations to protect that information and not access or use it for nefarious purposes. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:211:In conclusion given the totality of the circumstances, while the data elements exchanged by the app, the central key server and the PT servers could be used in theory to produce personally identifiable information, the measures taken in developing the app, the central key server, and PT servers, in addition to the manner in which they collect, exchange, use and retain these data elements, reduce the risk to the lowest minimum possible. Our overall assessment is that it is so highly unlikely that an individual could be identified, that the collection of data elements (including IP addresses) and how they are used does not meet the threshold of “serious possibility” that an individual could be identified.<sup id="f9">[[9]](#gordon)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:221:Use of the app is voluntary. If users have been diagnosed with COVID-19 they will also be required to provide consent for their TEKs to be uploaded and made available to other users of the app. Note that no personally identifiable information is sent to other users; they are only notified that they have been exposed to COVID-19 once they download a corresponding diagnosis key from the key server. The voluntary nature of the app and the various layers of consent, coupled with the fact that it is unlikely that personal information will be collected by the Government of Canada aim to enhance the level of trust of Canadians to use this app. The effectiveness of the app is dependent on a certain level of uptake; therefore, trust is paramount. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:269:Once the determination has been made to shut down the app, all components of the service will be retired. This includes the key server and one-time-key portals, as well as the ability to download the app in the Apple and Google app stores. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:285:The app and its development is being implemented primarily by developers, designers, and researchers employed directly by the Government of Canada whose security clearance level is commensurate with the level of access they have. When external support is brought in on an advisory capacity (e.g., BlackBerry reviewing source code on a pro bono basis), it is without access to the system data. The code and infrastructure can be reviewed without providing any access to the data. When external support is brought in on a more hands-on capacity (e.g., developers with specialized mobile app or server infrastructure skills to ensure security and reliability at scale), those individuals will be under contract (either through procurement or through mechanisms like Interchange) which ensure they are held to the same standards as those employed directly by the Government of Canada. Security clearances will be required for anyone with access to sensitive infrastructure or data. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:287:In addition, the underlying cloud infrastructure that will host the key server (provided by Amazon Web Services and located in Canada) is procured through existing Shared Services Canada cloud framework agreements, subject to contractual terms to ensure access to data and systems is appropriately restricted. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:359:   <td>To <strong>key server</strong>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:366:<li>Provided to the <strong>app</strong> by the <strong>GA OS layer</strong>, with end-user’s consent (both through <strong>app</strong> and through operating system interface), to upload to <strong>key server</strong> 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:371:<li>The end-user must have received a random <em>one-time key</em> from a healthcare professional (or otherwise distributed through the PT’s test results notification process) to upload to the <strong>key server</strong>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:375:<li>On first upload, the person uploads their last 14 days worth (or shorter if they enter date of symptom onset or test date) of <em>Diagnosis Keys</em> to the <strong>key server</strong>; for each of subsequent 14 days, they’re also asked to consent to upload that day’s <em>Diagnosis Key</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:403:<li><strong>App</strong> would not transmit PII to the <strong>key server</strong>, in any case
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:413:   <td><strong>Server</strong>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:424:<li>When a person tests positive, they upload their non-expired <em>TEKs</em> to the <strong>key server</strong> as <em>Diagnosis Keys</em> (<em>TEKs</em> are retained on device only for 14 days) – i.e., the <strong>server</strong> holds confirmed-positive <em>TEKs</em>, known as <em>Diagnosis Keys</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:426:<li><em>Diagnosis Keys</em> are wiped from <strong>server</strong> database after their validity period (on the key server for 14 days, and up to an additional 7 days in database back-ups) expires
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:428:<li><strong>App</strong> downloads new <em>Diagnosis Keys</em> from the <strong>server</strong> at a regular interval (once every 4 to 24 hours depending on battery level, and when the app is opened; will also depend on internet access)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:430:<li><em>Diagnosis Keys</em> are grouped into 6-hour bundles (for all <em>Diagnosis Keys</em> received between midnight and six AM, the <strong>server</strong> bundles them as if they’d been received at midnight, so the <strong>app</strong> can’t determine the specific hour at which a <em>key</em> was uploaded) (TBD on 6 hour figure, likely increasing to 24 hours)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:438:   <td><strong>Server</strong>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:451:<li>Allows end-user to upload <em>Diagnosis Keys</em> to <strong>server</strong>: essentially an anti-spam measure (to ensure <em>Diagnosis Keys</em> aren’t accidentally or maliciously uploaded)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:466:   <td><strong>Server</strong>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:477:<li>Allows PTs to obtain <em>one-time keys</em> from the <strong>server</strong> to distribute to end-users through their test result notification processes
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:490:Before this change, the app metrics were only being collected from the COVID Alert server and the Google Play and Apple app stores. Those metrics included: 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:494:*   Number of one-time keys (OTKs) entered into the app (by PT).<sup id="f11">[[11]](#server-data)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:496:These metrics alone were insufficient to assess the effectiveness of the app on public health outcomes. HC continues to collect these metrics from the COVID Alert server and app stores, alongside the additional app metrics from the app outlined below. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:504:* **Number of users whose app changed to the “exposed” state:** When a user receives an exposure notification, the app status changes from “unexposed” to “exposed.” Each time this happens, the event would be logged and transmitted to the key server and aggregated to provide a total number of app users who received an exposure notification and the approximate number of exposure notifications sent. In addition, a separate event would be logged to provide a total number of users who received additional exposure notifications while their app was already in the “exposed” state. This data would also be cross-referenced with the selected PT to estimate the number of notifications received in each PT. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:522:Data is collected from COVID Alert to develop the app metrics that enable HC to assess app effectiveness and performance. The data used to develop the app metrics are collected by creating event logs of user experiences and/or actions. These event logs are transmitted to the key server and will be accompanied by the IP address; however, the event logs and the IP address will not be linkable and will never be stored together. The data will be encrypted in transit and stored in two ways on the key server: 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:551:Given these circumstances, and the measures taken to protect the data (e.g., limiting the retention of individual event logs, aggregating event logs, storing the data separate from IP addresses, and storing the data on a secure server with limited access), the data are unlikely to constitute personal information. In other words, there is a less than frivolous chance that an individual could be identified alone, or in combination with other available information. Therefore, it is unlikely that the _Privacy Act_ would be engaged on the collection of these metrics. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:567:     When a PT requests a one-time key so that it can be provided to the user, the PT system to obtain the key needs to prove to the key server that it is legitimate – i.e. that the PT system is run by a PT healthcare provider. To manage this authentication, the key server uses API tokens. Each API token is a random alphanumeric string of at least 20 characters, generated by CDS. CDS generates an API token for each PT system integrating with the key server to obtain one-time keys. The PT system provides that API token to the key server when requesting a one-time key. The API token cannot be linked to other information to identify an individual as it is meant to authenticate a PT system requesting a one-time key. A portion of the API token is stored alongside both one-time key entries and diagnosis keys during the 15-day period they are kept. In theory, this could be used to erase a set of keys that were uploaded maliciously if an API token given to a PT were compromised. It could also be used to help generate metrics per region to estimate uptake versus the number of published COVID cases. For example, we are currently disaggregating the one-time keys by province for server metrics, to know the number of one-time keys that were submitted by the province or territory. [↩](#f2)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:593:<a name="server-data">[11]</a>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:594:     The exhaustive data being collected by the Government of Canada from the server is:
./covid-alert-documentation/EvaluationViePriveeAlerteCOVID.md:93:La génération quotidienne de CET et la génération fréquente d’IPV sont des caractéristiques de conception visant à atténuer le risque de réidentification des utilisateurs. (De plus, ils sont conçus pour réduire au minimum transfert de données afin de conserver la bande passante.) Les IPV ne sont pas identifiables et ne sont pas accessibles à l’application ou transmises au serveur de clés. Par conception, les IPV sont censés être publics (ils sont partagés avec d’autres appareils par Bluetooth), et ne fournissent donc aucune forme de renseignements d’identifiables en l’absence d’autres renseignements. Même si un IPV était intercepté par un appareil exploité par un acteur malveillant, il serait un nombre totalement insignifiant, et ne serait pas relié à un appareil sans effort significatif. Les CET sont stockées sur l’appareil, mais l’on ne peut les communiquer au serveur de clés qu’en cas de résultat positif et de consentement explicite de l’utilisateur.
./covid-alert-documentation/EvaluationViePriveeAlerteCOVID.md:97:Bien que le portail dépendra de l’extraction de clés à usage unique provenant du serveur clé, il n’est pas connecté à l’application d’aucune façon et ne sera pas connecté à aucun système informatique d’une province ou d’un territoire. Seuls les renseignements personnels des administrateurs et des professionnels de la santé des provinces et des territoires seront recueillis de sorte qu’ils puissent créer des comptes au portail et extraire les clés à usage unique. Le portail ne recueillera ni ne conservera des renseignements sur les patients.
./covid-alert-documentation/EvaluationViePriveeAlerteCOVID.md:157:Dans le cas où la clé unique n’est pas valide, l’adresse IP de l’utilisateur est conservée au niveau du serveur de clés pendant une [période continue de 60 minutes](https://github.com/cds-snc/covid-shield-server/blob/d2f9cf605f73437d271a801db7acb87a6ce53db4/pkg/persistence/queries.go#L12-L15) (hyperlien en anglais seulement). Après cinquante tentatives invalides consécutives à partir de la même adresse IP, l’adresse IP est bloquée pendant soixante minutes. L’adresse IP connexe est supprimée du système soixante minutes après la dernière tentative non valide pour vérifier une clé unique.
./covid-alert-documentation/README.md:27:*   [Key server technical documentation](https://github.com/cds-snc/covid-alert-server#readme)
./covid-alert-documentation/README.md:82:*   [Documentation technique sur le serveur de clés](https://github.com/cds-snc/covid-alert-server#readme)
./covid-alert-documentation/product/metrics.md:26:| Number of background checks per app, per day, by type of device (iOS or Android)                            | A counter within the app which sends a daily total to the server                                                                                                             | Detect when issues occur with background checks                                                                |
./covid-alert-documentation/product/metrics.md:33:The data used to develop metrics will be collected by creating event logs of user experiences and/or actions. These event logs will be transmitted to the key server and will be accompanied by the IP address; however, the event logs and the IP address will not be linkable and will never be stored together. The data will be encrypted in transit.
./covid-alert-documentation/product/qr-codes.md:13:It’s not. This feature works in much the same privacy-protecting way that the rest of COVID Alert does. The list of locations where a user “scanned in” is saved only on their phone, and is never uploaded to a server. The phone regularly downloads the list of all locations flagged as “outbreaks” by public health authorities, and checks for any matches. If there is a match, the user receives a notification. The Government of Canada never has access to app users’ scan history. 
