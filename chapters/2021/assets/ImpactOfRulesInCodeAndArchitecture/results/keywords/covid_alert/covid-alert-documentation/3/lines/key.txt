./covid-alert-documentation/AccessibilityReport.md:29:*   **Physical:** Difficulty using a keyboard, mouse, or other physical tools commonly used to use a computer or mobile.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:25:This assessment will examine the privacy implications of the app, specifically in relation to the information/data that will be under the control of the Government of Canada, including the data that will be transmitted to the Government of Canada Server (key server). It will not examine any information under the control of the Provinces/Territories (PTs), such as the mechanism through which one-time keys are distributed to individuals for PTs who distribute one-time keys themselves.<sup id="f1">[[1]](#otp-portal)</sup> 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:35:The app is intended to complement existing measures to reduce the spread of the virus, including manual contact tracing. It serves to notify Canadians if they have been near someone who has been diagnosed with COVID-19 and is also using the app, and encourage them to take appropriate next steps (e.g. getting tested). If someone tests positive for COVID-19 in a PT using the app, local public health authorities may advise them on next steps and provide a one-time key to enter into the app, which will in turn notify other people using the app who have been near them. This will help to reduce the overall spread of the virus.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:51:CDS is responsible for providing internal support services (information technology services) to Health Canada. It is responsible for developing the technological components of the exposure notification app. In addition to developing the app itself, CDS operates the Government of Canada key server (located within Canada) that stores encrypted diagnosis keys that reflect positive COVID-19 cases. The key server operates on a cloud solution procured via Shared Services Canada cloud brokering service. CDS also provides support to PT partners as they integrate one-time key distribution into their result notification processes. This includes providing PTs access to one-time keys that users will enter into the app if they receive a positive diagnosis, through an API or a federally-run portal for authorized healthcare professionals.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:80:2. The key server (at the Federal level); and
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:81:3. The one-time key distribution process (at the provincial level).
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:91:Each device with the app installed is sending out and listening for random codes called rolling proximity identifiers (RPIs) which are not static: On a daily basis, the GAOS layer automatically generates a random temporary exposure key (TEK). The TEK of the day then generates a new RPI every five to twenty minutes. It is these ever-changing RPIs that are shared with other devices.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:93:The daily TEK generation and frequent RPI generation are design features with the purpose of minimizing the risk of re-identification of users. (In addition to this, they are designed to minimize data transfer to conserve bandwidth.) The RPIs are not identifiable and are not accessible to the app or transmitted to the key server. By design, the RPIs are meant to be public (they are shared to other devices via Bluetooth), and as such do not provide any form of identifying information in the absence of other information. Even if an RPI were intercepted by a device operated by a malicious actor, it would be an entirely meaningless number, and would not be linkable to a device without significant effort. TEKs are stored on the device, but may only be released to the key server in the case of a positive test result and explicit user consent.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:95:When a user receives a positive COVID-19 test result, PT health authorities who have adopted the app will provide them a one-time key<sup id="f2">[[2]](#otp-api-tokens)</sup> and instructions on how to enter it into the app.<sup id="f3">[[3]](#otp-pt-variation)</sup> Some PTs have the capacity to retrieve one-time keys from the key server using their existing IT infrastructure (e.g. some PTs have a platform to provide COVID-19 test results to individuals online, and the same platform can be used to issue one-time keys), while other PTs do not have this capacity (e.g. some provide test results over the phone). For the PTs that don’t have the capacity to retrieve the one-time keys, CDS developed the COVID Alert Portal (the portal) that PTs can use to retrieve the keys and provide them to app users who have tested positive for COVID-19. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:97:Although the portal will rely on retrieving one-time keys from the key server, it is not connected to the app in any way nor will it connect to any PT IT system. Only personal information about PT administrators and healthcare providers will be collected so they can create portal accounts and retrieve the one-time keys - no patient information will be collected or retained by the portal. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:99:When a one-time key is entered into the app, it will validate the key and ask the user if they would like their TEKs to be sent to the key server.<sup id="f4">[[4]](#dk-upload-process)</sup> If the individual says yes, the app communicates with the GAOS layer. The GAOS layer asks a second time whether the individual consents to sending their TEKs to the key server. If the individual consents, the TEKs are sent to the key server, allowing other users they have come in contact with in the past 14 days to be notified, once their app has downloaded these keys. App users also have the option of uploading their diagnosis keys for the 14 days _following_ receipt of a positive diagnosis, in the unfortunate scenario where an individual who has COVID-19 cannot self-quarantine (e.g. doesn’t have sick leave; lives alone and has to buy groceries, etc.). 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:103:After entering a one-time key, the user will be asked if they have symptoms and, if yes, the date when their symptoms started. If the user is not sure if they have symptoms or are asymptomatic, they will be asked for their test date. The user can choose not to answer any of the questions.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:107:The purpose is to be more precise by sending exposure notifications to users who the COVID-19-positive user was in contact with when they were likely to have been the most infectious. When a user enters a date of symptom onset or test, it is not sent to the key server. The date is stored on the phone until the user closes the screen, or completes the first upload of their TEKs, at which point the date is no longer stored anywhere. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:109:TEKs are generated once a day and expire after 14 days on the device. A TEK becomes a “diagnosis key” once released for upload to the key server. If the user consents to upload and transmit the diagnosis key, other users with whom they were in contact may receive a notification.<sup id="f6">[[6]](#dk-upload-next-steps)</sup> We note that if an individual has had contact with a very limited number of individuals in the past 14 days, it’s possible that the user who receives the notification may be able to associate it with an individual.<sup id="f7">[[7]](#limited-contact-scenario)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:113:On a pre-defined schedule (once every 4 to 24 hours depending on battery level, and when the app is opened), the app downloads new diagnosis keys from the key server. The app passes those diagnosis keys to the GAOS layer and the GAOS layer re-generates the RPIs from each of the provided diagnosis keys. The GAOS compares those regenerated RPIs to the list of locally-stored RPIs it has encountered in the last 14 days. If the GAOS layer finds that any of the re-generated and locally-stored RPIs match, and the exposure notification risk criteria are met (length of exposure, strength of signal, etc.), the GAOS layer sends a positive signal to the app. If the app receives a positive signal, it sends an exposure notification to the end-user. The matching happens on the device. The key server has no way of knowing if two devices interacted.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:115:When an app user tests positive for COVID-19 in a PT that has adopted the app, they will obtain a one-time key that will be provided to them by their PT (how this occurs will depend on the PT). This key is provided to the PT by the Government of Canada and the Government of Canada has no way of knowing who that key is associated with (in other words who the person is who will receive this key). All the Government of Canada knows is that someone in a given PT tested positive for COVID-19. That said, the MOUs with the PTs who adopt the app will include requirements to safeguard the keys, to ensure they are only retained as long as necessary and to delete them once obtained by the app user.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:125:The data elements (see [Appendix A](#appendix-a-list-of-covid-alert-app-data)) that will be under the control of the Government of Canada and stored in the Government of Canada key server (located in Canada) do not contain any direct identifiers (e.g. name, identifying numbers, etc.). 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:127:The following provides further information on RPIs and TEKs, on the issuance of the one-time keys that are provided to app users who receive a positive diagnosis, on the use of IP addresses for security reasons, the HashID, and the collection of app metrics. We will also provide more clarity regarding the very strong safeguards that are in place and the short retention of some of these elements. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:133:As described in section 5, the RPIs and TEKs generated by the app are a design feature whose purpose is to reduce the risk of re-identification to near zero. They are not directly identifiable, and of these elements, only the TEKs are stored on the key server and only when an individual has tested positive and chooses to upload this information. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:135:To elaborate, by design RPIs are meant to be public (they are shared to other devices via Bluetooth), and as such do not provide any form of identifying information in the absence of other information. Even if an RPI were intercepted by a device operated by a malicious actor, it would be a meaningless number on its own and would not be linkable to a device without significant effort. There is a very unlikely risk that a highly motivated malicious actor could leverage something called a “linkage attack.” By placing Bluetooth collection devices at various locations throughout a city – for example, at every road intersection – they could collect the RPIs of passerby. If an individual were then diagnosed and decided to upload their diagnosis keys, this attacker could recreate a device’s path through the city. That said, to effectively track somebody’s path, an attacker would have to have numerous collection devices deployed at significant density throughout an entire geographical region. Such an attack is a possibility, but requires extensive resources and expertise to implement. Further, the chance of such an attack being successful is even lower given that there is a high likelihood of the malicious actor being caught, and the attack being prevented.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:137:#### One-Time Keys, IP Addresses, API Tokens and HashIDs
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:139:##### One-Time Keys and API Tokens
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:141:When an app user tests positive for COVID-19 in a PT that has onboarded to the app, they will obtain a one-time key that will be provided to them by their PT (how this occurs will depend on the PT). This key is provided to the PT by the Government of Canada and the Government of Canada does not know who that key is associated with (in other words who the person is who will receive this key). All the Government of Canada knows is that someone has tested positive for COVID-19. That said, the MOUs with the PTs who onboard to the app will include requirements to safeguard the keys, to ensure they are only retained as long as necessary and to delete them once obtained by the app user. Additionally, each province will protect the information in accordance with the requirements imposed on them by applicable provincial or territorial legislation.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:143:When a PT requests a one-time key so that it can be provided to the user, the PT system to obtain the key needs to prove to the key server that it is legitimate – i.e. that the PT system is run by a PT healthcare provider. To manage this authentication, the key server uses API tokens. Each API token is a random alphanumeric string of at least 20 characters, generated by CDS. CDS generates an API token for each PT system integrating with the key server to obtain one-time keys. The PT system provides that API token to the key server when requesting a one-time key. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:145:PTs can also generate one-time keys using a healthcare portal operated by the Government of Canada. In this case, healthcare workers who have been authorized by the PT can log in to a secure portal, managed by CDS. This healthcare portal does not contain any patient data and is only used to generate one-time keys, which it retrieves via API from the key server. PTs are responsible for designating officials in their healthcare organizations who can serve as administrators of the portal and manage user accounts for their PT.<sup id="f8">[[8]](#healthcare-portal-privacy)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:147:As described in section 5, the one-time key exists for the purpose of allowing users (who are provided the key by their province) to upload their diagnosis keys to the server, acting as an anti-spam measure to ensure fake diagnosis keys are not accidentally or maliciously uploaded. The diagnosis keys are not associated with the one-time key or uploaded to the server along with the key. Once the key is entered in the app by the user, it is sent directly from the app to the key server, and it’s not retained in the app. The key server then checks to see if that one-time key is valid or not. If it’s valid, the key server erases its record of the one-time key and allows the app to upload the device’s diagnosis keys, with the user’s consent, by exchanging an encryption keypair with the app to ensure the diagnosis keys are encrypted in transit. Thus, as noted, the one-time key is not associated with the uploaded diagnosis keys. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:151:For the 14 days after a diagnosis key is inputted, the app does “know” that a person successfully inputted a valid one-time key. This is so they have the option of uploading their diagnosis keys for the 14 days following receipt of a positive diagnosis (as well as the days before their positive diagnosis – number of days will depend on whether they entered the date of symptom onset or date tested). In the unfortunate scenario where an individual who has COVID-19 cannot self-quarantine, this individual uploads their temporary exposure keys to the key server, which then makes them available to be downloaded by other users’ phones, and the app on those phones and the API layer then do the match up to determine, with respect to each of those phones, whether the phone, and thus its owner, has been in contact with the phone of the individual who has tested positive for COVID-19.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:155:The IP address accompanies any request made to the key server (e.g., when a user chooses to upload their random codes, or enters their one-time key). However, the IP address is not intentionally “sent” by the app. It accompanies the request naturally: IP addresses are metadata required as part of the underlying internet protocol that powers data transmission over the Internet; without this, the app and the server would not be able to communicate. In other words, IP addresses accompany _all_ requests made to the server (one-time key generation, one-time key verification, diagnosis key upload, etc.). In most cases, the IP is not of the phone in particular, but of a wireless router or is dynamically assigned by a cellular network carrier. Few people have static IPs that are permanently associable to them, due to the limited number of IPv4 IP addresses. In sending that information, the IP accompanies the request, as with any request sent over the internet. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:157:In the event the one-time key is not valid, the user’s IP address is retained at the key server level for [a rolling window of sixty minutes](https://github.com/cds-snc/covid-shield-server/blob/d2f9cf605f73437d271a801db7acb87a6ce53db4/pkg/persistence/queries.go#L12-L15). After fifty consecutive invalid attempts from the same IP, the IP is blocked for sixty minutes. The associated IP address is deleted from the system sixty minutes after the last invalid attempt to verify a one-time key. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:159:IP addresses are stored in access logs on the AWS server, which is separate from the key server, for 3 months for all logs, and up to 24 months for those implicated in a security investigation, for cyber security systems to adequately understand, monitor, and respond to attacks against a system and for the secure and reliable operation of the service. Furthermore, IP addresses are not used by CDS to identify the source in any way, and they are not associated with any other data element in the server. The IP addresses are collected for security purposes. They are not used by the CDS-operated system to try to identify the source. IP addresses may be disclosed to law enforcement in the event a malicious actor attempted to gain, or gained, access to the server where they are stored. They would be deleted along with other data once the exposure notification system is shut down (i.e., once the pandemic is declared over), unless they are being retained for a security investigation.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:161:CDS does not have the technical means to connect an IP address or API token to an individual smartphone and/or individual. API tokens are only associated with PT systems integrating with the key server to obtain one-time keys. Regarding IP addresses, technically, this would require either sophisticated analysis (beyond CDS’s capabilities), or access to the subscriber lists of Internet service providers (not within CDS’s ability to access or compel).
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:167:When the test results system of a PT using this feature reaches out to the Government of Canada key server to obtain a one-time key, it passes along a cryptographically-generated HashID, generated using a series of one-way hashing algorithms. The HashID is generated by the PT based on unique data elements under their control, but hashed in such a way that when it is given to the Government of Canada, it is meaningless.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:169:While the HashID is stored on the Government of Canada key server, the information used to generate it is not. The HashID is associated with a one-time key when the key is generated.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:171:This feature was initially added at the request of Ontario, to prevent abuse of the system. Storing the HashID alongside the generated one-time key allows for PT systems to verify whether to issue a new one-time key or not—the PT system can see whether or not a previously provided one-time key had already been claimed. If a previously provided one-time key has not yet been claimed, then generating a new one-time key with the same HashID automatically invalidates the previous one-time key. If the previous one-time key was already claimed, a new key is not generated.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:175:Data is collected from COVID Alert to enable HC to better measure and encourage app uptake, and monitor its performance and effectiveness in limiting the spread of COVID-19. The data used to develop metrics are collected by creating event logs of user experiences and/or actions. These event logs are transmitted to the key server and will be accompanied by the IP address; however, the event logs and the IP address will not be linkable and will never be stored together. The data will be encrypted in transit and stored in two ways on the key server: 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:184:In terms of security risk, someone with direct, server/database-level access to PT healthcare systems (healthcare worker, an IT person, or a malicious actor who’d broken into those systems) could determine whether or not a specific person who received a positive diagnosis had then decided to upload diagnosis keys. They could not track which diagnosis keys a patient subsequently uploaded.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:186:PTs will be expected to use sufficiently strong cryptographic hashing algorithms (implementing appropriate security measures will form part of the agreements with the provinces), so that the Government of Canada is unable to identify somebody with the HashID. Furthermore, it cannot be linked with any data in Government of Canada possession to determine whether somebody had uploaded diagnosis keys or not.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:194:The context of the Government of Canada key server is at the lowest risk end of the spectrum: it is characterized by restricted access, strong IT security measures, and agreements in place.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:211:In conclusion given the totality of the circumstances, while the data elements exchanged by the app, the central key server and the PT servers could be used in theory to produce personally identifiable information, the measures taken in developing the app, the central key server, and PT servers, in addition to the manner in which they collect, exchange, use and retain these data elements, reduce the risk to the lowest minimum possible. Our overall assessment is that it is so highly unlikely that an individual could be identified, that the collection of data elements (including IP addresses) and how they are used does not meet the threshold of “serious possibility” that an individual could be identified.<sup id="f9">[[9]](#gordon)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:221:Use of the app is voluntary. If users have been diagnosed with COVID-19 they will also be required to provide consent for their TEKs to be uploaded and made available to other users of the app. Note that no personally identifiable information is sent to other users; they are only notified that they have been exposed to COVID-19 once they download a corresponding diagnosis key from the key server. The voluntary nature of the app and the various layers of consent, coupled with the fact that it is unlikely that personal information will be collected by the Government of Canada aim to enhance the level of trust of Canadians to use this app. The effectiveness of the app is dependent on a certain level of uptake; therefore, trust is paramount. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:269:Once the determination has been made to shut down the app, all components of the service will be retired. This includes the key server and one-time-key portals, as well as the ability to download the app in the Apple and Google app stores. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:287:In addition, the underlying cloud infrastructure that will host the key server (provided by Amazon Web Services and located in Canada) is procured through existing Shared Services Canada cloud framework agreements, subject to contractual terms to ensure access to data and systems is appropriately restricted. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:311:   <td><em>Temporary Exposure Key (TEK)</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:324:<li>Become “<em>Diagnosis Keys</em>” once released to the <strong>app</strong> for upload after positive diagnosis and end-user consent
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:355:   <td><em>Diagnosis Keys</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:359:   <td>To <strong>key server</strong>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:364:<li><em>TEKs</em> become <em>Diagnosis Keys</em> when a positive diagnosis is received and the end-user consents to their release
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:366:<li>Provided to the <strong>app</strong> by the <strong>GA OS layer</strong>, with end-user’s consent (both through <strong>app</strong> and through operating system interface), to upload to <strong>key server</strong> 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:371:<li>The end-user must have received a random <em>one-time key</em> from a healthcare professional (or otherwise distributed through the PT’s test results notification process) to upload to the <strong>key server</strong>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:375:<li>On first upload, the person uploads their last 14 days worth (or shorter if they enter date of symptom onset or test date) of <em>Diagnosis Keys</em> to the <strong>key server</strong>; for each of subsequent 14 days, they’re also asked to consent to upload that day’s <em>Diagnosis Key</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:403:<li><strong>App</strong> would not transmit PII to the <strong>key server</strong>, in any case
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:415:   <td><em>Diagnosis Keys</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:424:<li>When a person tests positive, they upload their non-expired <em>TEKs</em> to the <strong>key server</strong> as <em>Diagnosis Keys</em> (<em>TEKs</em> are retained on device only for 14 days) – i.e., the <strong>server</strong> holds confirmed-positive <em>TEKs</em>, known as <em>Diagnosis Keys</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:426:<li><em>Diagnosis Keys</em> are wiped from <strong>server</strong> database after their validity period (on the key server for 14 days, and up to an additional 7 days in database back-ups) expires
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:428:<li><strong>App</strong> downloads new <em>Diagnosis Keys</em> from the <strong>server</strong> at a regular interval (once every 4 to 24 hours depending on battery level, and when the app is opened; will also depend on internet access)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:430:<li><em>Diagnosis Keys</em> are grouped into 6-hour bundles (for all <em>Diagnosis Keys</em> received between midnight and six AM, the <strong>server</strong> bundles them as if they’d been received at midnight, so the <strong>app</strong> can’t determine the specific hour at which a <em>key</em> was uploaded) (TBD on 6 hour figure, likely increasing to 24 hours)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:432:<li>Associated metadata: hour generated (rounded to hour to reduce privacy risk); validity period; transmission risk level (TBD how set/used, if at all); <em>API key</em> that generated the <em>one-time key</em> authorizing upload
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:440:   <td><em>One-time keys</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:451:<li>Allows end-user to upload <em>Diagnosis Keys</em> to <strong>server</strong>: essentially an anti-spam measure (to ensure <em>Diagnosis Keys</em> aren’t accidentally or maliciously uploaded)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:453:<li>Associated metadata: time of creation, how many <em>Diagnosis Keys</em> can be uploaded with the one-time key; cryptographic public key; cryptographic private key 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:456:<li><em>One-time key</em> is struck from database once “claimed” by the end-user (i.e., entered into the <strong>app</strong>)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:458:<li><em>One-time key</em> is replaced by crypto public key and crypto private key once claimed; public key is shared with <strong>app</strong> to allow encrypted upload of <em>Diagnosis Keys</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:468:   <td><em>API keys for one-time keys</em>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:477:<li>Allows PTs to obtain <em>one-time keys</em> from the <strong>server</strong> to distribute to end-users through their test result notification processes
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:494:*   Number of one-time keys (OTKs) entered into the app (by PT).<sup id="f11">[[11]](#server-data)</sup>
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:504:* **Number of users whose app changed to the “exposed” state:** When a user receives an exposure notification, the app status changes from “unexposed” to “exposed.” Each time this happens, the event would be logged and transmitted to the key server and aggregated to provide a total number of app users who received an exposure notification and the approximate number of exposure notifications sent. In addition, a separate event would be logged to provide a total number of users who received additional exposure notifications while their app was already in the “exposed” state. This data would also be cross-referenced with the selected PT to estimate the number of notifications received in each PT. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:506:* **Number of app users who enter a one-time key (OTK) after receiving an exposure notification:** If a user tests positive for COVID-19 and enters an OTK in the app while the app is in the “exposed” state, this would provide metrics on the approximate number of users who tested positive after receiving an exposure notification. This data would be cross-referenced with the selected PT to estimate the number of users who tested positive after receiving an exposure notification in each PT. 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:511:     *   The number of “date of symptom onset” or “test date” submitted when uploading Temporary Exposure Keys (TEKs). The dates themselves are not shared.
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:522:Data is collected from COVID Alert to develop the app metrics that enable HC to assess app effectiveness and performance. The data used to develop the app metrics are collected by creating event logs of user experiences and/or actions. These event logs are transmitted to the key server and will be accompanied by the IP address; however, the event logs and the IP address will not be linkable and will never be stored together. The data will be encrypted in transit and stored in two ways on the key server: 
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:564:     This analysis does not include a full privacy analysis of the distribution of one-time keys for PTs using the federal COVID Alert portal; however, it does provide a brief overview of the portal as well as a description of the information collected. The full privacy analysis for the portal was undertaken separately. [↩](#f1)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:567:     When a PT requests a one-time key so that it can be provided to the user, the PT system to obtain the key needs to prove to the key server that it is legitimate – i.e. that the PT system is run by a PT healthcare provider. To manage this authentication, the key server uses API tokens. Each API token is a random alphanumeric string of at least 20 characters, generated by CDS. CDS generates an API token for each PT system integrating with the key server to obtain one-time keys. The PT system provides that API token to the key server when requesting a one-time key. The API token cannot be linked to other information to identify an individual as it is meant to authenticate a PT system requesting a one-time key. A portion of the API token is stored alongside both one-time key entries and diagnosis keys during the 15-day period they are kept. In theory, this could be used to erase a set of keys that were uploaded maliciously if an API token given to a PT were compromised. It could also be used to help generate metrics per region to estimate uptake versus the number of published COVID cases. For example, we are currently disaggregating the one-time keys by province for server metrics, to know the number of one-time keys that were submitted by the province or territory. [↩](#f2)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:599:*   number of unclaimed encryption keys, by PT (an encryption key is what you get in return for claiming an OTK, so this metric represents number of unclaimed OTKs)
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:600:*   number of expired claimed encryption keys, by PT
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:601:*   number of expired claimed encryption keys with no uploads, by PT
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:602:*   number of exhausted encryption keys by PT
./covid-alert-documentation/COVIDAlertPrivacyAssessment.md:604:*   number of TEKs uploaded after an initial upload (number of keys uploaded in a batch, not connected to any device or user)
./covid-alert-documentation/README.md:18:*   [How might people positive for COVID-19 react to the ‘One-time key’?](https://github.com/cds-snc/covid-alert-documentation/blob/main/research/LiteratureReview.md) (Literature review, July 28 2020)
./covid-alert-documentation/README.md:19:*   [How well does the app support users when they receive a positive diagnosis (and one-time key)?](https://github.com/cds-snc/covid-alert-documentation/blob/main/research/UsabilityAug2020.md) (Usability testing, Aug 25 2020)
./covid-alert-documentation/README.md:27:*   [Key server technical documentation](https://github.com/cds-snc/covid-alert-server#readme)
./covid-alert-documentation/README.md:47:The app is intended to complement existing measures to reduce the spread of the virus, including manual contact tracing. It serves to notify Canadians if they have been near someone who has been diagnosed with COVID-19 and is also using the app, and encourage them to take appropriate next steps (e.g. getting tested). If someone tests positive for COVID-19 in a Province or Territory using the app, local public health authorities may advise them on next steps and provide a one-time key to enter into the app, which will in turn notify other people using the app who have been near them within the last 14 days. This will help to reduce the overall spread of the virus.
./covid-alert-documentation/product/metrics.md:15:| Number of users who enter a one-time key when in the exposed state, by province or territory | Event is triggered when a user enters an OTK and exposed state is `true`                                                                                                               | Understand how many people receive an exposure notification and then test positive for COVID-19 -- effectively, understand how the app is limiting the spread |
./covid-alert-documentation/product/metrics.md:22:| Number of "date of symptom onset" or "test date" submitted when sharing exposures, by province or territory | Event is triggered when Temporary Exposure Keys are uploaded and "date of symptom onset" or "test date" = `true`                                                             | Understand how many positive cases are sharing exposures within a modified contagious period                   |
./covid-alert-documentation/product/metrics.md:33:The data used to develop metrics will be collected by creating event logs of user experiences and/or actions. These event logs will be transmitted to the key server and will be accompanied by the IP address; however, the event logs and the IP address will not be linkable and will never be stored together. The data will be encrypted in transit.
./covid-alert-documentation/research/LiteratureReview.md:3:# How might people positive for COVID-19 react to the ‘One-time key’?
./covid-alert-documentation/research/LiteratureReview.md:12:A service to deliver exposure notifications can be an effective tool to slow the spread of COVID-19. For the COVID Alert service to work, people diagnosed with the virus have to enter a ‘one-time key’ into the mobile application to send out exposure notifications. Contact tracers at regional health authorities, and other select healthcare workers, can generate the keys on the COVID Alert portal and distribute them to people when they inform them about their positive diagnosis. For the service to work, we need to ensure the successful handoff of this key from the healthcare workers to the people who test positive. In this document, we summarize some existing research relevant to making the key handoff work for people.
./covid-alert-documentation/research/LiteratureReview.md:14:We looked at research related to the key handoff based on three sources:
./covid-alert-documentation/research/LiteratureReview.md:28:At this time, the service relies on the healthcare workers sharing the one-time key when they inform the individual of a positive test for COVID-19. Research suggests that in such a possibly emotional situation, the patient may not be able to follow instructions in order to enter the key into the app.
./covid-alert-documentation/research/LiteratureReview.md:60:One other concern is that distinguishing between different types of keys/codes can be difficult. ODS and [Dutch usability studies](https://corona.sticktailapp.com/share/view/099d845b35b3b68/wJEdnvsNTHDA/ex-patienten-stuurden-zelf-hun-contacten-een-bericht/) uncovered confusion between the codes traded between users and the code verifying a positive diagnosis. Content must try to clarify this difference as well as possible.
./covid-alert-documentation/research/LiteratureReview.md:63:### No ability to paste the key
./covid-alert-documentation/research/LiteratureReview.md:65:People are used to cutting and pasting keys from one place to another on their devices. In our beta test, testers expressed some frustration that they could not paste the key into the app after copying the key on their device. This issue was fixed on the app, but important to consider as small things like pasting in the key will be helpful in stressful situations.
./covid-alert-documentation/research/LiteratureReview.md:73:One encouraging finding that this handoff can be successful comes from the Netherlands. Usability testing there showed that people were able to enter the code smoothly. One way the app users ensured the key was accurate was [using the phonetic alphabet](https://corona.sticktailapp.com/share/view/e1733fb74d0b64c/VC0JRwP3PCAg/aangeven-dat-je-positief-getest-bent-gaat-relatief-soepel-maar-er-is-nog-wel-verwarring-over-controlecode-en-codes-uploaden/) in order to confirm the letters over the phone (“Alpha” for “A”, “Bravo” for “B”, but the Dutch version). 
./covid-alert-documentation/research/LiteratureReview.md:85:1. Provide patients adequate time to process the news and avoid short expiry time for the key. 
./covid-alert-documentation/research/LiteratureReview.md:88:    *   Healthcare workers follow up on the initial call to check in with patients and discuss the key and other relevant information.
./covid-alert-documentation/research/LiteratureReview.md:89:    *   And/or follow up the initial call with other automated communications that include the one-time key in a written format (e.g. SMS). 
./covid-alert-documentation/research/LiteratureReview.md:91:5. Investigate how stressful delivering the key is for healthcare workers.
./covid-alert-documentation/research/LiteratureReview.md:92:6. As we’re already working on, use the phonetic alphabet to distinguish letters when sharing a key over the phone.
./covid-alert-documentation/research/UsabilityAug2020.md:3:# How well does the app support users when they receive a positive diagnosis (and one-time key)?
./covid-alert-documentation/research/UsabilityAug2020.md:11:9 people participated in a study of the one-time key handoff for COVID Alert: 5 English speakers and 4 French speakers. Testing was conducted in the week of August 14th, 2020. Most participants were early adopters of the technology and were following the news and efforts for the mobile app. They had the live app installed on their phones. One was a beta tester and a few downloaded it as soon as it was available. For the purposes of this study, participants used a Figma prototype that mimics some but not all of the interactivity of the live app. 
./covid-alert-documentation/research/UsabilityAug2020.md:13:For the purpose of research, a colleague at CDS acted as a public health nurse and gave out the one-time keys.
./covid-alert-documentation/research/UsabilityAug2020.md:33:*   Confusion between key and codes: (Paraphrasing) “I have entered only one code, why is it asking me to send all the codes?”
./covid-alert-documentation/research/UsabilityAug2020.md:70:## What made it difficult for participants to input the one-time key?
./covid-alert-documentation/research/UsabilityAug2020.md:79:*   “Tap for menu” label was not immediately clear for one person as a place to enter the code. Menu page has “a lot of things”, a lot of uses of the word “key”. One person thought he might click: “get a one time key” instead of “Enter your one-time key”.
./covid-alert-documentation/research/UsabilityAug2020.md:84:![Screenshot of the main screen with the label “Tap for menu” at the bottom, with no clear indication where the key should be put in.](images/MainScreen.png "Screenshot")
./covid-alert-documentation/research/UsabilityAug2020.md:90:![Screenshot of the menu with 8 different clickable labels, two of them being about the ‘one-time key’. Overall, the menu shows the word ‘key’ 3 times.](images/Menu.png "Screenshot")
./covid-alert-documentation/research/UsabilityAug2020.md:94:*   A few people asked the person playing the role of nurse if they should enter their key in upper or lower case but the “nurse” told them either works. This is also a question that regional health authorities had during their regional onboarding onto the portal.
./covid-alert-documentation/research/UsabilityAug2020.md:96:*   Confusion between keys and codes: (Paraphrasing) “I have entered only one code, why is it asking me to send all the codes?”
./covid-alert-documentation/research/UsabilityAug2020.md:98:*   One person noted that “téléverser les codes” is easy to confuse with ‘one-time key’
./covid-alert-documentation/research/UsabilityAug2020.md:100:*   One person noted that others may have trouble switching from the phone app while they’re talking to the nurse, to the COVID Alert app, while trying to enter their key and may require additional instructions.
./covid-alert-documentation/research/UsabilityAug2020.md:122:    *   Pick up the phone with one hand, writing down notes with the other. Switch to speaker to enter the key.
./covid-alert-documentation/research/UsabilityAug2020.md:123:    *   Pick up the phone and hold it with her shoulder, note down the key. Switch to speaker phone.
./covid-alert-documentation/research/UsabilityAug2020.md:127:*   The fact that participants were not able to hear the “nurse” and enter the code at the same time seemed to cause discomfort. People generally switched to speaker phones when the “nurse” asked whether they were ready to enter the key.
./covid-alert-documentation/research/UsabilityAug2020.md:130:*   Some wrote the key down. They thought the “nurse” could prompt them to get paper and pen.
./covid-alert-documentation/research/UsabilityAug2020.md:132:*   Some people spontaneously repeated the key back to the nurse. On one phone call, the participant was not guided to the ‘Thank you’ screen.
./covid-alert-documentation/research/UsabilityAug2020.md:133:*   During 2 of the sessions, there were breaks in the phone call connection. The breaks didn’t happen when the key was being read aloud, but it is a potential issue.
./covid-alert-documentation/research/UsabilityAug2020.md:146:    *   People noted that by the time they enter their key, it may be months after they have downloaded and onboarded onto the app. When they upload their codes, it may be a good opportunity to be reminded of the privacy implications of doing so. 
