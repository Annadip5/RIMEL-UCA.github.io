/mnt/c/Users/conig/Desktop/test/covid-alert-server/.devcontainer/Dockerfile:31:    && apt-get clean -y \
/mnt/c/Users/conig/Desktop/test/covid-alert-server/.git/hooks/pre-rebase.sample:118:    clean up before publishing, and things that have not been
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-server/.git/index matches
Binary file /mnt/c/Users/conig/Desktop/test/covid-alert-server/.git/objects/pack/pack-0114be98b3fe31909bf2065d859d0464b1507baa.pack matches
/mnt/c/Users/conig/Desktop/test/covid-alert-server/bin/clear-diagnosis-keys.sh:16:echo "CLEARING DIAGNOSIS KEYS"
/mnt/c/Users/conig/Desktop/test/covid-alert-server/go.sum:154:github.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=
/mnt/c/Users/conig/Desktop/test/covid-alert-server/Makefile:69:clean:
/mnt/c/Users/conig/Desktop/test/covid-alert-server/Makefile:75:clean-proto:
/mnt/c/Users/conig/Desktop/test/covid-alert-server/Makefile:86:.PHONY: all default release generate clean test proto clean-proto format
/mnt/c/Users/conig/Desktop/test/covid-alert-server/mocks/pkg/persistence/Conn.go:114:// ClearDiagnosisKeys provides a mock function with given fields: _a0
/mnt/c/Users/conig/Desktop/test/covid-alert-server/mocks/pkg/persistence/Conn.go:115:func (_m *Conn) ClearDiagnosisKeys(_a0 context.Context) error {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/mocks/pkg/telemetry/Cleanuper.go:7:// Cleanuper is an autogenerated mock type for the Cleanuper type
/mnt/c/Users/conig/Desktop/test/covid-alert-server/mocks/pkg/telemetry/Cleanuper.go:8:type Cleanuper struct {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/mocks/pkg/telemetry/Cleanuper.go:12:// Cleanup provides a mock function with given fields:
/mnt/c/Users/conig/Desktop/test/covid-alert-server/mocks/pkg/telemetry/Cleanuper.go:13:func (_m *Cleanuper) Cleanup() {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/package-lock.json:1365:      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/cmd/cmd.go:19:	defer telemetry.Initialize(db).Cleanup()
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/db.go:61:	ClearDiagnosisKeys(context.Context) error
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools.go:9:// ClearDiagnosisKeys Truncates the diagnosis_keys table to support testing
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools.go:10:func (c *conn) ClearDiagnosisKeys(ctx context.Context) error {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools.go:11:	return clearDiagnosisKeys(ctx, c.db)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools.go:14:func clearDiagnosisKeys(ctx context.Context, db *sql.DB) error {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools.go:17:		panic("un-allowed attempt to call clearDiagnosis keys")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools_test.go:15:	assert.Panics(t, func() { clearDiagnosisKeys(nil,nil) }, "Should panic if ENABLE_TEST_TOOLS is not enabled")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools_test.go:20:	assert.Panics(t, func() { clearDiagnosisKeys(nil,nil) }, "Should panic if ENABLE_TEST_TOOLS is set to false")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools_test.go:25:	assert.Panics(t, func() { clearDiagnosisKeys(nil,nil) }, "Should panic if ENABLE_TEST_TOOLS is not true")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools_test.go:39:	assert.NotPanics(t, func() {_ = clearDiagnosisKeys(nil, db) }, "expect to not panic if ENABLE_TEST_TOOLS is true")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/persistence/test_tools_test.go:56:	err := clearDiagnosisKeys(nil, db)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/retrieval/retrieval.go:36:// It's still really unclear to me when A/G wants us to use MCC and when we're
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/keyclaim_test.go:324:	//Clear IP failure
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/keyclaim_test.go:522:	// Success with normal code - but error clearing IP
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools.go:30:	r.HandleFunc("/clear-diagnosis-keys", t.clearDiagnosisKeys)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools.go:39:func (t *testToolsServlet) clearDiagnosisKeys(w http.ResponseWriter, r *http.Request) {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools.go:56:	if err := t.db.ClearDiagnosisKeys(ctx); err != nil {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools.go:57:		log(ctx, err).Error("unable to clear diagnosis_keys")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools.go:58:		http.Error(w, "unable to clear diagnosis_keys", http.StatusInternalServerError)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools.go:62:	log(ctx, nil).Info("cleared diagnosis_keys")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools.go:64:	w.Write([]byte("cleared diagnosis_keys"))
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:47:	assert.Contains(t, expectedPaths, "/clear-diagnosis-keys", "should include a /clear-diagnosis-keys path")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:80:	req, _ := http.NewRequest("POST", "/clear-diagnosis-keys", nil)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:104:	req, _ := http.NewRequest("POST", "/clear-diagnosis-keys", nil)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:124:	req, _ := http.NewRequest("GET", "/clear-diagnosis-keys", nil)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:134:func TestTestToolsServlet_ClearDiagnosisKeys(t *testing.T) {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:138:	db.On("ClearDiagnosisKeys", mock.Anything).Return(nil)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:147:	req, _ := http.NewRequest("POST", "/clear-diagnosis-keys", nil)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:153:	assert.Equal(t, "cleared diagnosis_keys", string(resp.Body.Bytes()), "Correct response is expected")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:155:	testhelpers.AssertLog(t, hook, 1, logrus.InfoLevel, "cleared diagnosis_keys")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:159:func TestTestToolsServlet_ClearDiagnosisKeysFailed(t *testing.T) {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:163:	db.On("ClearDiagnosisKeys", mock.Anything).Return(fmt.Errorf("oh no"))
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:172:	req, _ := http.NewRequest("POST", "/clear-diagnosis-keys", nil)
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:178:	assert.Equal(t, "unable to clear diagnosis_keys\n", string(resp.Body.Bytes()), "Correct response is expected")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/server/test_tools_test.go:180:	testhelpers.AssertLog(t, hook, 1, logrus.ErrorLevel, "unable to clear diagnosis_keys")
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:30:type Cleanuper interface {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:31:	Cleanup()
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:34:// traceMetricCleaner implements Cleanuper.
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:35:type traceMetricCleaner struct {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:40:func (c *traceMetricCleaner) Cleanup() {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:45:func Initialize(db persistence.Conn) Cleanuper {
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:46:	return &traceMetricCleaner{tracer: InitTracer(), meter: InitMeter(db)}
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:51:	// Some providers require cleanup
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:52:	cleanupFunc := func() {}
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:57:		return cleanupFunc
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:82:	return cleanupFunc
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:87:	cleanupFunc := func() {}
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:92:		return cleanupFunc
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:106:		cleanupFunc = pusher.Stop
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/telemetry/telemetry.go:127:	return cleanupFunc
/mnt/c/Users/conig/Desktop/test/covid-alert-server/pkg/workers/expiration.go:70:	// Run the worker once, before returning, to clean out old data on boot.
