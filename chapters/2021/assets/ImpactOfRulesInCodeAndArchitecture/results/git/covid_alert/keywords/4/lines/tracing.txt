./results/git/covid_alert/issue_comment_file_github.txt:356:https://api.github.com/repos/cds-snc/covid-alert-documentation/issues/10,The point is, the key for deploying this app is to gain some community trust and vague descriptions are not helping. If somebody doesn't understand how it works, they will not read Google's contact tracing scanning flow sequence diagrams, but simply will shrug off this app.
./results/git/covid_alert/issue_comment_file_github.txt:367:As an example, you would describe that Rolling Proximity Identifier is generated every 15 minutes, so if somebody followed a person with the same device in Bluetooth signal proximity, they wouldn't track the person because RPI's are generated every 15 minutes. Same for all bits - daily tracing keys, diagnosis keys, etc.
./results/git/covid_alert/issue_comment_file_github.txt:369:If you don't describe those, no amount of doctors saying they love this app will help installing it on as many devices as is needed for contact tracing.
./results/git/covid_alert/issue_comment_file_github.txt:389:The point is, the key for deploying this app is to gain some community trust and vague descriptions are not helping. If somebody doesn't understand how it works, they will not read Google's contact tracing scanning flow sequence diagrams, but simply will shrug off this app.
./results/git/covid_alert/issue_comment_file_github.txt:400:As an example, you would describe that Rolling Proximity Identifier is generated every 15 minutes, so if somebody followed a person with the same device in Bluetooth signal proximity, they wouldn't track the person because RPI's are generated every 15 minutes. Same for all bits - daily tracing keys, diagnosis keys, etc.
./results/git/covid_alert/issue_comment_file_github.txt:402:If you don't describe those, no amount of doctors saying they love this app will help installing it on as many devices as is needed for contact tracing.
./results/git/covid_alert/issue_comment_file_github.txt:435:You need to come up with a good diagram that shows how the app interacts with other phones, how it receives diagnostic keys and matches them up against RPE's, whether a tracing key, which uniquely identifies the device, ever gets into the cloud database, what the device public key in the database is used for, and so on. This is just to show people what the app does.
./results/git/covid_alert/issue_comment_file_github.txt:441:One important point in all of this, I'm not asking this for myself to entertain my curiosity about the app. If you want the app to be used, this is what needs to be done to convince the layer of the population who are not completely against it, but not quite sure what the app does. You can ignore this, but it will not help you to install the app in numbers we all need to make contact tracing useful.
./results/git/covid_alert/issue_comment_file_github.txt:448:Most of what you're asking for is actually the domain of the Exposure Notification frameworks in Android and iOS. While it's true that COVID Shield and COVID Alert would do well to explain this integrated system of app and framework holistically, the reason the early documentation doesn't have the information you're looking to find is that the framework parts are extensively documented in a more global way ([example](https://www.apple.com/covid19/contacttracing), [example](https://ncase.me/contact-tracing/)). The truly novel parts of the app and server are few and far between; the mobile application is, to a larger extent than one would initially guess, just a pretty wrapper around a small handful of framework calls. The One-Time-Code system for authenticating diagnoses is really the only major concept not defined by Apple and Google.
./results/git/covid_alert/issue_comment_file_github.txt:469:Am delighted. Will however require careful thought about a phased deployment (release plan), including field trial, public policy support and ... messaging. First step would be to simply record these QR scan (whether "partner" in program or not) as an other form of proximity events (rf. cds-snc/covid-alert-app#1304) and make core users aware of such logging. Much similar to logging proximity events imho.  Most useful info for stix&stones contact tracing people (rf. cds-snc/covid-alert-app#1395). Final notification remains similarly elusive imho but doable with sufficient pragmatism, proper kpi metrics (rf cds-snc/covid-alert-app#1305), community engagement and less wokeism ;-) Must learn to walk before running. Microsoft wisdom of "eating own dogfood" most applicable here. Deploy first in federal "facilities": custom&immig, airline flight, post office and Service Canada points of service. Great pressure for BC and Alta btw to get off their derrière. Hence public policy absolutely vital to deploy successfully, and "turbocharge" these adoption/retention rates. Cheers to the Marmot!
./results/git/covid_alert/issue_comment_file_github.txt:833:https://api.github.com/repos/cds-snc/covid-alert-documentation/issues/10,The point is, the key for deploying this app is to gain some community trust and vague descriptions are not helping. If somebody doesn't understand how it works, they will not read Google's contact tracing scanning flow sequence diagrams, but simply will shrug off this app.
./results/git/covid_alert/issue_comment_file_github.txt:844:As an example, you would describe that Rolling Proximity Identifier is generated every 15 minutes, so if somebody followed a person with the same device in Bluetooth signal proximity, they wouldn't track the person because RPI's are generated every 15 minutes. Same for all bits - daily tracing keys, diagnosis keys, etc.
./results/git/covid_alert/issue_comment_file_github.txt:846:If you don't describe those, no amount of doctors saying they love this app will help installing it on as many devices as is needed for contact tracing.
./results/git/covid_alert/issue_comment_file_github.txt:866:The point is, the key for deploying this app is to gain some community trust and vague descriptions are not helping. If somebody doesn't understand how it works, they will not read Google's contact tracing scanning flow sequence diagrams, but simply will shrug off this app.
./results/git/covid_alert/issue_comment_file_github.txt:877:As an example, you would describe that Rolling Proximity Identifier is generated every 15 minutes, so if somebody followed a person with the same device in Bluetooth signal proximity, they wouldn't track the person because RPI's are generated every 15 minutes. Same for all bits - daily tracing keys, diagnosis keys, etc.
./results/git/covid_alert/issue_comment_file_github.txt:879:If you don't describe those, no amount of doctors saying they love this app will help installing it on as many devices as is needed for contact tracing.
./results/git/covid_alert/issue_comment_file_github.txt:912:You need to come up with a good diagram that shows how the app interacts with other phones, how it receives diagnostic keys and matches them up against RPE's, whether a tracing key, which uniquely identifies the device, ever gets into the cloud database, what the device public key in the database is used for, and so on. This is just to show people what the app does.
./results/git/covid_alert/issue_comment_file_github.txt:918:One important point in all of this, I'm not asking this for myself to entertain my curiosity about the app. If you want the app to be used, this is what needs to be done to convince the layer of the population who are not completely against it, but not quite sure what the app does. You can ignore this, but it will not help you to install the app in numbers we all need to make contact tracing useful.
./results/git/covid_alert/issue_comment_file_github.txt:925:Most of what you're asking for is actually the domain of the Exposure Notification frameworks in Android and iOS. While it's true that COVID Shield and COVID Alert would do well to explain this integrated system of app and framework holistically, the reason the early documentation doesn't have the information you're looking to find is that the framework parts are extensively documented in a more global way ([example](https://www.apple.com/covid19/contacttracing), [example](https://ncase.me/contact-tracing/)). The truly novel parts of the app and server are few and far between; the mobile application is, to a larger extent than one would initially guess, just a pretty wrapper around a small handful of framework calls. The One-Time-Code system for authenticating diagnoses is really the only major concept not defined by Apple and Google.
./results/git/covid_alert/issue_comment_file_github.txt:946:Am delighted. Will however require careful thought about a phased deployment (release plan), including field trial, public policy support and ... messaging. First step would be to simply record these QR scan (whether "partner" in program or not) as an other form of proximity events (rf. cds-snc/covid-alert-app#1304) and make core users aware of such logging. Much similar to logging proximity events imho.  Most useful info for stix&stones contact tracing people (rf. cds-snc/covid-alert-app#1395). Final notification remains similarly elusive imho but doable with sufficient pragmatism, proper kpi metrics (rf cds-snc/covid-alert-app#1305), community engagement and less wokeism ;-) Must learn to walk before running. Microsoft wisdom of "eating own dogfood" most applicable here. Deploy first in federal "facilities": custom&immig, airline flight, post office and Service Canada points of service. Great pressure for BC and Alta btw to get off their derrière. Hence public policy absolutely vital to deploy successfully, and "turbocharge" these adoption/retention rates. Cheers to the Marmot!
