./results/git/covid_alert/commit_file_github.txt:543:This PR also fixes a small potential bug where SQL Queries are using fmt.sprintf that can potentially allow a sql injection attack if someone was able to modify our Server Secrets. Although if that were to occur we would have significantly greater problems then a sql injection. This is just closing up a small issue.
./results/git/covid_alert/issue_comment_file_github.txt:81:https://api.github.com/repos/cds-snc/covid-alert-app/issues/78,The main issue apart from this which was referenced in the link earlier is that there is actually no check for if bluetooth is enabled anywhere in the codebase. The closest thing I could find was this module which appears to be compatible with iOS and allows you to perform the switch for android too. 
./results/git/covid_alert/issue_comment_file_github.txt:280:https://api.github.com/repos/cds-snc/covid-alert-server/issues/72,This was fixed by adding `-${random_string.random.result}` to the Terraform in #12, which allows new secrets to be created on each re-run Terraform, while allowing for the previous 30 day recovery window.
./results/git/covid_alert/issue_comment_file_github.txt:420:* There's a new `hashID` introduced to allow people issue their own claim codes, without any documentation of possible security implications and measures to mitigate them. 
./results/git/covid_alert/issue_comment_file_github.txt:558:https://api.github.com/repos/cds-snc/covid-alert-app/issues/78,The main issue apart from this which was referenced in the link earlier is that there is actually no check for if bluetooth is enabled anywhere in the codebase. The closest thing I could find was this module which appears to be compatible with iOS and allows you to perform the switch for android too. 
./results/git/covid_alert/issue_comment_file_github.txt:757:https://api.github.com/repos/cds-snc/covid-alert-server/issues/72,This was fixed by adding `-${random_string.random.result}` to the Terraform in #12, which allows new secrets to be created on each re-run Terraform, while allowing for the previous 30 day recovery window.
./results/git/covid_alert/issue_comment_file_github.txt:897:* There's a new `hashID` introduced to allow people issue their own claim codes, without any documentation of possible security implications and measures to mitigate them. 
./results/git/covid_alert/issue_file_github.txt:371:Failed to allocate a 200000012 byte allocation with 25165824 free bytes and 155MB until OOM, max allowed footprint 130630480, growth limit 268435456
./results/git/covid_alert/issue_file_github.txt:374:2020-07-07 14:13:08.230 26688-26946/app.covidshield W/app.covidshiel: Throwing OutOfMemoryError "Failed to allocate a 200000012 byte allocation with 25165824 free bytes and 155MB until OOM, max allowed footprint 130630480, growth limit 268435456" (VmSize 4233836 kB)
./results/git/covid_alert/issue_file_github.txt:375:2020-07-07 14:13:08.310 26688-26946/app.covidshield W/app.covidshiel: Throwing OutOfMemoryError "Failed to allocate a 200000016 byte allocation with 25165824 free bytes and 155MB until OOM, max allowed footprint 130630480, growth limit 268435456" (VmSize 4233836 kB)
./results/git/covid_alert/issue_file_github.txt:398:Caused by: java.lang.OutOfMemoryError: Failed to allocate a 200000016 byte allocation with 25165824 free bytes and 155MB until OOM, max allowed footprint 130630480, growth limit 268435456
./results/git/covid_alert/issue_file_github.txt:823:408,Expose App Metrics,Create an API Endpoint in Covid Alert Server that allows for someone to call it and recieve the metrics for a specific date. 
./results/git/covid_alert/issue_file_github.txt:861:<li><a href="https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>
./results/git/covid_alert/issue_file_github.txt:905:392,Create a testing tools microservice that allows QA folks to perform the following tasks,## Description
./results/git/covid_alert/issue_file_github.txt:912:  - [ ] Cause an Invalidation in the CloudFront Cache and allow us to report back on status. 
./results/git/covid_alert/issue_file_github.txt:919:- [ ] Only allow authenticated users to call it.
./results/git/covid_alert/issue_file_github.txt:931:380,Metric API Service,Create a new microservice that exposes the /events endpoint to allow us to segregate event queries from the submission endpoint
./results/git/covid_alert/issue_file_github.txt:984:337,Investigate DNS query logging, and alarms associated with non-expected domain traffic.,This allows us to monitor the DNS queries coming out of our compute clusters. Should we find any egress to places we do not trust, we can assume that malicious activity is going on.
