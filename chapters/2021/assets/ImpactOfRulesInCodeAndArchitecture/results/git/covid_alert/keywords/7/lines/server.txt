./results/git/covid_alert/commit_file_github.txt:48:* Plugged push metrics to server in the foreground and added an event to know if the foreground or background path triggered the push action
./results/git/covid_alert/commit_file_github.txt:543:This PR also fixes a small potential bug where SQL Queries are using fmt.sprintf that can potentially allow a sql injection attack if someone was able to modify our Server Secrets. Although if that were to occur we would have significantly greater problems then a sql injection. This is just closing up a small issue.
./results/git/covid_alert/commit_file_github.txt:588:- run go fmt in `pkg/server` dir
./results/git/covid_alert/commit_file_github.txt:627:Grab Code of Conduct from covid-alert-server repo (#33)
./results/git/covid_alert/issue_comment_file_github.txt:3:https://api.github.com/repos/cds-snc/covid-alert-app/issues/14,To note here is that the HMAC will need to match the one in the shared file if you want to retrieve exposure keys from the server. But we can adjust those locally
./results/git/covid_alert/issue_comment_file_github.txt:233:And even pass through the server's UTC timestamp by having `Date.now()+10*60*1000` (or however close we can get) computed server-side, because UTC time should be an accurate representation of what time it will be when this expires (with odd-but-accurate effects during leap hours):
./results/git/covid_alert/issue_comment_file_github.txt:247:The upstream Rails portal uses setTimeout to show a message when the code "expires", you could probably modify this to be a hair more accurate by subtracting the client UNIX timestamp from the server-generated one, though good luck if the local time is set incorrectly. (You might get a negative number of milliseconds if the local browser is more than 10 minutes faster than the server's clock.) https://github.com/CovidShield/portal/blob/a63d154d14952dceec4b7eabf85ed77f83d1dee6/app/javascript/components/code-generator.js#L87-L90
./results/git/covid_alert/issue_comment_file_github.txt:262:https://api.github.com/repos/cds-snc/covid-alert-server/issues/20,Ensured that the new ECR is deployed
./results/git/covid_alert/issue_comment_file_github.txt:263:https://api.github.com/repos/cds-snc/covid-alert-server/issues/13,Looks like the integration into the 'server' component isn't picking up the Go pkg info..
./results/git/covid_alert/issue_comment_file_github.txt:266:https://api.github.com/repos/cds-snc/covid-alert-server/issues/13,Snyk is enabled across all 4 repo's, but it doesn't appear to picking up the Golang code in the server so I've got a support ticket in.
./results/git/covid_alert/issue_comment_file_github.txt:269:https://api.github.com/repos/cds-snc/covid-alert-server/issues/39,Fields are deprecated
./results/git/covid_alert/issue_comment_file_github.txt:272:https://api.github.com/repos/cds-snc/covid-alert-server/issues/15,Closed in https://github.com/cds-snc/continuous-guardrail-scanning
./results/git/covid_alert/issue_comment_file_github.txt:273:https://api.github.com/repos/cds-snc/covid-alert-server/issues/48,#47 can be closed once merged.
./results/git/covid_alert/issue_comment_file_github.txt:274:https://api.github.com/repos/cds-snc/covid-alert-server/issues/50,After a discussion with @lchski, we’ll implement this feature. Lucas will follow-up with our policy read on the acceptability of this change.
./results/git/covid_alert/issue_comment_file_github.txt:275:https://api.github.com/repos/cds-snc/covid-alert-server/issues/52,cc: @caitlintuba for viz.
./results/git/covid_alert/issue_comment_file_github.txt:277:https://api.github.com/repos/cds-snc/covid-alert-server/issues/76,This issue was fixed in #23 and #16 by adding a ECR repository and removing the reference to the DockerHub images. 
./results/git/covid_alert/issue_comment_file_github.txt:278:https://api.github.com/repos/cds-snc/covid-alert-server/issues/75,Container images are pushed into a separate production ECR as defined in this pull request #58. Before they are deployed they are scanned both my the Microsoft GitHub action as well as the AWS native solution.
./results/git/covid_alert/issue_comment_file_github.txt:279:https://api.github.com/repos/cds-snc/covid-alert-server/issues/60,Open Telemetry was added to the server through this pull request from upstream: #35. Additionally application level metrics were added in #51 and continue to be added as need arises.
./results/git/covid_alert/issue_comment_file_github.txt:280:https://api.github.com/repos/cds-snc/covid-alert-server/issues/72,This was fixed by adding `-${random_string.random.result}` to the Terraform in #12, which allows new secrets to be created on each re-run Terraform, while allowing for the previous 30 day recovery window.
./results/git/covid_alert/issue_comment_file_github.txt:281:https://api.github.com/repos/cds-snc/covid-alert-server/issues/52,Sorry for the necromancy comment, but thanks to your link to https://github.com/hashicorp/setup-terraform/issues/23, I've managed to solve the same [issue](https://github.com/hoprnet/hopr-devops/commit/cc6fadb889fd3013fb9d0844716b50128e987f8e). In a very random note, at [HOPR](https://hoprnet.org/) we are building an open-source privacy-oriented mixnet to communicate data and we might overlap with some of the work done in here. HMU here or at Twitter w/@jjperezaguinaga (or our founder @SCBuergel) in Twitter to chat ☺️ 
./results/git/covid_alert/issue_comment_file_github.txt:282:https://api.github.com/repos/cds-snc/covid-alert-server/issues/74,Partially addressed in #42 and #45 but needs more work.
./results/git/covid_alert/issue_comment_file_github.txt:283:https://api.github.com/repos/cds-snc/covid-alert-server/issues/83,@whytoe has some suggestions on a better implementation.
./results/git/covid_alert/issue_comment_file_github.txt:284:https://api.github.com/repos/cds-snc/covid-alert-server/issues/61,Issue finding category updated to HTTPS
./results/git/covid_alert/issue_comment_file_github.txt:285:https://api.github.com/repos/cds-snc/covid-alert-server/issues/86,Data provider isnt available because the KMS needs to be created first, going to investigate the best way to ensure core services are available before application deployment
./results/git/covid_alert/issue_comment_file_github.txt:286:https://api.github.com/repos/cds-snc/covid-alert-server/issues/90,AWS documentation states it should default to Latest
./results/git/covid_alert/issue_comment_file_github.txt:289:https://api.github.com/repos/cds-snc/covid-alert-server/issues/85,Need to add in encryption once #86 is merged
./results/git/covid_alert/issue_comment_file_github.txt:290:https://api.github.com/repos/cds-snc/covid-alert-server/issues/71,Would love to understand the cost implications of this, given this will be a relatively heavy query path. Will flag this one to AWS for a 2nd set of eyes.
./results/git/covid_alert/issue_comment_file_github.txt:292:https://api.github.com/repos/cds-snc/covid-alert-server/issues/90,"Fargate tasks now support the CAP_SYS_PTRACE Linux capability"++ 
./results/git/covid_alert/issue_comment_file_github.txt:293:https://api.github.com/repos/cds-snc/covid-alert-server/issues/74,@maxneuvians I can complete this
./results/git/covid_alert/issue_comment_file_github.txt:295:https://api.github.com/repos/cds-snc/covid-alert-server/issues/69,I'm not sure this is necessary: the only files sent are zip files, which are already compressed, and tiny JSON blobs which are unlikely to be more than 1–2 packets anyway.
./results/git/covid_alert/issue_comment_file_github.txt:298:https://api.github.com/repos/cds-snc/covid-alert-server/issues/79,Unfortunately did not work - scaled the workloads to 0 and took them offline. It looks like we need to define alarms that trigger autoscaling actions: https://medium.com/@bradford_hamilton/deploying-containers-on-amazons-ecs-using-fargate-and-terraform-part-2-2e6f6a3a957f
./results/git/covid_alert/issue_comment_file_github.txt:299:https://api.github.com/repos/cds-snc/covid-alert-server/issues/83,We will merge this and enhance in https://github.com/cds-snc/covid-shield-server/issues/91
./results/git/covid_alert/issue_comment_file_github.txt:300:https://api.github.com/repos/cds-snc/covid-alert-server/issues/71,@obrien-j I'll make sure you have full sight on this.  Note that "AWS WAF is included with AWS Shield Advanced at no extra cost."
./results/git/covid_alert/issue_comment_file_github.txt:303:https://api.github.com/repos/cds-snc/covid-alert-server/issues/79,As @maxneuvians mentioned, in the merged code there isn't a cloudwatch metric alarm that trigger the escalation process. ECS service support several scaling strategies https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-auto-scaling.html. The example in medium blog use step_scaling, but maybe you should review target tracking policy (target_tracking_scaling_policy_configuration in Terraform)
./results/git/covid_alert/issue_comment_file_github.txt:304:https://api.github.com/repos/cds-snc/covid-alert-server/issues/61,Potentially use https://aws.amazon.com/blogs/compute/using-aws-app-mesh-with-fargate/
./results/git/covid_alert/issue_comment_file_github.txt:305:https://api.github.com/repos/cds-snc/covid-alert-server/issues/89,Linked to #71 
./results/git/covid_alert/issue_comment_file_github.txt:306:https://api.github.com/repos/cds-snc/covid-alert-server/issues/71,It might be nice to block URLs that don't fit the retrieval URL schema:
./results/git/covid_alert/issue_comment_file_github.txt:308:https://github.com/cds-snc/covid-shield-server/blob/master/pkg/server/retrieve.go#L36
./results/git/covid_alert/issue_comment_file_github.txt:312:https://github.com/cds-snc/covid-shield-server/blob/master/pkg/server/config.go#L22
./results/git/covid_alert/issue_comment_file_github.txt:316:https://github.com/cds-snc/covid-shield-server/blob/master/pkg/server/services.go#L26-L27
./results/git/covid_alert/issue_comment_file_github.txt:339:I'm also going to move this over there, where we'll be triaging non-app/server specific issues and questions.
./results/git/covid_alert/issue_comment_file_github.txt:353:> If so, the diagnosis keys, which are just re-named Temporary Exposure keys (randomly generated 16-byte values), are stored in the national servers database without any linkage to other pieces of information.
./results/git/covid_alert/issue_comment_file_github.txt:354:> RPI's that your phone broadcast are stored by other phones in their exposure notification subsystem. This information is never presented to the application itself, and is only ever used by the subsystem to match against diagnosis keys that the app downloads from the national server itself.
./results/git/covid_alert/issue_comment_file_github.txt:423:These are just things that popped up on the surface, without looking at the code much. You should be running Google's original server and app with transparent practices on log retention, backups, etc. This way we at least would know the code went through some security experts at Google and Apple. 
./results/git/covid_alert/issue_comment_file_github.txt:425:If you want to change how it behaves, you should submit your changes to Google, so they adapt their code under their security practices and guidelines. Taking a secure server and changing it up to make it more "convenient" for various local parties is how security and privacy breaches are created. 
./results/git/covid_alert/issue_comment_file_github.txt:448:Most of what you're asking for is actually the domain of the Exposure Notification frameworks in Android and iOS. While it's true that COVID Shield and COVID Alert would do well to explain this integrated system of app and framework holistically, the reason the early documentation doesn't have the information you're looking to find is that the framework parts are extensively documented in a more global way ([example](https://www.apple.com/covid19/contacttracing), [example](https://ncase.me/contact-tracing/)). The truly novel parts of the app and server are few and far between; the mobile application is, to a larger extent than one would initially guess, just a pretty wrapper around a small handful of framework calls. The One-Time-Code system for authenticating diagnoses is really the only major concept not defined by Apple and Google.
./results/git/covid_alert/issue_comment_file_github.txt:458:The preauthorized dialog is proposed as the mean to comply with the framework. Uploading exposure data remains only done if user is subsequently diagnosed positive. Yes the server or portal would now be notifying the app user of his own test result, which used to be done outside the app framework with the problems that we fully appreciate now. The proposed test result optimization would streamline the currently elusive final notifications to users having been in the proximity.
./results/git/covid_alert/issue_comment_file_github.txt:462:https://api.github.com/repos/cds-snc/covid-alert-documentation/issues/42,Further thread discussions have not timely occured. Improved support for BC will most likely also require improvement in the process of managing new requirements such as better tracking/sign off of requirements of both BC Heath and Canada Health authorities discussed strictly privately so far (no public records readily available). https://github.com/cds-snc/covid-alert-server/issues/417 has been entered to track progress on managing new requirements and getting them allocated for development, testing and release -vs- other resources currently available or already allocated. More resources and budget may be necessary in order to timely deliver during the 2nd wave.
./results/git/covid_alert/issue_comment_file_github.txt:480:https://api.github.com/repos/cds-snc/covid-alert-app/issues/14,To note here is that the HMAC will need to match the one in the shared file if you want to retrieve exposure keys from the server. But we can adjust those locally
./results/git/covid_alert/issue_comment_file_github.txt:710:And even pass through the server's UTC timestamp by having `Date.now()+10*60*1000` (or however close we can get) computed server-side, because UTC time should be an accurate representation of what time it will be when this expires (with odd-but-accurate effects during leap hours):
./results/git/covid_alert/issue_comment_file_github.txt:724:The upstream Rails portal uses setTimeout to show a message when the code "expires", you could probably modify this to be a hair more accurate by subtracting the client UNIX timestamp from the server-generated one, though good luck if the local time is set incorrectly. (You might get a negative number of milliseconds if the local browser is more than 10 minutes faster than the server's clock.) https://github.com/CovidShield/portal/blob/a63d154d14952dceec4b7eabf85ed77f83d1dee6/app/javascript/components/code-generator.js#L87-L90
./results/git/covid_alert/issue_comment_file_github.txt:739:https://api.github.com/repos/cds-snc/covid-alert-server/issues/20,Ensured that the new ECR is deployed
./results/git/covid_alert/issue_comment_file_github.txt:740:https://api.github.com/repos/cds-snc/covid-alert-server/issues/13,Looks like the integration into the 'server' component isn't picking up the Go pkg info..
./results/git/covid_alert/issue_comment_file_github.txt:743:https://api.github.com/repos/cds-snc/covid-alert-server/issues/13,Snyk is enabled across all 4 repo's, but it doesn't appear to picking up the Golang code in the server so I've got a support ticket in.
./results/git/covid_alert/issue_comment_file_github.txt:746:https://api.github.com/repos/cds-snc/covid-alert-server/issues/39,Fields are deprecated
./results/git/covid_alert/issue_comment_file_github.txt:749:https://api.github.com/repos/cds-snc/covid-alert-server/issues/15,Closed in https://github.com/cds-snc/continuous-guardrail-scanning
./results/git/covid_alert/issue_comment_file_github.txt:750:https://api.github.com/repos/cds-snc/covid-alert-server/issues/48,#47 can be closed once merged.
./results/git/covid_alert/issue_comment_file_github.txt:751:https://api.github.com/repos/cds-snc/covid-alert-server/issues/50,After a discussion with @lchski, we’ll implement this feature. Lucas will follow-up with our policy read on the acceptability of this change.
./results/git/covid_alert/issue_comment_file_github.txt:752:https://api.github.com/repos/cds-snc/covid-alert-server/issues/52,cc: @caitlintuba for viz.
./results/git/covid_alert/issue_comment_file_github.txt:754:https://api.github.com/repos/cds-snc/covid-alert-server/issues/76,This issue was fixed in #23 and #16 by adding a ECR repository and removing the reference to the DockerHub images. 
./results/git/covid_alert/issue_comment_file_github.txt:755:https://api.github.com/repos/cds-snc/covid-alert-server/issues/75,Container images are pushed into a separate production ECR as defined in this pull request #58. Before they are deployed they are scanned both my the Microsoft GitHub action as well as the AWS native solution.
./results/git/covid_alert/issue_comment_file_github.txt:756:https://api.github.com/repos/cds-snc/covid-alert-server/issues/60,Open Telemetry was added to the server through this pull request from upstream: #35. Additionally application level metrics were added in #51 and continue to be added as need arises.
./results/git/covid_alert/issue_comment_file_github.txt:757:https://api.github.com/repos/cds-snc/covid-alert-server/issues/72,This was fixed by adding `-${random_string.random.result}` to the Terraform in #12, which allows new secrets to be created on each re-run Terraform, while allowing for the previous 30 day recovery window.
./results/git/covid_alert/issue_comment_file_github.txt:758:https://api.github.com/repos/cds-snc/covid-alert-server/issues/52,Sorry for the necromancy comment, but thanks to your link to https://github.com/hashicorp/setup-terraform/issues/23, I've managed to solve the same [issue](https://github.com/hoprnet/hopr-devops/commit/cc6fadb889fd3013fb9d0844716b50128e987f8e). In a very random note, at [HOPR](https://hoprnet.org/) we are building an open-source privacy-oriented mixnet to communicate data and we might overlap with some of the work done in here. HMU here or at Twitter w/@jjperezaguinaga (or our founder @SCBuergel) in Twitter to chat ☺️ 
./results/git/covid_alert/issue_comment_file_github.txt:759:https://api.github.com/repos/cds-snc/covid-alert-server/issues/74,Partially addressed in #42 and #45 but needs more work.
./results/git/covid_alert/issue_comment_file_github.txt:760:https://api.github.com/repos/cds-snc/covid-alert-server/issues/83,@whytoe has some suggestions on a better implementation.
./results/git/covid_alert/issue_comment_file_github.txt:761:https://api.github.com/repos/cds-snc/covid-alert-server/issues/61,Issue finding category updated to HTTPS
./results/git/covid_alert/issue_comment_file_github.txt:762:https://api.github.com/repos/cds-snc/covid-alert-server/issues/86,Data provider isnt available because the KMS needs to be created first, going to investigate the best way to ensure core services are available before application deployment
./results/git/covid_alert/issue_comment_file_github.txt:763:https://api.github.com/repos/cds-snc/covid-alert-server/issues/90,AWS documentation states it should default to Latest
./results/git/covid_alert/issue_comment_file_github.txt:766:https://api.github.com/repos/cds-snc/covid-alert-server/issues/85,Need to add in encryption once #86 is merged
./results/git/covid_alert/issue_comment_file_github.txt:767:https://api.github.com/repos/cds-snc/covid-alert-server/issues/71,Would love to understand the cost implications of this, given this will be a relatively heavy query path. Will flag this one to AWS for a 2nd set of eyes.
./results/git/covid_alert/issue_comment_file_github.txt:769:https://api.github.com/repos/cds-snc/covid-alert-server/issues/90,"Fargate tasks now support the CAP_SYS_PTRACE Linux capability"++ 
./results/git/covid_alert/issue_comment_file_github.txt:770:https://api.github.com/repos/cds-snc/covid-alert-server/issues/74,@maxneuvians I can complete this
./results/git/covid_alert/issue_comment_file_github.txt:772:https://api.github.com/repos/cds-snc/covid-alert-server/issues/69,I'm not sure this is necessary: the only files sent are zip files, which are already compressed, and tiny JSON blobs which are unlikely to be more than 1–2 packets anyway.
./results/git/covid_alert/issue_comment_file_github.txt:775:https://api.github.com/repos/cds-snc/covid-alert-server/issues/79,Unfortunately did not work - scaled the workloads to 0 and took them offline. It looks like we need to define alarms that trigger autoscaling actions: https://medium.com/@bradford_hamilton/deploying-containers-on-amazons-ecs-using-fargate-and-terraform-part-2-2e6f6a3a957f
./results/git/covid_alert/issue_comment_file_github.txt:776:https://api.github.com/repos/cds-snc/covid-alert-server/issues/83,We will merge this and enhance in https://github.com/cds-snc/covid-shield-server/issues/91
./results/git/covid_alert/issue_comment_file_github.txt:777:https://api.github.com/repos/cds-snc/covid-alert-server/issues/71,@obrien-j I'll make sure you have full sight on this.  Note that "AWS WAF is included with AWS Shield Advanced at no extra cost."
./results/git/covid_alert/issue_comment_file_github.txt:780:https://api.github.com/repos/cds-snc/covid-alert-server/issues/79,As @maxneuvians mentioned, in the merged code there isn't a cloudwatch metric alarm that trigger the escalation process. ECS service support several scaling strategies https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-auto-scaling.html. The example in medium blog use step_scaling, but maybe you should review target tracking policy (target_tracking_scaling_policy_configuration in Terraform)
./results/git/covid_alert/issue_comment_file_github.txt:781:https://api.github.com/repos/cds-snc/covid-alert-server/issues/61,Potentially use https://aws.amazon.com/blogs/compute/using-aws-app-mesh-with-fargate/
./results/git/covid_alert/issue_comment_file_github.txt:782:https://api.github.com/repos/cds-snc/covid-alert-server/issues/89,Linked to #71 
./results/git/covid_alert/issue_comment_file_github.txt:783:https://api.github.com/repos/cds-snc/covid-alert-server/issues/71,It might be nice to block URLs that don't fit the retrieval URL schema:
./results/git/covid_alert/issue_comment_file_github.txt:785:https://github.com/cds-snc/covid-shield-server/blob/master/pkg/server/retrieve.go#L36
./results/git/covid_alert/issue_comment_file_github.txt:789:https://github.com/cds-snc/covid-shield-server/blob/master/pkg/server/config.go#L22
./results/git/covid_alert/issue_comment_file_github.txt:793:https://github.com/cds-snc/covid-shield-server/blob/master/pkg/server/services.go#L26-L27
./results/git/covid_alert/issue_comment_file_github.txt:816:I'm also going to move this over there, where we'll be triaging non-app/server specific issues and questions.
./results/git/covid_alert/issue_comment_file_github.txt:830:> If so, the diagnosis keys, which are just re-named Temporary Exposure keys (randomly generated 16-byte values), are stored in the national servers database without any linkage to other pieces of information.
./results/git/covid_alert/issue_comment_file_github.txt:831:> RPI's that your phone broadcast are stored by other phones in their exposure notification subsystem. This information is never presented to the application itself, and is only ever used by the subsystem to match against diagnosis keys that the app downloads from the national server itself.
./results/git/covid_alert/issue_comment_file_github.txt:900:These are just things that popped up on the surface, without looking at the code much. You should be running Google's original server and app with transparent practices on log retention, backups, etc. This way we at least would know the code went through some security experts at Google and Apple. 
./results/git/covid_alert/issue_comment_file_github.txt:902:If you want to change how it behaves, you should submit your changes to Google, so they adapt their code under their security practices and guidelines. Taking a secure server and changing it up to make it more "convenient" for various local parties is how security and privacy breaches are created. 
./results/git/covid_alert/issue_comment_file_github.txt:925:Most of what you're asking for is actually the domain of the Exposure Notification frameworks in Android and iOS. While it's true that COVID Shield and COVID Alert would do well to explain this integrated system of app and framework holistically, the reason the early documentation doesn't have the information you're looking to find is that the framework parts are extensively documented in a more global way ([example](https://www.apple.com/covid19/contacttracing), [example](https://ncase.me/contact-tracing/)). The truly novel parts of the app and server are few and far between; the mobile application is, to a larger extent than one would initially guess, just a pretty wrapper around a small handful of framework calls. The One-Time-Code system for authenticating diagnoses is really the only major concept not defined by Apple and Google.
./results/git/covid_alert/issue_comment_file_github.txt:935:The preauthorized dialog is proposed as the mean to comply with the framework. Uploading exposure data remains only done if user is subsequently diagnosed positive. Yes the server or portal would now be notifying the app user of his own test result, which used to be done outside the app framework with the problems that we fully appreciate now. The proposed test result optimization would streamline the currently elusive final notifications to users having been in the proximity.
./results/git/covid_alert/issue_comment_file_github.txt:939:https://api.github.com/repos/cds-snc/covid-alert-documentation/issues/42,Further thread discussions have not timely occured. Improved support for BC will most likely also require improvement in the process of managing new requirements such as better tracking/sign off of requirements of both BC Heath and Canada Health authorities discussed strictly privately so far (no public records readily available). https://github.com/cds-snc/covid-alert-server/issues/417 has been entered to track progress on managing new requirements and getting them allocated for development, testing and release -vs- other resources currently available or already allocated. More resources and budget may be necessary in order to timely deliver during the 2nd wave.
./results/git/covid_alert/issue_file_github.txt:102:- [x] convo with server team to get realistic outbreak data sent to the app (mock data for now) (we are now waiting on this PR: https://github.com/cds-snc/covid-alert-server/pull/438)
./results/git/covid_alert/issue_file_github.txt:103:- [ ] copy the data model from [here](https://github.com/cds-snc/covid-alert-server/blob/qr_submission/proto/covidshield.proto) and use this on top of our current mocked data in db.json
./results/git/covid_alert/issue_file_github.txt:105:- [ ] implement unzipping the outbreak files (may want to wait until https://github.com/cds-snc/covid-alert-server/pull/438 is merged)
./results/git/covid_alert/issue_file_github.txt:106:- [ ] implement verifying the signature, add the public key as an env variable. Q: can we use `import nacl from 'tweetnacl';` for this? (again may want to wait until https://github.com/cds-snc/covid-alert-server/pull/438 is merged)
./results/git/covid_alert/issue_file_github.txt:166:1344,Deleting server and client keys from storage when transitioning from …,…diagnosed to monitoring state
./results/git/covid_alert/issue_file_github.txt:227:Added a way to log from the Objective-C code to our Loggly server.
./results/git/covid_alert/issue_file_github.txt:346:The application can be tricked into believing it has received a valid Key Claim Response by simply using invalid tags in the response message. Presumably, this will result in a failure later on, when the app tries to use the server’s Public Key. The relevant code is located in the KeyClaimResponse decode function in covidshield.js.
./results/git/covid_alert/issue_file_github.txt:348:This issue was easily demonstrated with an HTTP server that sends response data that contains 100 bytes of zeros data back to the client in response to the POST /claim-key request. The POST request is sent when the user enters the 8-digit number to initiate the uploading of TEKs, after being diagnosed.  Because the app thinks the response is valid, it displays the "Agree" screen to request user's permission to download the TEKs.  When the user selects Agree, an error message is returned, "Random codes could not be uploaded You did not give permission".  The application is not able to recover and is stuck in the "upload your random codes" state.
./results/git/covid_alert/issue_file_github.txt:357:The download diagnosis file operation is executed periodically to retrieve the diagnosis keys from the server. It is possible for a malicious server to perform a denial of service attack by returning a large keys file which could potentially consume all of the memory available to the app and would eventually crash the application. Based on code review of the downloadDiagnosisKeysFile in CovidShieldModule.kt, we can confirm that the application isn’t restricting the size of received payload and just blindly saves the diagnosis key files without any validation. We were able to send a diagnosis key file of size 100MB and confirm via the debugger that the data was getting saved to the keys.zip file.
./results/git/covid_alert/issue_file_github.txt:363: Not a great solution, but if (1) is not possible, the application should reject the response if the data > 16M or an appropriate maximum payload size as per https://developers.google.com/android/exposure-notifications/exposure-key-file-format#file-format and agreement with the server development team.,[{'id': 2180853016, 'node_id': 'MDU6TGFiZWwyMTgwODUzMDE2', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-app/labels/CCCS', 'name': 'CCCS', 'color': '2ea011', 'default': False, 'description': ''}, {'id': 2102563387, 'node_id': 'MDU6TGFiZWwyMTAyNTYzMzg3', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-app/labels/bug', 'name': 'bug', 'color': 'd73a4a', 'default': True, 'description': "Something isn't working"}, {'id': 2240139725, 'node_id': 'MDU6TGFiZWwyMjQwMTM5NzI1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-app/labels/inbox', 'name': 'inbox', 'color': '000000', 'default': False, 'description': 'for new issues coming in'}]
./results/git/covid_alert/issue_file_github.txt:366:Application should be robust enough to handle large invalid data from a server, possibly a malicious server (john: or faulty server response on our part). Sending large response data of around 100MB in response to the  GET exposure-configuration request caused the android mobile application to crash with the following message being displayed to the user:
./results/git/covid_alert/issue_file_github.txt:441:07-07 08:23:46.334  9334  9355 E SoLoader: couldn't find DSO to load: libhermes-executor-debug.so caused by: couldn't find DSO to load: libhermes-inspector.so caused by: dlopen failed: cannot locate symbol "_ZTIN8facebook6hermes8debugger13EventObserverE" referenced by "/data/data/com.google.android.apps.exposurenotification/lib-main/libhermes-inspector.so"...
./results/git/covid_alert/issue_file_github.txt:442:07-07 08:23:46.334  9334  9355 E SoLoader: couldn't find DSO to load: libhermes-executor-debug.so caused by: couldn't find DSO to load: libhermes-inspector.so caused by: dlopen failed: cannot locate symbol "_ZTIN8facebook6hermes8debugger13EventObserverE" referenced by "/data/data/com.google.android.apps.exposurenotification/lib-main/libhermes-inspector.so"...
./results/git/covid_alert/issue_file_github.txt:443:07-07 08:23:46.334  9334  9355 E SoLoader: couldn't find DSO to load: libhermes-executor-debug.so caused by: couldn't find DSO to load: libhermes-inspector.so caused by: dlopen failed: cannot locate symbol "_ZTIN8facebook6hermes8debugger13EventObserverE" referenced by "/data/data/com.google.android.apps.exposurenotification/lib-main/libhermes-inspector.so"...
./results/git/covid_alert/issue_file_github.txt:444:07-07 08:23:46.334  9334  9355 E SoLoader: couldn't find DSO to load: libhermes-executor-debug.so caused by: couldn't find DSO to load: libhermes-inspector.so caused by: dlopen failed: cannot locate symbol "_ZTIN8facebook6hermes8debugger13EventObserverE" referenced by "/data/data/com.google.android.apps.exposurenotification/lib-main/libhermes-inspector.so"...
./results/git/covid_alert/issue_file_github.txt:538:The major side effect here is the uploading of an infected user's TEKs could be cancelled by a concurrent detection of a new exposure resulting in the user's TEK never getting uploaded to the server.,[{'id': 2180853016, 'node_id': 'MDU6TGFiZWwyMTgwODUzMDE2', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-app/labels/CCCS', 'name': 'CCCS', 'color': '2ea011', 'default': False, 'description': ''}, {'id': 2164766070, 'node_id': 'MDU6TGFiZWwyMTY0NzY2MDcw', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-app/labels/low%20priority', 'name': 'low priority', 'color': 'baf3ff', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:701:issue_id,issue_title,issue_body,issue_labels436,Expose Server Metrics through a CSV file,HC requires the OTK Metrics to be hosted as a CSV file. 
./results/git/covid_alert/issue_file_github.txt:703:This file will be probably hosted in an S3 bucket that can be accessed by HC's.,[{'id': 2335884145, 'node_id': 'MDU6TGFiZWwyMzM1ODg0MTQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/medium%20priority', 'name': 'medium priority', 'color': 'e99695', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:709:This Endpoint will sit on the Submission server and will be protected using the same WAF rules as the OTK generation end point and will be authenticated using the same bearer token that is currently used to limit OTK Generation to PTs
./results/git/covid_alert/issue_file_github.txt:726:Expiration Server Code sits here: https://github.com/cds-snc/covid-alert-server/blob/master/pkg/workers/expiration.go
./results/git/covid_alert/issue_file_github.txt:732: ,[{'id': 2335884145, 'node_id': 'MDU6TGFiZWwyMzM1ODg0MTQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/medium%20priority', 'name': 'medium priority', 'color': 'e99695', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:733:418,Add eslint for serverless code,Add prettier rules
./results/git/covid_alert/issue_file_github.txt:742:https://github.com/cds-snc/c19-benefits-node/blob/d13e2767e5b3e7ff73fd69b42f450af5c1ec6844/package.json#L18,[{'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:759:Nous allons commencer à utiliser la nouvelle rubrique « Discussions » de GitHub pour permettre aux gens de discuter d'idées, de modifications et autres, et nous allons réserver la rubrique « Issues » à l'équipe de prestation, pour qu'elle puisse se concentrer sur le travail en cours.
./results/git/covid_alert/issue_file_github.txt:776:- https://fluffy.es/devicecheck-tutorial/#serverside (edited) 
./results/git/covid_alert/issue_file_github.txt:785: - [ ] Call methods exposed in cds-snc/covid-alert-server#392 
./results/git/covid_alert/issue_file_github.txt:791:How: The app will call a server endpoint when an event occurs. The server will anonymously add the event to an aggregate tally.
./results/git/covid_alert/issue_file_github.txt:795:- [x] Implement Microservice for collecting Metrics cds-snc/covid-alert-server#407
./results/git/covid_alert/issue_file_github.txt:796:- [ ] Implement Microservice for reading Metrics cds-snc/covid-alert-server#408
./results/git/covid_alert/issue_file_github.txt:797:,[{'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:819: - [ ] Fix in Demo https://github.com/cds-snc/covid-alert-server-demo-terraform/issues/29
./results/git/covid_alert/issue_file_github.txt:820: - [ ] Fix in Staging https://github.com/cds-snc/covid-alert-server-staging-terraform/issues/72
./results/git/covid_alert/issue_file_github.txt:821: - [ ] Fix in Prod https://github.com/cds-snc/covid-alert-server-production-terraform/issues/46
./results/git/covid_alert/issue_file_github.txt:822:,[{'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}, {'id': 2122849561, 'node_id': 'MDU6TGFiZWwyMTIyODQ5NTYx', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/security', 'name': 'security', 'color': 'aa2049', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:823:408,Expose App Metrics,Create an API Endpoint in Covid Alert Server that allows for someone to call it and recieve the metrics for a specific date. 
./results/git/covid_alert/issue_file_github.txt:835:   - New Tests are running on PR,[{'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:847:I'm leaving this as wontfix for now as CDS dev machines are Macbooks and it does run in a Linux VM. ,[{'id': 2096927445, 'node_id': 'MDU6TGFiZWwyMDk2OTI3NDQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/bug', 'name': 'bug', 'color': 'd73a4a', 'default': True, 'description': "Something isn't working"}, {'id': 2189820562, 'node_id': 'MDU6TGFiZWwyMTg5ODIwNTYy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/low%20priority', 'name': 'low priority', 'color': 'e5b712', 'default': False, 'description': ''}, {'id': 2096927453, 'node_id': 'MDU6TGFiZWwyMDk2OTI3NDUz', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/wontfix', 'name': 'wontfix', 'color': 'ffffff', 'default': True, 'description': 'This will not be worked on'}]
./results/git/covid_alert/issue_file_github.txt:848:402,QA Tools Microservices/Lambda,,[{'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:901:You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/cds-snc/covid-alert-server/network/alerts).
./results/git/covid_alert/issue_file_github.txt:903:</details>,[{'id': 2634673093, 'node_id': 'MDU6TGFiZWwyNjM0NjczMDkz', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/dependencies', 'name': 'dependencies', 'color': '0366d6', 'default': False, 'description': 'Pull requests that update a dependency file'}]
./results/git/covid_alert/issue_file_github.txt:904:394,Implement EN V2 Protobuf,- Implement new fields for v2,[{'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:913:   To replace the following script: https://github.com/cds-snc/covid-alert-server/blob/master/bin/invalidate-cache.sh
./results/git/covid_alert/issue_file_github.txt:915:  Work on this is currently here: https://github.com/cds-snc/covid-alert-server/blob/master/pkg/server/test_tools.go
./results/git/covid_alert/issue_file_github.txt:918:  To replace the following script: https://github.com/cds-snc/covid-alert-server/tree/master/bin/stuff-database
./results/git/covid_alert/issue_file_github.txt:920:- [ ] Be callable by #403 ,[{'id': 2096927448, 'node_id': 'MDU6TGFiZWwyMDk2OTI3NDQ4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/enhancement', 'name': 'enhancement', 'color': 'a2eeef', 'default': True, 'description': 'New feature or request'}, {'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:922:and for installing JQ,[{'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:923:383,Migrate Staging environment to Lambda Containers,-  [x] Upgrade AWS Provider to 3.21 cds-snc/covid-alert-server-staging-terraform#60
./results/git/covid_alert/issue_file_github.txt:927:,[{'id': 2096927448, 'node_id': 'MDU6TGFiZWwyMDk2OTI3NDQ4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/enhancement', 'name': 'enhancement', 'color': 'a2eeef', 'default': True, 'description': 'New feature or request'}, {'id': 2159748411, 'node_id': 'MDU6TGFiZWwyMTU5NzQ4NDEx', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/infrastructure', 'name': 'infrastructure', 'color': '2cc92e', 'default': False, 'description': ''}, {'id': 2189820562, 'node_id': 'MDU6TGFiZWwyMTg5ODIwNTYy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/low%20priority', 'name': 'low priority', 'color': 'e5b712', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:930:This should be added to the makefile and should be run whenever any of the files we generate mocks from are modified.,[{'id': 2503924338, 'node_id': 'MDU6TGFiZWwyNTAzOTI0MzM4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/S', 'name': 'S', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2335884145, 'node_id': 'MDU6TGFiZWwyMzM1ODg0MTQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/medium%20priority', 'name': 'medium priority', 'color': 'e99695', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:937:,[{'id': 2335884145, 'node_id': 'MDU6TGFiZWwyMzM1ODg0MTQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/medium%20priority', 'name': 'medium priority', 'color': 'e99695', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:940:The private method [persistence.saveEvent](https://github.com/cds-snc/covid-alert-server/blob/93db46640ecebcb23acfbcf6cef69c9d662aab48/pkg/persistence/events.go#L83) should not run in a transaction since it's usually run from within a transaction because transactions cannot be nested in MySQL, so either we are commiting too early or golang is just ignore the nest.
./results/git/covid_alert/issue_file_github.txt:942:The public method [persistence.SaveEvent](https://github.com/cds-snc/covid-alert-server/blob/93db46640ecebcb23acfbcf6cef69c9d662aab48/pkg/persistence/events.go#L75) should have the transaction instead.
./results/git/covid_alert/issue_file_github.txt:948: - [ ] Update unit tests.,[{'id': 2503924338, 'node_id': 'MDU6TGFiZWwyNTAzOTI0MzM4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/S', 'name': 'S', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2189820562, 'node_id': 'MDU6TGFiZWwyMTg5ODIwNTYy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/low%20priority', 'name': 'low priority', 'color': 'e5b712', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:949:373,Create Containers for Github Actions,in order to speed up build times we should build dev environment containers,[{'id': 2189820562, 'node_id': 'MDU6TGFiZWwyMTg5ODIwNTYy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/low%20priority', 'name': 'low priority', 'color': 'e5b712', 'default': False, 'description': ''}, {'id': 2503989551, 'node_id': 'MDU6TGFiZWwyNTAzOTg5NTUx', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/needs%20story%20definition', 'name': 'needs story definition', 'color': '064760', 'default': False, 'description': ''}, {'id': 2549442607, 'node_id': 'MDU6TGFiZWwyNTQ5NDQyNjA3', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/pipeline', 'name': 'pipeline', 'color': '19b3c1', 'default': False, 'description': 'Improvements to pipelines'}]
./results/git/covid_alert/issue_file_github.txt:950:364,Document Team Principles,Defining principles for the team will guide all future decisions on changes to Covid Alert Server
./results/git/covid_alert/issue_file_github.txt:958:- Reduce Friction to development.,[{'id': 2189820562, 'node_id': 'MDU6TGFiZWwyMTg5ODIwNTYy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/low%20priority', 'name': 'low priority', 'color': 'e5b712', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:963:- [ ] FR,[{'id': 2096927446, 'node_id': 'MDU6TGFiZWwyMDk2OTI3NDQ2', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/documentation', 'name': 'documentation', 'color': '0075ca', 'default': True, 'description': 'Improvements or additions to documentation'}, {'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:966:We need to fail on the server as well. ,[{'id': 2503924338, 'node_id': 'MDU6TGFiZWwyNTAzOTI0MzM4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/S', 'name': 'S', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2189820562, 'node_id': 'MDU6TGFiZWwyMTg5ODIwNTYy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/low%20priority', 'name': 'low priority', 'color': 'e5b712', 'default': False, 'description': ''}, {'id': 2549442607, 'node_id': 'MDU6TGFiZWwyNTQ5NDQyNjA3', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/pipeline', 'name': 'pipeline', 'color': '19b3c1', 'default': False, 'description': 'Improvements to pipelines'}]
./results/git/covid_alert/issue_file_github.txt:968:- [ ] All public functions are properly documented,[{'id': 2503924911, 'node_id': 'MDU6TGFiZWwyNTAzOTI0OTEx', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/M', 'name': 'M', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2189820562, 'node_id': 'MDU6TGFiZWwyMTg5ODIwNTYy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/low%20priority', 'name': 'low priority', 'color': 'e5b712', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:971:https://docs.google.com/spreadsheets/d/1LHI49cKp3Pc9_jY1h0HUkG9XgVEYdwOk41Uw7zi6NaU/edit#gid=0 ,[{'id': 2503924338, 'node_id': 'MDU6TGFiZWwyNTAzOTI0MzM4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/S', 'name': 'S', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2096927446, 'node_id': 'MDU6TGFiZWwyMDk2OTI3NDQ2', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/documentation', 'name': 'documentation', 'color': '0075ca', 'default': True, 'description': 'Improvements or additions to documentation'}, {'id': 2335884145, 'node_id': 'MDU6TGFiZWwyMzM1ODg0MTQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/medium%20priority', 'name': 'medium priority', 'color': 'e99695', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:979:https://docs.google.com/document/d/12TKC3jJv2c1z2emciHirzcbluHSjC_S9rECtL2E9Ono/edit,[{'id': 2503924338, 'node_id': 'MDU6TGFiZWwyNTAzOTI0MzM4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/S', 'name': 'S', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2335974802, 'node_id': 'MDU6TGFiZWwyMzM1OTc0ODAy', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/high%20priority', 'name': 'high priority', 'color': '4a32c1', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:980:339,Include requestor's IP address in logs,Logging can be improved by adding the requestor’s IP address in the log for the server’s response. This will make it a lot easier to see where bad requests are coming from, without having to combine data from multiple logs. 
./results/git/covid_alert/issue_file_github.txt:983:- [ ] whenever a key-claim request fails, the IP is logged with the error message.,[{'id': 2503924338, 'node_id': 'MDU6TGFiZWwyNTAzOTI0MzM4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/S', 'name': 'S', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2335884145, 'node_id': 'MDU6TGFiZWwyMzM1ODg0MTQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/medium%20priority', 'name': 'medium priority', 'color': 'e99695', 'default': False, 'description': ''}]
./results/git/covid_alert/issue_file_github.txt:991:- [ ] Notification sent to appropriate channel once DNS query logged,[{'id': 2503924338, 'node_id': 'MDU6TGFiZWwyNTAzOTI0MzM4', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/S', 'name': 'S', 'color': '636e72', 'default': False, 'description': ''}, {'id': 2335884145, 'node_id': 'MDU6TGFiZWwyMzM1ODg0MTQ1', 'url': 'https://api.github.com/repos/cds-snc/covid-alert-server/labels/medium%20priority', 'name': 'medium priority', 'color': 'e99695', 'default': False, 'description': ''}]
