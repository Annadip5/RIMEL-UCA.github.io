./results/git/stop_covid/issue_file_gitlab.txt:350:Cependant, l'application intègre cette fonctionnalité (pour l'instant désactivée) depuis la version 2.2.0 du 16 décembre, et l'avis de la CNIL contient une description succincte du fonctionnement du système.  À partir de ces éléments, j'ai essayé de reconstruire le protocole TAC-WARNING, et d'analyser son impact sur la protection des données personnelles.  Sauf erreur, ce protocole révèle au serveur énormément d'information sur la vie privée des utilisateurs, même s'ils ne sont pas co-exposés.  Cela ne correspond pas du tout à la [promesse de départ](https://www.inria.fr/fr/contact-tracing-bruno-sportisse-pdg-dinria-donne-quelques-elements-pour-mieux-comprendre-les-enjeux): «sa conception permet que PERSONNE, pas même l’Etat, n’ait accès à la liste des personnes diagnostiquées positives ou à la liste des interactions sociales entre les personnes».
./results/git/stop_covid/issue_file_gitlab.txt:358:2. Si un utilisateur est malade, il envoie au serveur central sa liste de UUID + timestamp;
./results/git/stop_covid/issue_file_gitlab.txt:359:3. Régulièrement, les utilisateurs envoient les UUID masqués + timestamp de leur liste.  Le serveur vérifie si un des UUID est à risque pendant la période correspondante (pour chaque UUID envoyé par un malade, il calcule SHA256(sel+UUID) avec tous les sels possibles).
./results/git/stop_covid/issue_file_gitlab.txt:369:Comme avec le protocole ROBERT utilisé pour la partie Bluetooth de TousAntiCovid, il y a deux [risques principaux](https://risques-tracage.fr/): traçage des utilisateurs, et injection de fausses alertes.  Ces systèmes ne collectent pas l'identité des utilisateurs, mais certains utilisateurs peuvent être identifiés en utilisant des données en dehors du protocole.  En particulier, le serveur connait leurs adresses IP, et pourrait les réidentifier avec l'aide des fournisseurs d'accès Internet.  
./results/git/stop_covid/issue_file_gitlab.txt:375:# Risque 1: le serveur connaît les horodatages des QR-codes
./results/git/stop_covid/issue_file_gitlab.txt:377:Même si les UUID sont masqués, le serveur central reçoit les timestamp (horodatages) en clair: il sait combien de QR-codes un utilisateur a scanné et quand.  Il peut par exemple repérer tous les QR-codes scannés après le couvre-feu.
./results/git/stop_covid/issue_file_gitlab.txt:379:# Risque 2: le serveur apprend les interactions sociales
./results/git/stop_covid/issue_file_gitlab.txt:381:Si le serveur central arrive à déterminer quels UUID masqués correspondent au même UUID en clair, il peut en déduire quel utilisateurs étaient au même endroit au même moment, même si aucun d'entre eux n'est malade.  Il y a au moins deux façons de reconstruire ces interactions par le serveur.
./results/git/stop_covid/issue_file_gitlab.txt:385:Dans la version actuelle, le sel utilisé pour masquer les UUID [fait seulement 1 bit](https://gitlab.inria.fr/stopcovid19/stopcovid-android/-/blob/2203d3366eea8f0ddc9ad9471073a85b36369f6c/stopcovid/src/main/assets/Config/config.json#L97).  Cela signifie que si deux utilisateurs scannent le même QR-code, dans 50% des cas l'UUID sera masqué de la même façon, et le serveur apprend que les deux personnes étaient dans le même lieux.
./results/git/stop_covid/issue_file_gitlab.txt:389:Le système suppose que les UUID restent inconnus du serveur tant qu'il n'y a pas de malade dans le lieu public correspondant.  Quand il apprend un UUID, le serveur peux retrouver tous les utilisateurs qui l'ont visité, même si le masquage est suffisamment fort (c'est nécessaire pour alerter les personnes à risques).  Le serveur peux connaître des UUID de plusieurs manières:
./results/git/stop_covid/issue_file_gitlab.txt:391:- Les QR-codes encodent une URL de la forme https://tac.gouv.fr/UUID.  Si un utilisateur scanne le QR-code et suit le lien avec un navigateur web au lieu de scanner le code dans l'application, l'UUID correspondant est envoyée au serveur tac.gouv.fr.
./results/git/stop_covid/issue_file_gitlab.txt:393:- Un UUID est envoyé au serveur dès qu'une personne l'ayant scannée est malade.  Avec le taux d'incidence actuel (200/100000/semaine), c'est le cas s'il est scanné par environ 500 utilisateurs TAC pendant sa durée de vie (parce qu'un utilisateur envoie environ 1 semaine d'historique quand il est testé positif).  Donc si le système est assez utilisé pour être utile, une grande partie des UUID seront envoyés au serveur (à moins que les QR-codes ne soient renouvelés assez fréquemment).
./results/git/stop_covid/issue_file_gitlab.txt:395:- Comme indiqué au risque 3 ci-dessous, des agents de l'État pourraient facilement scanner les QR-code dans les lieux publics et envoyer les UUID au serveur.
./results/git/stop_covid/issue_file_gitlab.txt:397:# Risque 3: le serveur peux reconstruire les trajets des utilisateurs
./results/git/stop_covid/issue_file_gitlab.txt:399:L'État pourrait facilement construire une base de données de QR-codes dans les lieux publics (restaurants, cinémas, gares, ...), avec la localisation correspondante et l'UUID.  Une fois cette base de donnée construite, le serveur central peux reconstruire les déplacements de tous les utilisateurs du système (même s'il n'y a pas de malades).  Cela permettra aussi d'identifier certains utilisateurs (en identifiant leur lieu de travail, par exemple).
./results/git/stop_covid/issue_file_gitlab.txt:403:L'architecture centralisée de ce protocole permet d'éviter de publier une liste des lieux à risques (c'est son principal avantage par rapport au système décentralisé).  Cependant, il est facile d'interroger le serveur pour demander si un lieu est à risque.  Des utilisateurs peuvent ainsi créer une application alternative qui calcule le niveau de risque avant de rentrer dans un lieu public.  Il suffit de scanner le QR-code à l'entrée, puis d'envoyer des requêtes de calcul d'exposition au risque avec cet UUID et différents timestamps.  Si le QR-code n'est pas changé régulièrement, cela révèle les horaires auquel le lieu a été visité par des malades.
./results/git/stop_covid/issue_file_gitlab.txt:409:En tout état de cause, les cahiers de rappel papier sont une solution plus respectueuse de la vie privée, car les informations restent locales et ne sont pas centralisées.  Des données centralisées permettent au serveur de faire des recoupements pour apprendre le graphe social, et augmentent énormément le risque de fuite de données.
./results/git/stop_covid/issue_file_gitlab.txt:451:Par sécurité, il serait tout indiqué de vérifier que l'application est à jour à chaque transaction avec le serveur.
