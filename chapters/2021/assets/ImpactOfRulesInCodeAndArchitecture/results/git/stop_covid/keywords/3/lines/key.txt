./results/git/stop_covid/commit_file_gitlab.txt:1:Add SecretKey erasure
./results/git/stop_covid/commit_file_gitlab.txt:139:Merge branch 'rollback-server-public-ecdh-key' into 'develop'
./results/git/stop_covid/commit_file_gitlab.txt:141:rollback serverPublicECDHKey
./results/git/stop_covid/commit_file_gitlab.txt:144:rollback serverPublicECDHKey
./results/git/stop_covid/commit_file_gitlab.txt:146:Merge branch 'add-ecdh-server-public-key' into 'develop'
./results/git/stop_covid/commit_file_gitlab.txt:148:add serverPublicKey in response
./results/git/stop_covid/commit_file_gitlab.txt:151:add serverPublicKey in response
./results/git/stop_covid/commit_file_gitlab.txt:155:refactor /register request and response to secure key and tuples with ecdh
./results/git/stop_covid/commit_file_gitlab.txt:158:refactor /register request and response to secure key and tuples with ecdh
./results/git/stop_covid/commit_file_gitlab.txt:290:- Add graphics to key figure
./results/git/stop_covid/commit_file_gitlab.txt:296:- Fix crash with malformed key figures json
./results/git/stop_covid/commit_file_gitlab.txt:319:- key figures
./results/git/stop_covid/commit_file_gitlab.txt:334:- Key figures explanation screen
./results/git/stop_covid/commit_file_gitlab.txt:343:- Use extractDate instead of lastUpdate for Key Figure
./results/git/stop_covid/issue_file_gitlab.txt:9:52048,Cryptographic key erasure,[SSUBuilder](https://gitlab.inria.fr/stopcovid19/stopcovid-robertsdk-android/-/blob/master/domain/src/main/java/com/lunabeestudio/domain/model/SSUBuilder.kt) and [HelloBuilder](https://gitlab.inria.fr/stopcovid19/stopcovid-robertsdk-android/-/blob/master/domain/src/main/java/com/lunabeestudio/domain/model/HelloBuilder.kt) hold a key created with SecretKeySpec. As stated in this documentation : [SecreyKeySpec constructor](https://docs.oracle.com/javase/8/docs/api/javax/crypto/spec/SecretKeySpec.html#SecretKeySpec-byte:A-java.lang.String-) the key given in parameter to the SecretKeySpec constructor is copied into the new object, so this object should be cleaned by a call to [destroy](https://docs.oracle.com/javase/8/docs/api/javax/security/auth/Destroyable.html#destroy--) when not used anymore. **NB IMPORTANT : a test (during the test stage) should be done to make sure that the original key, given in the constructor parameter, is not erased consistently with the java api documentation**. 
./results/git/stop_covid/issue_file_gitlab.txt:11:More broadly the arrays containing the shared key (or other secrets) should be overwritten as soon as they are not used anymore.,[]
./results/git/stop_covid/issue_file_gitlab.txt:34:* generated public keys for client and server via HKDF
./results/git/stop_covid/issue_file_gitlab.txt:35:* securely stored keys in the app (private client / public server)
./results/git/stop_covid/issue_file_gitlab.txt:38:JSON can be encrypted with these shared keys.
./results/git/stop_covid/issue_file_gitlab.txt:40:And, for a better security, in-app keys can be used only once for `/register`, by providing a client public key for future exchanges.
./results/git/stop_covid/issue_file_gitlab.txt:42:In `/register`, server can send its own public key.
./results/git/stop_covid/issue_file_gitlab.txt:44:And, after that, JSON can be encrypted using new keys.
./results/git/stop_covid/issue_file_gitlab.txt:46:Keys can rotate after each exchange.
./results/git/stop_covid/issue_file_gitlab.txt:50:Because everything start on the first HTTPS connection, it's difficult to obtain dynamic keys.
./results/git/stop_covid/issue_file_gitlab.txt:65:`ES256` JWT tokens generated by client with a shared rotating key and integrating path in signature can be a good starting point?,[]
./results/git/stop_covid/issue_file_gitlab.txt:177:52830,ClientIdentifier keys are not being deleted in the database,When a user unregisters, he sends a "deleteId" command to the GRPC server. This server then deletes this data from the PostgreSQL database.
./results/git/stop_covid/issue_file_gitlab.txt:178:However, when the ClientIdentifier keys gets deleted, it is in fact saved in an audit table, as you can see on this line:
./results/git/stop_covid/issue_file_gitlab.txt:474:58640,key-figures.json is broken (when "health" data not fetched correctly),
./results/git/stop_covid/issue_file_gitlab.txt:475:https://app.stopcovid.gouv.fr/infos/key-figures.json
./results/git/stop_covid/issue_file_gitlab.txt:482:		"labelKey" : "keyfigure.registered",
./results/git/stop_covid/issue_file_gitlab.txt:490:		"labelKey" : "keyfigure.notification",
./results/git/stop_covid/issue_file_gitlab.txt:498:		"labelKey" : "keyfigure.qrcodes",
./results/git/stop_covid/issue_file_gitlab.txt:506:		"labelKey" : "keyfigure.nombrecas",
./results/git/stop_covid/issue_file_gitlab.txt:516:		"labelKey" : "keyfigure.reffectif",
./results/git/stop_covid/issue_file_gitlab.txt:528:		"labelKey" : "keyfigure.tauxincidence",
./results/git/stop_covid/issue_file_gitlab.txt:540:		"labelKey" : "keyfigure.tauxpositivite",
./results/git/stop_covid/issue_file_gitlab.txt:552:		"labelKey" : "keyfigure.tauxoccupation",
./results/git/stop_covid/issue_file_gitlab.txt:592:As far as I see it, StopCovid is trusting Google's app signing mechanism, which means that Google holds your signing key, right?
